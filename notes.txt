2/25 Notes:

Currently if I have expression:
    x = 3 + y--

My expression list looks as follows:
//    y
//    y--
//    3
//    3 + y--
    x = 3 + y--

    -- y returns itself
    -- y-- returns the temp and adds the expression y = y - 1


Should I be using temps so that it turns into: (ie turn every expression into an assignment)

$temp1 = y
y = y - 1
$temp2 = 3 + $temp1
x = temp2


temp3 = z
z = z - 1
temp4 = 3 - temp3
x = temp4

if(blah) {
    temp5 = z
    z = z + 1
    temp6 = 4 + temp5
}

x = 3 - z--
if(blah)
    x = 4 + z++;

y = x + z


-------------------------------------------------
3/4 Notes:


Update use-defs to have full expression -- hash table
TODO: Go top down and build gen set again adding edges from use to define

top-down
find all uses
look at def-use chains

-------------------------------------------------
3/11 Notes:

I changed the generation of the gen and kill set to be:

    for(int j = targets.size() - 1; j >= 0; j--) {
        Left target = targets.get(j);
        if(!gen.containsKey(target)) {
            gen.put(target, exp);
        } else {
            kill.put(target, exp);
        }
    }

Specifically changed the gen.containsKey from kill.containsKey.  This is what i want correct? Otherwise the kill set would get nothing in it.


In the PDG it shows dependencies for global variables, but they arent reset for each method.  I would want to do this correct?







