digraph G {
"6 : scan = new Scanner(System.in, )"
"8 : pointA = null"
"8 : pointB = null"
"9 : System.out.print(\"Which type of point should be created (1 for Cartesian, 2 for Polar)? \", )"
"10 : typeA = 0"
"13 : typeA = Integer.parseInt(scan.next(), )"
"13 : typeA = Integer.parseInt(scan.next(), )" -> "40 : typeA == 2"
"13 : typeA = Integer.parseInt(scan.next(), )" -> "19 : typeA == 1"
"19 : typeA == 1"
"15 : System.out.print(\"\nNot a valid input.\", )"
"16 : System.exit(1, )"
"20 : x = 0"
"20 : y = 0"
"22 : System.out.print(\"Enter x-coordinate: \", )"
"24 : x = Double.parseDouble(scan.next(), )"
"30 : System.out.print(\"Enter y-coordinate: \", )"
"26 : System.out.print(\"\nNot a valid input.\", )"
"27 : System.exit(1, )"
"32 : y = Double.parseDouble(scan.next(), )"
"32 : y = Double.parseDouble(scan.next(), )" -> "38 : pointA = new CartesianPoint(x, y, )"
"38 : pointA = new CartesianPoint(x, y, )"
"34 : System.out.print(\"\nNot a valid input.\", )"
"35 : System.exit(1, )"
"40 : typeA == 2"
"41 : radius = 0"
"41 : angle = 0"
"43 : System.out.print(\"Enter radius: \", )"
"45 : radius = Double.parseDouble(scan.next(), )"
"51 : System.out.print(\"Enter angle: \", )"
"47 : System.out.print(\"\nNot a valid input.\", )"
"48 : System.exit(1, )"
"53 : angle = Math.toRadians(Double.parseDouble(scan.next(), ), )"
"53 : angle = Math.toRadians(Double.parseDouble(scan.next(), ), )" -> "59 : pointA = new PolarPoint(radius, angle, )"
"59 : pointA = new PolarPoint(radius, angle, )"
"55 : System.out.print(\"\nNot a valid input.\", )"
"56 : System.exit(1, )"
"62 : System.out.print(\"\nNot a valid input.\", )"
"63 : System.exit(1, )"
"66 : System.out.print(\"Which type of point should be created (1 for Cartesian, 2 for Polar)? \", )"
"69 : typeA = Integer.parseInt(scan.next(), )"
"69 : typeA = Integer.parseInt(scan.next(), )" -> "96 : typeA == 2"
"69 : typeA = Integer.parseInt(scan.next(), )" -> "75 : typeA == 1"
"75 : typeA == 1"
"71 : System.out.print(\"\nNot a valid input.\", )"
"72 : System.exit(1, )"
"76 : x = 0"
"76 : y = 0"
"78 : System.out.print(\"Enter x-coordinate: \", )"
"80 : x = Double.parseDouble(scan.next(), )"
"86 : System.out.print(\"Enter y-coordinate: \", )"
"82 : System.out.print(\"\nNot a valid input.\", )"
"83 : System.exit(1, )"
"88 : y = Double.parseDouble(scan.next(), )"
"88 : y = Double.parseDouble(scan.next(), )" -> "94 : pointB = new CartesianPoint(x, y, )"
"94 : pointB = new CartesianPoint(x, y, )"
"94 : pointB = new CartesianPoint(x, y, )" -> "124 : sameQuad(pointA, pointB, )"
"94 : pointB = new CartesianPoint(x, y, )" -> "122 : distance = distance(pointA, pointB, )"
"90 : System.out.print(\"\nNot a valid input.\", )"
"91 : System.exit(1, )"
"96 : typeA == 2"
"97 : radius = 0"
"97 : angle = 0"
"99 : System.out.print(\"Enter radius: \", )"
"101 : radius = Double.parseDouble(scan.next(), )"
"107 : System.out.print(\"Enter angle: \", )"
"103 : System.out.print(\"\nNot a valid input.\", )"
"104 : System.exit(1, )"
"109 : angle = Math.toRadians(Double.parseDouble(scan.next(), ), )"
"109 : angle = Math.toRadians(Double.parseDouble(scan.next(), ), )" -> "115 : pointB = new PolarPoint(radius, angle, )"
"115 : pointB = new PolarPoint(radius, angle, )"
"115 : pointB = new PolarPoint(radius, angle, )" -> "124 : sameQuad(pointA, pointB, )"
"115 : pointB = new PolarPoint(radius, angle, )" -> "122 : distance = distance(pointA, pointB, )"
"111 : System.out.print(\"\nNot a valid input.\", )"
"112 : System.exit(1, )"
"118 : System.out.print(\"\nNot a valid input.\", )"
"119 : System.exit(1, )"
"122 : distance = distance(pointA, pointB, )"
"122 : distance = distance(pointA, pointB, )" -> "123 : System.out.print(\"Distance between points: \" + distance, )"
"123 : System.out.print(\"Distance between points: \" + distance, )"
"124 : sameQuad(pointA, pointB, )"
"125 : System.out.print(\"\nIn same quadrant.\n\", )"
"128 : System.out.print(\"\nNot in same quadrant.\n\", )"
}