digraph G {
"17 : this.expenses = new ArrayList()"
"18 : this.expensesFile = new File(\"StoredExpenses\", )"
"72 : in = new Scanner(System.in, )"
"73 : System.out.print(\"Expense type (in-full, partial)? \", )"
"74 : type = in.nextLine()"
"75 : type.equals(\"in-full\", ) || type.equals(\"partial\", )"
"77 : System.err.println(\"Error: Must be of type 'in-full' or 'partial'.\", )"
"82 : System.out.print(\"Payment date: \", )"
"83 : date = in.nextLine()"
"84 : df = new SimpleDateFormat(\"MM/dd/yyyy\", )"
"85 : d = null"
"88 : d = df.parse(date, )"
"88 : d = df.parse(date, )" -> "119 : this.expenses.add(new InFullExpense(d, category, payee, dollars, cents, ), )"
"88 : d = df.parse(date, )" -> "115 : this.expenses.add(new PartialExpense(d, category, payee, dollars, cents, dollarsRem, centsRem, ), )"
"88 : d = df.parse(date, )" -> "90 : c.setTime(d, )"
"89 : c = Calendar.getInstance()"
"90 : c.setTime(d, )"
"97 : System.out.print(\"Expense Amount: \", )"
"98 : amount = in.nextLine()"
"98 : amount = in.nextLine()" -> "98 : amount = in.nextLine()" [style=dashed]
"99 : parts = null"
"99 : parts = null" -> "100 : parts = amount.split(\"[.]\", )" [style=dashed]
"100 : parts = amount.split(\"[.]\", )"
"100 : parts = amount.split(\"[.]\", )" -> "99 : parts = null" [style=dashed]
"101 : dollars = Integer.parseInt(parts[0], )"
"101 : dollars = Integer.parseInt(parts[0], )" -> "119 : this.expenses.add(new InFullExpense(d, category, payee, dollars, cents, ), )"
"101 : dollars = Integer.parseInt(parts[0], )" -> "115 : this.expenses.add(new PartialExpense(d, category, payee, dollars, cents, dollarsRem, centsRem, ), )"
"101 : dollars = Integer.parseInt(parts[0], )" -> "101 : dollars = Integer.parseInt(parts[0], )" [style=dashed]
"102 : cents = Integer.parseInt(parts[1], )"
"102 : cents = Integer.parseInt(parts[1], )" -> "119 : this.expenses.add(new InFullExpense(d, category, payee, dollars, cents, ), )"
"102 : cents = Integer.parseInt(parts[1], )" -> "115 : this.expenses.add(new PartialExpense(d, category, payee, dollars, cents, dollarsRem, centsRem, ), )"
"102 : cents = Integer.parseInt(parts[1], )" -> "102 : cents = Integer.parseInt(parts[1], )" [style=dashed]
"103 : System.out.print(\"Who was this expense paid to? \", )"
"104 : payee = in.nextLine()"
"104 : payee = in.nextLine()" -> "119 : this.expenses.add(new InFullExpense(d, category, payee, dollars, cents, ), )"
"104 : payee = in.nextLine()" -> "115 : this.expenses.add(new PartialExpense(d, category, payee, dollars, cents, dollarsRem, centsRem, ), )"
"104 : payee = in.nextLine()" -> "104 : payee = in.nextLine()" [style=dashed]
"105 : System.out.print(\"Expense category: \", )"
"106 : category = in.nextLine()"
"106 : category = in.nextLine()" -> "119 : this.expenses.add(new InFullExpense(d, category, payee, dollars, cents, ), )"
"106 : category = in.nextLine()" -> "115 : this.expenses.add(new PartialExpense(d, category, payee, dollars, cents, dollarsRem, centsRem, ), )"
"106 : category = in.nextLine()" -> "106 : category = in.nextLine()" [style=dashed]
"107 : type.equals(\"partial\", )"
"94 : System.err.println(\"Error: Incorrect Date Format.\", )"
"109 : System.out.print(\"Expense Balance: \", )"
"110 : amountRem = in.nextLine()"
"110 : amountRem = in.nextLine()" -> "110 : amountRem = in.nextLine()" [style=dashed]
"111 : partsRem = null"
"111 : partsRem = null" -> "112 : partsRem = amountRem.split(\"[.]\", )" [style=dashed]
"112 : partsRem = amountRem.split(\"[.]\", )"
"112 : partsRem = amountRem.split(\"[.]\", )" -> "111 : partsRem = null" [style=dashed]
"113 : dollarsRem = Integer.parseInt(partsRem[0], )"
"113 : dollarsRem = Integer.parseInt(partsRem[0], )" -> "115 : this.expenses.add(new PartialExpense(d, category, payee, dollars, cents, dollarsRem, centsRem, ), )"
"113 : dollarsRem = Integer.parseInt(partsRem[0], )" -> "113 : dollarsRem = Integer.parseInt(partsRem[0], )" [style=dashed]
"114 : centsRem = Integer.parseInt(partsRem[1], )"
"114 : centsRem = Integer.parseInt(partsRem[1], )" -> "115 : this.expenses.add(new PartialExpense(d, category, payee, dollars, cents, dollarsRem, centsRem, ), )"
"114 : centsRem = Integer.parseInt(partsRem[1], )" -> "114 : centsRem = Integer.parseInt(partsRem[1], )" [style=dashed]
"115 : this.expenses.add(new PartialExpense(d, category, payee, dollars, cents, dollarsRem, centsRem, ), )"
"119 : this.expenses.add(new InFullExpense(d, category, payee, dollars, cents, ), )"
}