digraph G {
"106 : System.out.println(\"RecursiveOO Tests\", )"
"107 : System.out.println()"
"108 : System.out.println(\"General Tests\", )"
"109 : System.out.println()"
"110 : generalTest = new RecursiveOOStringList()"
"111 : generalTest.add(0, \"test0\", )"
"112 : generalTest.addToEnd(\"test1\", )"
"113 : generalTest.addToEnd(\"test3\", )"
"114 : generalTest.add(2, \"test2\", )"
"115 : Check.check(generalTest.size(), 4, )"
"116 : Check.check(generalTest.get(0, ), \"test0\", )"
"117 : Check.check(generalTest.indexOf(\"test3\", ), 3, )"
"118 : i = 0"
"118 : i = 0" -> "118 : i < generalTest.size()"
"118 : i = 0" -> "118 : @temp18 = i"
"118 : i = 0" -> "120 : System.out.println(generalTest.get(i, ), )"
"118 : i = 0" -> "118 : i = i + 1"
"118 : i = 0" -> "118 : i = i + 1" [style=dashed]
"118 : i < generalTest.size()"
"120 : System.out.println(generalTest.get(i, ), )"
"118 : @temp18 = i"
"118 : @temp18 = i" -> "118 : @temp18 = i" [style=dashed]
"118 : i = i + 1"
"118 : i = i + 1" -> "118 : i < generalTest.size()"
"118 : i = i + 1" -> "118 : @temp18 = i"
"118 : i = i + 1" -> "120 : System.out.println(generalTest.get(i, ), )"
"118 : i = i + 1" -> "118 : i = i + 1"
"118 : i = i + 1" -> "118 : i = i + 1" [style=dashed]
"122 : System.out.println()"
"124 : generalTest.remove(0, )"
"125 : i = 0"
"125 : i = 0" -> "127 : System.out.println(generalTest.get(i, ), )"
"125 : i = 0" -> "125 : @temp19 = i"
"125 : i = 0" -> "125 : i < generalTest.size()"
"125 : i = 0" -> "125 : i = i + 1"
"125 : i = 0" -> "125 : i = i + 1" [style=dashed]
"125 : i < generalTest.size()"
"127 : System.out.println(generalTest.get(i, ), )"
"125 : @temp19 = i"
"125 : @temp19 = i" -> "125 : @temp19 = i" [style=dashed]
"125 : i = i + 1"
"125 : i = i + 1" -> "127 : System.out.println(generalTest.get(i, ), )"
"125 : i = i + 1" -> "125 : @temp19 = i"
"125 : i = i + 1" -> "125 : i < generalTest.size()"
"125 : i = i + 1" -> "125 : i = i + 1"
"125 : i = i + 1" -> "125 : i = i + 1" [style=dashed]
"129 : Check.check(generalTest.indexOf(\"test1\", ), 0, )"
"130 : System.out.println()"
"132 : generalTest.remove(2, )"
"133 : i = 0"
"133 : i = 0" -> "133 : i < generalTest.size()"
"133 : i = 0" -> "133 : @temp20 = i"
"133 : i = 0" -> "133 : i = i + 1"
"133 : i = 0" -> "135 : System.out.println(generalTest.get(i, ), )"
"133 : i = 0" -> "133 : i = i + 1" [style=dashed]
"133 : i < generalTest.size()"
"135 : System.out.println(generalTest.get(i, ), )"
"133 : @temp20 = i"
"133 : @temp20 = i" -> "133 : @temp20 = i" [style=dashed]
"133 : i = i + 1"
"133 : i = i + 1" -> "133 : i < generalTest.size()"
"133 : i = i + 1" -> "133 : @temp20 = i"
"133 : i = i + 1" -> "133 : i = i + 1"
"133 : i = i + 1" -> "135 : System.out.println(generalTest.get(i, ), )"
"133 : i = i + 1" -> "133 : i = i + 1" [style=dashed]
"137 : System.out.println()"
"139 : System.out.println(\"Upper to Lower Test\", )"
"140 : testToLower = new RecursiveOOStringList()"
"141 : testToLower.addToEnd(\"TEST0\", )"
"142 : testToLower.addToEnd(\"TEST1\", )"
"143 : testToLower.addToEnd(\"TEST2\", )"
"144 : testToLower.addToEnd(\"TEST3\", )"
"145 : size = testToLower.size()"
"145 : size = testToLower.size()" -> "170 : i < size"
"145 : size = testToLower.size()" -> "165 : i < size"
"145 : size = testToLower.size()" -> "151 : i < size"
"145 : size = testToLower.size()" -> "146 : i < size"
"146 : i = 0"
"146 : i = 0" -> "148 : System.out.println(testToLower.get(i, ), )"
"146 : i = 0" -> "146 : i < size"
"146 : i = 0" -> "146 : i = i + 1"
"146 : i = 0" -> "146 : @temp21 = i"
"146 : i = 0" -> "146 : i = i + 1" [style=dashed]
"146 : i < size"
"148 : System.out.println(testToLower.get(i, ), )"
"146 : @temp21 = i"
"146 : @temp21 = i" -> "146 : @temp21 = i" [style=dashed]
"146 : i = i + 1"
"146 : i = i + 1" -> "148 : System.out.println(testToLower.get(i, ), )"
"146 : i = i + 1" -> "146 : i < size"
"146 : i = i + 1" -> "146 : i = i + 1"
"146 : i = i + 1" -> "146 : @temp21 = i"
"146 : i = i + 1" -> "146 : i = i + 1" [style=dashed]
"150 : System.out.println()"
"151 : i = 0"
"151 : i = 0" -> "151 : @temp22 = i"
"151 : i = 0" -> "151 : i < size"
"151 : i = 0" -> "155 : System.out.println(lower.get(i, ), )"
"151 : i = 0" -> "151 : i = i + 1"
"151 : i = 0" -> "151 : i = i + 1" [style=dashed]
"151 : i < size"
"153 : lower = new RecursiveOOStringList()"
"153 : lower = new RecursiveOOStringList()" -> "154 : lower = testToLower.toLowerCase()" [style=dashed]
"154 : lower = testToLower.toLowerCase()"
"154 : lower = testToLower.toLowerCase()" -> "153 : lower = new RecursiveOOStringList()" [style=dashed]
"155 : System.out.println(lower.get(i, ), )"
"151 : @temp22 = i"
"151 : @temp22 = i" -> "151 : @temp22 = i" [style=dashed]
"151 : i = i + 1"
"151 : i = i + 1" -> "151 : @temp22 = i"
"151 : i = i + 1" -> "151 : i < size"
"151 : i = i + 1" -> "155 : System.out.println(lower.get(i, ), )"
"151 : i = i + 1" -> "151 : i = i + 1"
"151 : i = i + 1" -> "151 : i = i + 1" [style=dashed]
"157 : System.out.println()"
"159 : System.out.println(\"Lower to Upper Test\", )"
"160 : testToUpper = new RecursiveOOStringList()"
"161 : testToUpper.addToEnd(\"test0\", )"
"162 : testToUpper.addToEnd(\"test1\", )"
"163 : testToUpper.addToEnd(\"test2\", )"
"164 : testToUpper.addToEnd(\"test3\", )"
"165 : i = 0"
"165 : i = 0" -> "165 : i < size"
"165 : i = 0" -> "165 : i = i + 1"
"165 : i = 0" -> "167 : System.out.println(testToUpper.get(i, ), )"
"165 : i = 0" -> "165 : @temp23 = i"
"165 : i = 0" -> "165 : i = i + 1" [style=dashed]
"165 : i < size"
"167 : System.out.println(testToUpper.get(i, ), )"
"165 : @temp23 = i"
"165 : @temp23 = i" -> "165 : @temp23 = i" [style=dashed]
"165 : i = i + 1"
"165 : i = i + 1" -> "165 : i < size"
"165 : i = i + 1" -> "165 : i = i + 1"
"165 : i = i + 1" -> "167 : System.out.println(testToUpper.get(i, ), )"
"165 : i = i + 1" -> "165 : @temp23 = i"
"165 : i = i + 1" -> "165 : i = i + 1" [style=dashed]
"169 : System.out.println()"
"170 : i = 0"
"170 : i = 0" -> "170 : i < size"
"170 : i = 0" -> "170 : @temp24 = i"
"170 : i = 0" -> "170 : i = i + 1"
"170 : i = 0" -> "174 : System.out.println(upper.get(i, ), )"
"170 : i = 0" -> "170 : i = i + 1" [style=dashed]
"170 : i < size"
"172 : upper = new RecursiveOOStringList()"
"172 : upper = new RecursiveOOStringList()" -> "173 : upper = testToUpper.toUpperCase()" [style=dashed]
"173 : upper = testToUpper.toUpperCase()"
"173 : upper = testToUpper.toUpperCase()" -> "172 : upper = new RecursiveOOStringList()" [style=dashed]
"174 : System.out.println(upper.get(i, ), )"
"170 : @temp24 = i"
"170 : @temp24 = i" -> "170 : @temp24 = i" [style=dashed]
"170 : i = i + 1"
"170 : i = i + 1" -> "170 : i < size"
"170 : i = i + 1" -> "170 : @temp24 = i"
"170 : i = i + 1" -> "170 : i = i + 1"
"170 : i = i + 1" -> "174 : System.out.println(upper.get(i, ), )"
"170 : i = i + 1" -> "170 : i = i + 1" [style=dashed]
"176 : System.out.println()"
"178 : System.out.println(\"Starts With 'Yes' Test\", )"
"179 : testStartsWith = new RecursiveOOStringList()"
"179 : testStartsWith = new RecursiveOOStringList()" -> "184 : testStartsWith = testStartsWith.startsWith(\"yes\", )" [style=dashed]
"180 : testStartsWith.addToEnd(\"yes\", )"
"181 : testStartsWith.addToEnd(\"no\", )"
"182 : testStartsWith.addToEnd(\"yessir\", )"
"183 : testStartsWith.addToEnd(\"nosir\", )"
"184 : testStartsWith = testStartsWith.startsWith(\"yes\", )"
"185 : i = 0"
"185 : i = 0" -> "185 : i < testStartsWith.size()"
"185 : i = 0" -> "185 : i = i + 1"
"185 : i = 0" -> "185 : @temp25 = i"
"185 : i = 0" -> "187 : System.out.println(testStartsWith.get(i, ), )"
"185 : i = 0" -> "185 : i = i + 1" [style=dashed]
"185 : i < testStartsWith.size()"
"187 : System.out.println(testStartsWith.get(i, ), )"
"185 : @temp25 = i"
"185 : @temp25 = i" -> "185 : @temp25 = i" [style=dashed]
"185 : i = i + 1"
"185 : i = i + 1" -> "185 : i < testStartsWith.size()"
"185 : i = i + 1" -> "185 : i = i + 1"
"185 : i = i + 1" -> "185 : @temp25 = i"
"185 : i = i + 1" -> "187 : System.out.println(testStartsWith.get(i, ), )"
"185 : i = i + 1" -> "185 : i = i + 1" [style=dashed]
"189 : System.out.println()"
"191 : System.out.println(\"Substring 'Sir' Test\", )"
"192 : testSubstring = new RecursiveOOStringList()"
"192 : testSubstring = new RecursiveOOStringList()" -> "197 : testSubstring = testSubstring.hasSubstring(\"sir\", )" [style=dashed]
"193 : testSubstring.addToEnd(\"yes\", )"
"194 : testSubstring.addToEnd(\"no\", )"
"195 : testSubstring.addToEnd(\"yessir\", )"
"196 : testSubstring.addToEnd(\"nosir\", )"
"197 : testSubstring = testSubstring.hasSubstring(\"sir\", )"
"198 : i = 0"
"198 : i = 0" -> "198 : i = i + 1"
"198 : i = 0" -> "200 : System.out.println(testSubstring.get(i, ), )"
"198 : i = 0" -> "198 : @temp26 = i"
"198 : i = 0" -> "198 : i < testSubstring.size()"
"198 : i = 0" -> "198 : i = i + 1" [style=dashed]
"198 : i < testSubstring.size()"
"200 : System.out.println(testSubstring.get(i, ), )"
"198 : @temp26 = i"
"198 : @temp26 = i" -> "198 : @temp26 = i" [style=dashed]
"198 : i = i + 1"
"198 : i = i + 1" -> "198 : i = i + 1"
"198 : i = i + 1" -> "200 : System.out.println(testSubstring.get(i, ), )"
"198 : i = i + 1" -> "198 : @temp26 = i"
"198 : i = i + 1" -> "198 : i < testSubstring.size()"
"198 : i = i + 1" -> "198 : i = i + 1" [style=dashed]
"202 : System.out.println()"
"203 : System.out.println()"
}