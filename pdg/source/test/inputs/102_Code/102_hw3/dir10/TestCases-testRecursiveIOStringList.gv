digraph G {
"73 : testList = new RecursiveIOStringList()"
"74 : Check.check(testList.size(), 0, )"
"75 : testList.addToEnd(\"Hello\", )"
"76 : Check.check(testList.get(0, ), \"Hello\", )"
"77 : testList.addToEnd(\"Dinosaur\", )"
"78 : Check.check(testList.get(0, ), \"Hello\", )"
"79 : Check.check(testList.get(1, ), \"Dinosaur\", )"
"80 : testList.add(2, \"Blue\", )"
"81 : Check.check(testList.get(2, ), \"Blue\", )"
"82 : testList.add(0, \"Twinkle\", )"
"83 : Check.check(testList.get(0, ), \"Twinkle\", )"
"84 : testList.add(4, \"Zebra\", )"
"85 : Check.check(testList.get(4, ), \"Zebra\", )"
"86 : Check.check(testList.size(), 5, )"
"87 : testList.get(0, )"
"88 : Check.check(testList.get(0, ), \"Twinkle\", )"
"89 : t1 = new RecursiveIOStringList()"
"89 : t1 = new RecursiveIOStringList()" -> "90 : t1 = testList.toLowerCase()" [style=dashed]
"90 : t1 = testList.toLowerCase()"
"91 : Check.check(t1.get(0, ), \"twinkle\", )"
"92 : Check.check(t1.get(1, ), \"hello\", )"
"93 : Check.check(t1.get(2, ), \"dinosaur\", )"
"94 : Check.check(t1.get(3, ), \"blue\", )"
"95 : Check.check(t1.get(4, ), \"zebra\", )"
"96 : Check.check(t1.size(), 5, )"
"97 : t2 = new RecursiveIOStringList()"
"97 : t2 = new RecursiveIOStringList()" -> "98 : t2 = testList.toUpperCase()" [style=dashed]
"98 : t2 = testList.toUpperCase()"
"99 : Check.check(t2.get(0, ), \"TWINKLE\", )"
"100 : Check.check(t2.get(1, ), \"HELLO\", )"
"101 : Check.check(t2.get(2, ), \"DINOSAUR\", )"
"102 : Check.check(t2.get(3, ), \"BLUE\", )"
"103 : Check.check(t2.get(4, ), \"ZEBRA\", )"
"104 : Check.check(t2.size(), 5, )"
"105 : t3 = new RecursiveIOStringList()"
"105 : t3 = new RecursiveIOStringList()" -> "106 : t3 = testList.startsWith(\"Z\", )" [style=dashed]
"106 : t3 = testList.startsWith(\"Z\", )"
"107 : Check.check(t3.get(0, ), \"Zebra\", )"
"108 : Check.check(t3.size(), 1, )"
"109 : t4 = new RecursiveIOStringList()"
"109 : t4 = new RecursiveIOStringList()" -> "110 : t4 = testList.hasSubstring(\"n\", )" [style=dashed]
"110 : t4 = testList.hasSubstring(\"n\", )"
"111 : Check.check(t4.get(0, ), \"Twinkle\", )"
"112 : Check.check(t4.get(1, ), \"Dinosaur\", )"
"113 : Check.check(t4.size(), 2, )"
"114 : Check.check(testList.remove(0, ), \"Twinkle\", )"
"115 : testList.remove(0, )"
"116 : i = 0"
"116 : i = 0" -> "116 : i = i + 1"
"116 : i = 0" -> "117 : System.out.println(testList.get(i, ), )"
"116 : i = 0" -> "116 : @temp6 = i"
"116 : i = 0" -> "116 : i < testList.size()"
"116 : i = 0" -> "116 : i = i + 1" [style=dashed]
"116 : i < testList.size()"
"117 : System.out.println(testList.get(i, ), )"
"116 : @temp6 = i"
"116 : @temp6 = i" -> "116 : @temp6 = i" [style=dashed]
"116 : i = i + 1"
"116 : i = i + 1" -> "116 : i = i + 1"
"116 : i = i + 1" -> "117 : System.out.println(testList.get(i, ), )"
"116 : i = i + 1" -> "116 : @temp6 = i"
"116 : i = i + 1" -> "116 : i < testList.size()"
"116 : i = i + 1" -> "116 : i = i + 1" [style=dashed]
"119 : Check.check(testList.get(0, ), \"Hello\", )"
}