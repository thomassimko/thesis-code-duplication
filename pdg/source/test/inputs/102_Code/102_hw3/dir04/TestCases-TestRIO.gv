digraph G {
"124 : test1 = new RecursiveIOList()"
"127 : test1.addToEnd(\"This\", )"
"128 : test1.addToEnd(\"Code\", )"
"129 : test1.addToEnd(\"is\", )"
"130 : test1.addToEnd(\"Done\", )"
"132 : Check.check(test1.size(), 4, )"
"134 : Check.check(test1.get(1, ), \"This\", )"
"135 : Check.check(test1.get(2, ), \"Code\", )"
"136 : Check.check(test1.get(3, ), \"is\", )"
"137 : Check.check(test1.get(4, ), \"Done\", )"
"139 : Check.check(test1.indexOf(\"Lion\", ), 3, )"
"140 : Check.check(test1.indexOf(\"Cal\", ), 1, )"
"142 : Check.check(test1.remove(2, ), \"Code\", )"
"143 : Check.check(test1.get(1, ), \"This\", )"
"144 : Check.check(test1.get(2, ), \"is\", )"
"145 : Check.check(test1.get(3, ), \"Done\", )"
"147 : test1.add(2, \"Code\", )"
"148 : Check.check(test1.get(1, ), \"This\", )"
"149 : Check.check(test1.get(2, ), \"Code\", )"
"150 : Check.check(test1.get(3, ), \"is\", )"
"151 : Check.check(test1.get(4, ), \"Done\", )"
"153 : test1Low = test1.toLowerCase()"
"154 : Check.check(test1Low.get(1, ), \"this\", )"
"155 : Check.check(test1Low.get(2, ), \"code\", )"
"157 : test1High = test1.toUpperCase()"
"158 : Check.check(test1High.get(3, ), \"IS\", )"
"159 : Check.check(test1High.get(4, ), \"DONE\", )"
"161 : test1.addToEnd(\"This Code\", )"
"162 : test1.addToEnd(\"is Done\", )"
"164 : Check.check(test1.get(5, ), \"This Code\", )"
"165 : Check.check(test1.get(6, ), \"is Done\", )"
"167 : test1Pre = test1.startsWith(\"Th\", )"
"168 : Check.check(test1Pre.get(1, ), \"This\", )"
"169 : Check.check(test1Pre.get(2, ), \"This Code\", )"
"171 : test1Pre2 = test1.startsWith(\"i\", )"
"172 : Check.check(test1Pre2.get(1, ), \"is\", )"
"173 : Check.check(test1Pre2.get(2, ), \"is Done\", )"
"175 : test1Sub = test1.hasSubstring(\"is\", )"
"176 : Check.check(test1Sub.get(1, ), \"This\", )"
"177 : Check.check(test1Sub.get(2, ), \"is\", )"
"178 : Check.check(test1Sub.get(3, ), \"This Code\", )"
"179 : Check.check(test1Sub.get(4, ), \"is Done\", )"
}