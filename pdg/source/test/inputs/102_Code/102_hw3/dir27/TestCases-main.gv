digraph G {
"5 : list = new IterativeStringList()"
"6 : list.addToEnd(\"hello\", )"
"7 : list.addToEnd(\"yo\", )"
"8 : list.addToEnd(\"hi\", )"
"9 : list.add(3, \"fourth\", )"
"10 : list.add(3, \"newfourth\", )"
"11 : Check.check(list.get(0, ), \"hello\", )"
"12 : Check.check(list.get(1, ), \"yo\", )"
"13 : Check.check(list.get(2, ), \"hi\", )"
"14 : Check.check(list.get(3, ), \"newfourth\", )"
"15 : Check.check(list.get(4, ), \"fourth\", )"
"16 : Check.check(list.remove(0, ), \"hello\", )"
"17 : Check.check(list.remove(0, ), \"yo\", )"
"18 : Check.check(list.remove(0, ), \"hi\", )"
"19 : upper = list.toUpperCase()"
"20 : Check.check(upper.get(0, ), \"NEWFOURTH\", )"
"21 : Check.check(upper.get(1, ), \"FOURTH\", )"
"22 : contains = list.hasSubstring(\"four\", )"
"23 : Check.check(contains.get(0, ), \"newfourth\", )"
"24 : Check.check(contains.get(1, ), \"fourth\", )"
"26 : OO = new RecursiveOOStringList()"
"27 : OO.addToEnd(\"hello2\", )"
"28 : Check.check(OO.get(0, ), \"hello2\", )"
"29 : Check.check(OO.remove(0, ), \"hello2\", )"
"30 : OO.addToEnd(\"hello2\", )"
"31 : OO.addToEnd(\"hello3\", )"
"32 : OO.addToEnd(\"hello4\", )"
"33 : OO.add(1, \"between\", )"
"34 : Check.check(OO.get(0, ), \"hello2\", )"
"35 : Check.check(OO.get(1, ), \"between\", )"
"36 : Check.check(OO.get(2, ), \"hello3\", )"
"37 : Check.check(OO.remove(1, ), \"between\", )"
"38 : Check.check(OO.get(1, ), \"hello3\", )"
"39 : Check.check(OO.remove(0, ), \"hello2\", )"
"40 : Check.check(OO.get(0, ), \"hello3\", )"
"41 : Check.check(OO.indexOf(\"hello4\", ), 1, )"
"42 : Check.check(OO.remove(1, ), \"hello4\", )"
"43 : Check.check(OO.remove(0, ), \"hello3\", )"
"44 : OO.addToEnd(\"fourth\", )"
"45 : OO.addToEnd(\"newfourth\", )"
"46 : OO.addToEnd(\"hello\", )"
"47 : contains2 = OO.hasSubstring(\"four\", )"
"48 : Check.check(contains2.get(0, ), \"fourth\", )"
"49 : Check.check(contains2.get(1, ), \"newfourth\", )"
"50 : Check.check(contains2.size(), 2, )"
"52 : IO = new RecursiveIOStringList()"
"53 : IO.addToEnd(\"hello\", )"
"54 : Check.check(IO.get(0, ), \"hello\", )"
"55 : Check.check(IO.remove(0, ), \"hello\", )"
"56 : IO.addToEnd(\"zerO\", )"
"57 : IO.addToEnd(\"onE\", )"
"58 : IO.addToEnd(\"TWO\", )"
"59 : IO.add(2, \"NEW1\", )"
"60 : Check.check(IO.get(0, ), \"zerO\", )"
"61 : Check.check(IO.get(1, ), \"onE\", )"
"62 : Check.check(IO.get(2, ), \"NEW1\", )"
"63 : Check.check(IO.get(3, ), \"TWO\", )"
"64 : Check.check(IO.indexOf(\"TWO\", ), 3, )"
"65 : Check.check(IO.size(), 4, )"
"66 : Check.check(IO.remove(3, ), \"TWO\", )"
"67 : lower2 = IO.toLowerCase()"
"68 : Check.check(lower2.get(0, ), \"zero\", )"
"69 : Check.check(lower2.get(1, ), \"one\", )"
"70 : Check.check(lower2.get(2, ), \"new1\", )"
"71 : IA = new RecursiveIOStringList()"
"72 : IA.addToEnd(\"fourth\", )"
"73 : IA.addToEnd(\"newfourth\", )"
"74 : IA.addToEnd(\"hello\", )"
"75 : contains3 = IA.hasSubstring(\"four\", )"
"76 : Check.check(contains3.get(0, ), \"fourth\", )"
"77 : Check.check(contains3.get(1, ), \"newfourth\", )"
"78 : Check.check(contains3.size(), 2, )"
}