digraph G {
"3 : this.first = null"
"3 : this.first = null" -> "20 : node = this.first"
"20 : node = this.first"
"20 : node = this.first" -> "23 : node = node.getNext()" [style=dashed]
"21 : i = 0"
"21 : i = 0" -> "24 : i = i + 1"
"21 : i = 0" -> "24 : @temp1 = i"
"21 : i = 0" -> "22 : i < index && node.getNext() != null"
"21 : i = 0" -> "26 : i == index"
"21 : i = 0" -> "24 : i = i + 1" [style=dashed]
"22 : i < index && node.getNext() != null"
"23 : node = node.getNext()"
"23 : node = node.getNext()" -> "23 : node = node.getNext()" [style=dashed]
"24 : @temp1 = i"
"24 : @temp1 = i" -> "24 : @temp1 = i" [style=dashed]
"24 : i = i + 1"
"24 : i = i + 1" -> "24 : i = i + 1"
"24 : i = i + 1" -> "24 : @temp1 = i"
"24 : i = i + 1" -> "22 : i < index && node.getNext() != null"
"24 : i = i + 1" -> "26 : i == index"
"24 : i = i + 1" -> "24 : i = i + 1" [style=dashed]
"22 : i < index && node.getNext() != null"
"26 : i == index"
"27 : next = node.getNext()"
"27 : next = node.getNext()" -> "29 : node.setNext(next, )"
"28 : node.setString(element, )"
"29 : node.setNext(next, )"
"31 : new IndexOutOfBoundsException()"
}