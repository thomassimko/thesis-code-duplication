digraph G {
"5 : binder = new VariableBindings()"
"5 : binder = new VariableBindings()" -> "15 : Check.check(one.evaluate(binder, ), 1.0, )"
"5 : binder = new VariableBindings()" -> "29 : x.evaluate(binder, )"
"5 : binder = new VariableBindings()" -> "39 : Check.check(subtract.evaluate(binder, ), 1.0, )"
"5 : binder = new VariableBindings()" -> "25 : y.evaluate(binder, )"
"5 : binder = new VariableBindings()" -> "53 : Check.check(evaluate(binder, ), 13.0 * 7.0, )"
"5 : binder = new VariableBindings()" -> "33 : Check.check(idx.evaluate(binder, ), 7.0, )"
"5 : binder = new VariableBindings()" -> "21 : x.evaluate(binder, )"
"5 : binder = new VariableBindings()" -> "51 : Check.check(comp.evaluate(binder, ), 13.0, )"
"5 : binder = new VariableBindings()" -> "17 : Check.check(three.evaluate(binder, ), 3.0, )"
"5 : binder = new VariableBindings()" -> "36 : Check.check(add.evaluate(binder, ), 3.0, )"
"5 : binder = new VariableBindings()" -> "45 : Check.check(div.evaluate(binder, ), 2.0, )"
"5 : binder = new VariableBindings()" -> "42 : Check.check(Mult.evaluate(binder, ), 12.0, )"
"5 : binder = new VariableBindings()" -> "48 : Check.check(neg.evaluate(binder, ), 1.0, )"
"5 : binder = new VariableBindings()" -> "16 : Check.check(two.evaluate(binder, ), 2.0, )"
"5 : binder = new VariableBindings()" -> "18 : Check.check(four.evaluate(binder, ), 4.0, )"
"7 : one = new DoubleConstantExpression(1.0, )"
"7 : one = new DoubleConstantExpression(1.0, )" -> "38 : subtract = new SubtractExpression(two, one, )"
"7 : one = new DoubleConstantExpression(1.0, )" -> "35 : add = new AddExpression(one, two, )"
"7 : one = new DoubleConstantExpression(1.0, )" -> "47 : neg = new NegationExpression(one, )"
"7 : one = new DoubleConstantExpression(1.0, )" -> "50 : comp = new AddExpression(one, Mult, )"
"8 : two = new DoubleConstantExpression(2.0, )"
"8 : two = new DoubleConstantExpression(2.0, )" -> "38 : subtract = new SubtractExpression(two, one, )"
"8 : two = new DoubleConstantExpression(2.0, )" -> "35 : add = new AddExpression(one, two, )"
"8 : two = new DoubleConstantExpression(2.0, )" -> "44 : div = new DivideExpression(four, two, )"
"9 : three = new DoubleConstantExpression(3.0, )"
"9 : three = new DoubleConstantExpression(3.0, )" -> "41 : Mult = new MultiplyExpression(three, four, )"
"10 : four = new DoubleConstantExpression(4.0, )"
"10 : four = new DoubleConstantExpression(4.0, )" -> "41 : Mult = new MultiplyExpression(three, four, )"
"10 : four = new DoubleConstantExpression(4.0, )" -> "44 : div = new DivideExpression(four, two, )"
"13 : Check.check(2.0, 2.0, )"
"15 : Check.check(one.evaluate(binder, ), 1.0, )"
"16 : Check.check(two.evaluate(binder, ), 2.0, )"
"17 : Check.check(three.evaluate(binder, ), 3.0, )"
"18 : Check.check(four.evaluate(binder, ), 4.0, )"
"20 : x = new Assignment(\"x\", new DoubleConstantExpression(5.0, ), )"
"20 : x = new Assignment(\"x\", new DoubleConstantExpression(5.0, ), )" -> "28 : x = new Assignment(\"x\", new DoubleConstantExpression(7.0, ), )" [style=dashed]
"21 : x.evaluate(binder, )"
"22 : Check.check(binder.lookupBinding(\"x\", ), 5.0, )"
"24 : y = new Assignment(\"y\", new DoubleConstantExpression(6.0, ), )"
"25 : y.evaluate(binder, )"
"26 : Check.check(binder.lookupBinding(\"y\", ), 6.0, )"
"28 : x = new Assignment(\"x\", new DoubleConstantExpression(7.0, ), )"
"29 : x.evaluate(binder, )"
"30 : Check.check(binder.lookupBinding(\"x\", ), 7.0, )"
"32 : idx = new IdentifierExpression(\"x\", )"
"33 : Check.check(idx.evaluate(binder, ), 7.0, )"
"35 : add = new AddExpression(one, two, )"
"36 : Check.check(add.evaluate(binder, ), 3.0, )"
"38 : subtract = new SubtractExpression(two, one, )"
"39 : Check.check(subtract.evaluate(binder, ), 1.0, )"
"41 : Mult = new MultiplyExpression(three, four, )"
"41 : Mult = new MultiplyExpression(three, four, )" -> "50 : comp = new AddExpression(one, Mult, )"
"42 : Check.check(Mult.evaluate(binder, ), 12.0, )"
"44 : div = new DivideExpression(four, two, )"
"45 : Check.check(div.evaluate(binder, ), 2.0, )"
"47 : neg = new NegationExpression(one, )"
"48 : Check.check(neg.evaluate(binder, ), 1.0, )"
"50 : comp = new AddExpression(one, Mult, )"
"51 : Check.check(comp.evaluate(binder, ), 13.0, )"
"53 : Check.check(evaluate(binder, ), 13.0 * 7.0, )"
"55 : Check.check(neg.toString(), \"-1.0\", )"
"56 : Check.check(add.toString(), \"(1.0 + 2.0)\", )"
"57 : Check.check(subtract.toString(), \"(2.0 - 1.0)\", )"
"58 : Check.check(Mult.toString(), \"(3.0 * 4.0)\", )"
"59 : Check.check(div.toString(), \"(4.0 / 2.0)\", )"
"60 : Check.check(comp.toString(), \"(1.0 + (3.0 * 4.0))\", )"
"61 : Check.check(toString(), \"((1.0 + (3.0 * 4.0)) * x)\", )"
"62 : Check.check(idx.toString(), \"x\", )"
"63 : Check.check(toString(), \"-x\", )"
"64 : Check.check(toString(), \"-(1.0 + (3.0 * 4.0))\", )"
}