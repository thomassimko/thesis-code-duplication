digraph G {
"5 : bTest = new VariableBindings()"
"5 : bTest = new VariableBindings()" -> "54 : Check.check(expTest.evaluate(bTest, ), 2.5, )"
"5 : bTest = new VariableBindings()" -> "34 : Check.check(expTest.evaluate(bTest, ), 1.0, )"
"5 : bTest = new VariableBindings()" -> "36 : Check.check(expTest.evaluate(bTest, ), 5.0, )"
"5 : bTest = new VariableBindings()" -> "31 : Check.check(exp3.evaluate(bTest, ), 1.2, )"
"5 : bTest = new VariableBindings()" -> "46 : Check.check(expTest.evaluate(bTest, ), 3.8, )"
"5 : bTest = new VariableBindings()" -> "59 : Check.check(expTest.evaluate(bTest, ), 1.0, )"
"5 : bTest = new VariableBindings()" -> "63 : Check.check(expTest.evaluate(bTest, ), 1.4, )"
"5 : bTest = new VariableBindings()" -> "56 : Check.check(expTest.evaluate(bTest, ), 2.0, )"
"5 : bTest = new VariableBindings()" -> "25 : Check.check(assignTest.evaluate(bTest, ), 2.5, )"
"5 : bTest = new VariableBindings()" -> "22 : Check.check(assignTest.evaluate(bTest, ), 1.0, )"
"5 : bTest = new VariableBindings()" -> "51 : Check.check(expTest.evaluate(bTest, ), 3.0, )"
"5 : bTest = new VariableBindings()" -> "65 : Check.check(expTest.evaluate(bTest, ), 2.75, )"
"5 : bTest = new VariableBindings()" -> "44 : Check.check(expTest.evaluate(bTest, ), 1.5, )"
"5 : bTest = new VariableBindings()" -> "49 : Check.check(expTest.evaluate(bTest, ), 2.5, )"
"5 : bTest = new VariableBindings()" -> "39 : Check.check(expTest.evaluate(bTest, ), 3.5, )"
"5 : bTest = new VariableBindings()" -> "41 : Check.check(expTest.evaluate(bTest, ), 4.0, )"
"5 : bTest = new VariableBindings()" -> "30 : Check.check(exp1.evaluate(bTest, ), 1.0, )"
"5 : bTest = new VariableBindings()" -> "61 : Check.check(expTest.evaluate(bTest, ), 1.0, )"
"7 : bTest.addBinding(\"a\", 1.0, )"
"8 : bTest.addBinding(\"b\", 2.75, )"
"9 : bTest.addBinding(\"c\", 0.7 * 2, )"
"10 : Check.check(bTest.lookupBinding(\"a\", ), 1.0, )"
"11 : Check.check(bTest.lookupBinding(\"b\", ), 2.75, )"
"12 : Check.check(bTest.lookupBinding(\"c\", ), 1.4, )"
"14 : exp1 = new DoubleConstantExpression(1.0, )"
"14 : exp1 = new DoubleConstantExpression(1.0, )" -> "33 : expTest = new NegationExpression(exp1, )"
"14 : exp1 = new DoubleConstantExpression(1.0, )" -> "38 : expTest = new AddExpression(exp1, exp2, )"
"14 : exp1 = new DoubleConstantExpression(1.0, )" -> "40 : expTest = new AddExpression(exp1, exp4, )"
"14 : exp1 = new DoubleConstantExpression(1.0, )" -> "21 : assignTest = new Assignment(\"d\", exp1, )"
"14 : exp1 = new DoubleConstantExpression(1.0, )" -> "43 : expTest = new SubtractExpression(exp2, exp1, )"
"14 : exp1 = new DoubleConstantExpression(1.0, )" -> "48 : expTest = new MultiplyExpression(exp1, exp2, )"
"14 : exp1 = new DoubleConstantExpression(1.0, )" -> "53 : expTest = new DivideExpression(exp2, exp1, )"
"15 : exp2 = new DoubleConstantExpression(2.5, )"
"15 : exp2 = new DoubleConstantExpression(2.5, )" -> "24 : assignTest = new Assignment(\"blub\", exp2, )"
"15 : exp2 = new DoubleConstantExpression(2.5, )" -> "38 : expTest = new AddExpression(exp1, exp2, )"
"15 : exp2 = new DoubleConstantExpression(2.5, )" -> "43 : expTest = new SubtractExpression(exp2, exp1, )"
"15 : exp2 = new DoubleConstantExpression(2.5, )" -> "48 : expTest = new MultiplyExpression(exp1, exp2, )"
"15 : exp2 = new DoubleConstantExpression(2.5, )" -> "50 : expTest = new MultiplyExpression(exp2, exp3, )"
"15 : exp2 = new DoubleConstantExpression(2.5, )" -> "53 : expTest = new DivideExpression(exp2, exp1, )"
"15 : exp2 = new DoubleConstantExpression(2.5, )" -> "55 : expTest = new DivideExpression(exp4, exp2, )"
"16 : exp3 = new DoubleConstantExpression(-1.2, )"
"16 : exp3 = new DoubleConstantExpression(-1.2, )" -> "45 : expTest = new SubtractExpression(exp3, exp4, )"
"16 : exp3 = new DoubleConstantExpression(-1.2, )" -> "50 : expTest = new MultiplyExpression(exp2, exp3, )"
"17 : exp4 = new DoubleConstantExpression(-5.0, )"
"17 : exp4 = new DoubleConstantExpression(-5.0, )" -> "40 : expTest = new AddExpression(exp1, exp4, )"
"17 : exp4 = new DoubleConstantExpression(-5.0, )" -> "45 : expTest = new SubtractExpression(exp3, exp4, )"
"17 : exp4 = new DoubleConstantExpression(-5.0, )" -> "35 : expTest = new NegationExpression(exp4, )"
"17 : exp4 = new DoubleConstantExpression(-5.0, )" -> "55 : expTest = new DivideExpression(exp4, exp2, )"
"19 : assignTest = null"
"19 : assignTest = null" -> "21 : assignTest = new Assignment(\"d\", exp1, )" [style=dashed]
"21 : assignTest = new Assignment(\"d\", exp1, )"
"21 : assignTest = new Assignment(\"d\", exp1, )" -> "24 : assignTest = new Assignment(\"blub\", exp2, )" [style=dashed]
"22 : Check.check(assignTest.evaluate(bTest, ), 1.0, )"
"23 : Check.check(bTest.lookupBinding(\"d\", ), 1.0, )"
"24 : assignTest = new Assignment(\"blub\", exp2, )"
"25 : Check.check(assignTest.evaluate(bTest, ), 2.5, )"
"26 : Check.check(bTest.lookupBinding(\"blub\", ), 2.5, )"
"28 : expTest = null"
"28 : expTest = null" -> "33 : expTest = new NegationExpression(exp1, )" [style=dashed]
"30 : Check.check(exp1.evaluate(bTest, ), 1.0, )"
"31 : Check.check(exp3.evaluate(bTest, ), 1.2, )"
"33 : expTest = new NegationExpression(exp1, )"
"33 : expTest = new NegationExpression(exp1, )" -> "35 : expTest = new NegationExpression(exp4, )" [style=dashed]
"34 : Check.check(expTest.evaluate(bTest, ), 1.0, )"
"35 : expTest = new NegationExpression(exp4, )"
"35 : expTest = new NegationExpression(exp4, )" -> "38 : expTest = new AddExpression(exp1, exp2, )" [style=dashed]
"36 : Check.check(expTest.evaluate(bTest, ), 5.0, )"
"38 : expTest = new AddExpression(exp1, exp2, )"
"38 : expTest = new AddExpression(exp1, exp2, )" -> "40 : expTest = new AddExpression(exp1, exp4, )" [style=dashed]
"39 : Check.check(expTest.evaluate(bTest, ), 3.5, )"
"40 : expTest = new AddExpression(exp1, exp4, )"
"40 : expTest = new AddExpression(exp1, exp4, )" -> "43 : expTest = new SubtractExpression(exp2, exp1, )" [style=dashed]
"41 : Check.check(expTest.evaluate(bTest, ), 4.0, )"
"43 : expTest = new SubtractExpression(exp2, exp1, )"
"43 : expTest = new SubtractExpression(exp2, exp1, )" -> "45 : expTest = new SubtractExpression(exp3, exp4, )" [style=dashed]
"44 : Check.check(expTest.evaluate(bTest, ), 1.5, )"
"45 : expTest = new SubtractExpression(exp3, exp4, )"
"45 : expTest = new SubtractExpression(exp3, exp4, )" -> "48 : expTest = new MultiplyExpression(exp1, exp2, )" [style=dashed]
"46 : Check.check(expTest.evaluate(bTest, ), 3.8, )"
"48 : expTest = new MultiplyExpression(exp1, exp2, )"
"48 : expTest = new MultiplyExpression(exp1, exp2, )" -> "50 : expTest = new MultiplyExpression(exp2, exp3, )" [style=dashed]
"49 : Check.check(expTest.evaluate(bTest, ), 2.5, )"
"50 : expTest = new MultiplyExpression(exp2, exp3, )"
"50 : expTest = new MultiplyExpression(exp2, exp3, )" -> "53 : expTest = new DivideExpression(exp2, exp1, )" [style=dashed]
"51 : Check.check(expTest.evaluate(bTest, ), 3.0, )"
"53 : expTest = new DivideExpression(exp2, exp1, )"
"53 : expTest = new DivideExpression(exp2, exp1, )" -> "55 : expTest = new DivideExpression(exp4, exp2, )" [style=dashed]
"54 : Check.check(expTest.evaluate(bTest, ), 2.5, )"
"55 : expTest = new DivideExpression(exp4, exp2, )"
"55 : expTest = new DivideExpression(exp4, exp2, )" -> "58 : expTest = new IdentifierExpression(\"a\", )" [style=dashed]
"56 : Check.check(expTest.evaluate(bTest, ), 2.0, )"
"58 : expTest = new IdentifierExpression(\"a\", )"
"58 : expTest = new IdentifierExpression(\"a\", )" -> "60 : expTest = new IdentifierExpression(\"d\", )" [style=dashed]
"59 : Check.check(expTest.evaluate(bTest, ), 1.0, )"
"60 : expTest = new IdentifierExpression(\"d\", )"
"60 : expTest = new IdentifierExpression(\"d\", )" -> "62 : expTest = new IdentifierExpression(\"c\", )" [style=dashed]
"61 : Check.check(expTest.evaluate(bTest, ), 1.0, )"
"62 : expTest = new IdentifierExpression(\"c\", )"
"62 : expTest = new IdentifierExpression(\"c\", )" -> "64 : expTest = new IdentifierExpression(\"b\", )" [style=dashed]
"63 : Check.check(expTest.evaluate(bTest, ), 1.4, )"
"64 : expTest = new IdentifierExpression(\"b\", )"
"65 : Check.check(expTest.evaluate(bTest, ), 2.75, )"
}