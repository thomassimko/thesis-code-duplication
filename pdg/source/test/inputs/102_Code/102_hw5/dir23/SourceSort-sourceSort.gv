digraph G {
"6 : size = list.size()"
"6 : size = list.size()" -> "9 : i < size"
"6 : size = list.size()" -> "16 : i < size"
"6 : size = list.size()" -> "12 : i < size"
"7 : newList = new LinkedList()"
"8 : tempList = new LinkedList()"
"9 : i = 0"
"9 : i = 0" -> "9 : i < size"
"9 : i = 0" -> "10 : tempList.add(list.get(i, ), )"
"9 : i = 0" -> "9 : i = i + 1"
"9 : i = 0" -> "9 : @temp16 = i"
"9 : i = 0" -> "9 : i = i + 1" [style=dashed]
"9 : i < size"
"10 : tempList.add(list.get(i, ), )"
"9 : @temp16 = i"
"9 : @temp16 = i" -> "9 : @temp16 = i" [style=dashed]
"9 : i = i + 1"
"9 : i = i + 1" -> "9 : i < size"
"9 : i = i + 1" -> "10 : tempList.add(list.get(i, ), )"
"9 : i = i + 1" -> "9 : i = i + 1"
"9 : i = i + 1" -> "9 : @temp16 = i"
"9 : i = i + 1" -> "9 : i = i + 1" [style=dashed]
"12 : i = 0"
"12 : i = 0" -> "12 : @temp17 = i"
"12 : i = 0" -> "12 : i = i + 1"
"12 : i = 0" -> "12 : i < size"
"12 : i = 0" -> "12 : i = i + 1" [style=dashed]
"12 : i < size"
"13 : index = findAlphaOrder(list, c, 0, )"
"13 : index = findAlphaOrder(list, c, 0, )" -> "14 : newList.add(0, list.remove(index, ), )"
"13 : index = findAlphaOrder(list, c, 0, )" -> "13 : index = findAlphaOrder(list, c, 0, )" [style=dashed]
"14 : newList.add(0, list.remove(index, ), )"
"12 : @temp17 = i"
"12 : @temp17 = i" -> "12 : @temp17 = i" [style=dashed]
"12 : i = i + 1"
"12 : i = i + 1" -> "12 : @temp17 = i"
"12 : i = i + 1" -> "12 : i = i + 1"
"12 : i = i + 1" -> "12 : i < size"
"12 : i = i + 1" -> "12 : i = i + 1" [style=dashed]
"16 : i = 0"
"16 : i = 0" -> "16 : @temp18 = i"
"16 : i = 0" -> "16 : i < size"
"16 : i = 0" -> "17 : list.add(tempList.get(i, ), )"
"16 : i = 0" -> "16 : i = i + 1"
"16 : i = 0" -> "16 : i = i + 1" [style=dashed]
"16 : i < size"
"17 : list.add(tempList.get(i, ), )"
"16 : @temp18 = i"
"16 : @temp18 = i" -> "16 : @temp18 = i" [style=dashed]
"16 : i = i + 1"
"16 : i = i + 1" -> "16 : @temp18 = i"
"16 : i = i + 1" -> "16 : i < size"
"16 : i = i + 1" -> "17 : list.add(tempList.get(i, ), )"
"16 : i = i + 1" -> "16 : i = i + 1"
"16 : i = i + 1" -> "16 : i = i + 1" [style=dashed]
}