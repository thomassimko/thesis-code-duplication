digraph G {
"10 : size = list.size()"
"10 : size = list.size()" -> "13 : i < size"
"10 : size = list.size()" -> "17 : i < size"
"10 : size = list.size()" -> "22 : i < size"
"11 : newl = new LinkedList()"
"12 : temp = new LinkedList()"
"13 : i = 0"
"13 : i = 0" -> "13 : i = i + 1"
"13 : i = 0" -> "13 : i < size"
"13 : i = 0" -> "15 : temp.add(list.get(i, ), )"
"13 : i = 0" -> "13 : @temp1 = i"
"13 : i = 0" -> "13 : i = i + 1" [style=dashed]
"13 : i < size"
"15 : temp.add(list.get(i, ), )"
"13 : @temp1 = i"
"13 : @temp1 = i" -> "13 : @temp1 = i" [style=dashed]
"13 : i = i + 1"
"13 : i = i + 1" -> "13 : i = i + 1"
"13 : i = i + 1" -> "13 : i < size"
"13 : i = i + 1" -> "15 : temp.add(list.get(i, ), )"
"13 : i = i + 1" -> "13 : @temp1 = i"
"13 : i = i + 1" -> "13 : i = i + 1" [style=dashed]
"17 : i = 0"
"17 : i = 0" -> "17 : i = i + 1"
"17 : i = 0" -> "17 : i < size"
"17 : i = 0" -> "17 : @temp2 = i"
"17 : i = 0" -> "17 : i = i + 1" [style=dashed]
"17 : i < size"
"19 : index = findFirst(list, 0, comp, )"
"19 : index = findFirst(list, 0, comp, )" -> "20 : newl.add(0, list.remove(index, ), )"
"19 : index = findFirst(list, 0, comp, )" -> "19 : index = findFirst(list, 0, comp, )" [style=dashed]
"20 : newl.add(0, list.remove(index, ), )"
"17 : @temp2 = i"
"17 : @temp2 = i" -> "17 : @temp2 = i" [style=dashed]
"17 : i = i + 1"
"17 : i = i + 1" -> "17 : i = i + 1"
"17 : i = i + 1" -> "17 : i < size"
"17 : i = i + 1" -> "17 : @temp2 = i"
"17 : i = i + 1" -> "17 : i = i + 1" [style=dashed]
"22 : i = 0"
"22 : i = 0" -> "22 : i = i + 1"
"22 : i = 0" -> "22 : @temp3 = i"
"22 : i = 0" -> "22 : i < size"
"22 : i = 0" -> "24 : list.add(temp.get(i, ), )"
"22 : i = 0" -> "22 : i = i + 1" [style=dashed]
"22 : i < size"
"24 : list.add(temp.get(i, ), )"
"22 : @temp3 = i"
"22 : @temp3 = i" -> "22 : @temp3 = i" [style=dashed]
"22 : i = i + 1"
"22 : i = i + 1" -> "22 : i = i + 1"
"22 : i = i + 1" -> "22 : @temp3 = i"
"22 : i = i + 1" -> "22 : i < size"
"22 : i = i + 1" -> "24 : list.add(temp.get(i, ), )"
"22 : i = i + 1" -> "22 : i = i + 1" [style=dashed]
}