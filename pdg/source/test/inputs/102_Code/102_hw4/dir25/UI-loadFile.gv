digraph G {
"80 : input = new File(\"StoredExpenses.txt\", )"
"80 : input = new File(\"StoredExpenses.txt\", )" -> "81 : scanner = new Scanner(input, )"
"81 : scanner = new Scanner(input, )"
"82 : expense = new infull()"
"82 : expense = new infull()" -> "107 : list.add(expense, )"
"82 : expense = new infull()" -> "93 : expense = new partial()" [style=dashed]
"82 : expense = new infull()" -> "89 : expense = new infull()" [style=dashed]
"83 : scanner.hasNextLine()"
"86 : type = scanner.nextLine()"
"86 : type = scanner.nextLine()" -> "86 : type = scanner.nextLine()" [style=dashed]
"87 : type.equals(\"in-full\", )"
"111 : true"
"89 : expense = new infull()"
"89 : expense = new infull()" -> "107 : list.add(expense, )"
"89 : expense = new infull()" -> "93 : expense = new partial()" [style=dashed]
"89 : expense = new infull()" -> "89 : expense = new infull()" [style=dashed]
"91 : type.equals(\"partial\", )"
"93 : expense = new partial()"
"93 : expense = new partial()" -> "107 : list.add(expense, )"
"93 : expense = new partial()" -> "93 : expense = new partial()" [style=dashed]
"93 : expense = new partial()" -> "89 : expense = new infull()" [style=dashed]
"95 : line = scanner.nextLine()"
"95 : line = scanner.nextLine()" -> "97 : date = format.parse(line, )"
"95 : line = scanner.nextLine()" -> "95 : line = scanner.nextLine()" [style=dashed]
"96 : format = new SimpleDateFormat(\"MM/dd/yyyy\", )"
"96 : format = new SimpleDateFormat(\"MM/dd/yyyy\", )" -> "96 : format = new SimpleDateFormat(\"MM/dd/yyyy\", )" [style=dashed]
"97 : date = format.parse(line, )"
"97 : date = format.parse(line, )" -> "98 : expense.setDate(date, )"
"97 : date = format.parse(line, )" -> "97 : date = format.parse(line, )" [style=dashed]
"98 : expense.setDate(date, )"
"99 : expense.setCategory(scanner.nextLine(), )"
"100 : expense.setPayee(scanner.nextLine(), )"
"101 : temp = scanner.nextLine()"
"101 : temp = scanner.nextLine()" -> "101 : temp = scanner.nextLine()" [style=dashed]
"102 : amount = new Money(Integer.parseInt(temp.split(\"\\.\", )[0], ), Integer.parseInt(temp.split(\"\\.\", )[1], ), )"
"102 : amount = new Money(Integer.parseInt(temp.split(\"\\.\", )[0], ), Integer.parseInt(temp.split(\"\\.\", )[1], ), )" -> "103 : expense.setAmount(amount, )"
"102 : amount = new Money(Integer.parseInt(temp.split(\"\\.\", )[0], ), Integer.parseInt(temp.split(\"\\.\", )[1], ), )" -> "102 : amount = new Money(Integer.parseInt(temp.split(\"\\.\", )[0], ), Integer.parseInt(temp.split(\"\\.\", )[1], ), )" [style=dashed]
"103 : expense.setAmount(amount, )"
"104 : temp2 = scanner.nextLine()"
"104 : temp2 = scanner.nextLine()" -> "104 : temp2 = scanner.nextLine()" [style=dashed]
"105 : remaining = new Money(Integer.parseInt(temp2.split(\"\\.\", )[0], ), Integer.parseInt(temp2.split(\"\\.\", )[1], ), )"
"105 : remaining = new Money(Integer.parseInt(temp2.split(\"\\.\", )[0], ), Integer.parseInt(temp2.split(\"\\.\", )[1], ), )" -> "106 : expense.setRemaining(remaining, )"
"105 : remaining = new Money(Integer.parseInt(temp2.split(\"\\.\", )[0], ), Integer.parseInt(temp2.split(\"\\.\", )[1], ), )" -> "105 : remaining = new Money(Integer.parseInt(temp2.split(\"\\.\", )[0], ), Integer.parseInt(temp2.split(\"\\.\", )[1], ), )" [style=dashed]
"106 : expense.setRemaining(remaining, )"
"107 : list.add(expense, )"
"83 : scanner.hasNextLine()"
"115 : false"
"119 : false"
"123 : false"
}