digraph G {
"8 : this.type = null"
"8 : this.type = null" -> "22 : this.type = \"partial\"" [style=dashed]
"9 : this.date = null"
"9 : this.date = null" -> "19 : this.date = date" [style=dashed]
"10 : this.category = null"
"10 : this.category = null" -> "20 : this.category = category" [style=dashed]
"11 : this.paidTo = null"
"11 : this.paidTo = null" -> "21 : this.paidTo = paidTo" [style=dashed]
"12 : this.dollarAmnt = 0"
"12 : this.dollarAmnt = 0" -> "27 : this.dollarAmnt = Integer.parseInt(amount.substring(0, i, ), )" [style=dashed]
"13 : this.centAmnt = 0"
"13 : this.centAmnt = 0" -> "28 : this.centAmnt = Integer.parseInt(amount.substring(i + 1, amount.length(), ), )" [style=dashed]
"14 : this.dollarRemaining = 0"
"14 : this.dollarRemaining = 0" -> "35 : this.dollarRemaining = Integer.parseInt(remaining.substring(0, i, ), )" [style=dashed]
"15 : this.centRemaining = 0"
"15 : this.centRemaining = 0" -> "36 : this.centRemaining = Integer.parseInt(remaining.substring(i + 1, remaining.length(), ), )" [style=dashed]
"19 : this.date = date"
"20 : this.category = category"
"21 : this.paidTo = paidTo"
"22 : this.type = \"partial\""
"23 : i = 0"
"23 : i = 0" -> "23 : i = i + 1"
"23 : i = 0" -> "23 : @temp5 = i"
"23 : i = 0" -> "28 : this.centAmnt = Integer.parseInt(amount.substring(i + 1, amount.length(), ), )"
"23 : i = 0" -> "27 : this.dollarAmnt = Integer.parseInt(amount.substring(0, i, ), )"
"23 : i = 0" -> "25 : amount.charAt(i, ) == '"
"23 : i = 0" -> "23 : i < amount.length()"
"23 : i = 0" -> "23 : i = i + 1" [style=dashed]
"23 : i < amount.length()"
"25 : amount.charAt(i, ) == '"
"27 : this.dollarAmnt = Integer.parseInt(amount.substring(0, i, ), )"
"27 : this.dollarAmnt = Integer.parseInt(amount.substring(0, i, ), )" -> "27 : this.dollarAmnt = Integer.parseInt(amount.substring(0, i, ), )" [style=dashed]
"28 : this.centAmnt = Integer.parseInt(amount.substring(i + 1, amount.length(), ), )"
"28 : this.centAmnt = Integer.parseInt(amount.substring(i + 1, amount.length(), ), )" -> "28 : this.centAmnt = Integer.parseInt(amount.substring(i + 1, amount.length(), ), )" [style=dashed]
"23 : @temp5 = i"
"23 : @temp5 = i" -> "23 : @temp5 = i" [style=dashed]
"23 : i = i + 1"
"23 : i = i + 1" -> "23 : i = i + 1"
"23 : i = i + 1" -> "23 : @temp5 = i"
"23 : i = i + 1" -> "28 : this.centAmnt = Integer.parseInt(amount.substring(i + 1, amount.length(), ), )"
"23 : i = i + 1" -> "27 : this.dollarAmnt = Integer.parseInt(amount.substring(0, i, ), )"
"23 : i = i + 1" -> "25 : amount.charAt(i, ) == '"
"23 : i = i + 1" -> "23 : i < amount.length()"
"23 : i = i + 1" -> "23 : i = i + 1" [style=dashed]
"31 : i = 0"
"31 : i = 0" -> "31 : i < remaining.length()"
"31 : i = 0" -> "31 : @temp6 = i"
"31 : i = 0" -> "31 : i = i + 1"
"31 : i = 0" -> "36 : this.centRemaining = Integer.parseInt(remaining.substring(i + 1, remaining.length(), ), )"
"31 : i = 0" -> "35 : this.dollarRemaining = Integer.parseInt(remaining.substring(0, i, ), )"
"31 : i = 0" -> "33 : remaining.charAt(i, ) == '"
"31 : i = 0" -> "31 : i = i + 1" [style=dashed]
"31 : i < remaining.length()"
"33 : remaining.charAt(i, ) == '"
"35 : this.dollarRemaining = Integer.parseInt(remaining.substring(0, i, ), )"
"35 : this.dollarRemaining = Integer.parseInt(remaining.substring(0, i, ), )" -> "35 : this.dollarRemaining = Integer.parseInt(remaining.substring(0, i, ), )" [style=dashed]
"36 : this.centRemaining = Integer.parseInt(remaining.substring(i + 1, remaining.length(), ), )"
"36 : this.centRemaining = Integer.parseInt(remaining.substring(i + 1, remaining.length(), ), )" -> "36 : this.centRemaining = Integer.parseInt(remaining.substring(i + 1, remaining.length(), ), )" [style=dashed]
"31 : @temp6 = i"
"31 : @temp6 = i" -> "31 : @temp6 = i" [style=dashed]
"31 : i = i + 1"
"31 : i = i + 1" -> "31 : i < remaining.length()"
"31 : i = i + 1" -> "31 : @temp6 = i"
"31 : i = i + 1" -> "31 : i = i + 1"
"31 : i = i + 1" -> "36 : this.centRemaining = Integer.parseInt(remaining.substring(i + 1, remaining.length(), ), )"
"31 : i = i + 1" -> "35 : this.dollarRemaining = Integer.parseInt(remaining.substring(0, i, ), )"
"31 : i = i + 1" -> "33 : remaining.charAt(i, ) == '"
"31 : i = i + 1" -> "31 : i = i + 1" [style=dashed]
}