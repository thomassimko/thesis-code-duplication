digraph G {
"99 : fileScanner.hasNextLine()"
"100 : s = fileScanner.nextLine()"
"100 : s = fileScanner.nextLine()" -> "100 : s = fileScanner.nextLine()" [style=dashed]
"101 : s.equals(\"in-full\", )"
"151 : fileScanner.close()"
"152 : System.out.println(\"File loaded.\", )"
"153 : System.out.println(\"\", )"
"102 : date = fileScanner.nextLine()"
"104 : df = new SimpleDateFormat(\"MM/dd/yyyy\", )"
"105 : d = df.parse(date, )"
"105 : d = df.parse(date, )" -> "107 : c.setTime(d, )"
"106 : c = GregorianCalendar.getInstance()"
"106 : c = GregorianCalendar.getInstance()" -> "114 : inFullExpense = new InFull(c, paidDollars, paidCents, payee, category, )"
"107 : c.setTime(d, )"
"108 : category = fileScanner.nextLine()"
"108 : category = fileScanner.nextLine()" -> "114 : inFullExpense = new InFull(c, paidDollars, paidCents, payee, category, )"
"109 : payee = fileScanner.nextLine()"
"109 : payee = fileScanner.nextLine()" -> "114 : inFullExpense = new InFull(c, paidDollars, paidCents, payee, category, )"
"110 : paid = fileScanner.nextLine()"
"111 : paidSplit = paid.split(\"\\.\", )"
"112 : paidDollars = Integer.parseInt(paidSplit[0], )"
"112 : paidDollars = Integer.parseInt(paidSplit[0], )" -> "114 : inFullExpense = new InFull(c, paidDollars, paidCents, payee, category, )"
"113 : paidCents = Integer.parseInt(paidSplit[1], )"
"113 : paidCents = Integer.parseInt(paidSplit[1], )" -> "114 : inFullExpense = new InFull(c, paidDollars, paidCents, payee, category, )"
"114 : inFullExpense = new InFull(c, paidDollars, paidCents, payee, category, )"
"114 : inFullExpense = new InFull(c, paidDollars, paidCents, payee, category, )" -> "115 : expenses.add(inFullExpense, )"
"115 : expenses.add(inFullExpense, )"
"118 : date = fileScanner.nextLine()"
"118 : date = fileScanner.nextLine()" -> "102 : date = fileScanner.nextLine()" [style=dashed]
"121 : s.equals(\"partial\", )"
"122 : date = fileScanner.nextLine()"
"124 : df = new SimpleDateFormat(\"MM/dd/yyyy\", )"
"125 : d = df.parse(date, )"
"125 : d = df.parse(date, )" -> "127 : c.setTime(d, )"
"126 : c = GregorianCalendar.getInstance()"
"126 : c = GregorianCalendar.getInstance()" -> "138 : partialExpense = new Partial(c, paidDollars, paidCents, payee, category, remainDollars, remainCents, )"
"127 : c.setTime(d, )"
"128 : category = fileScanner.nextLine()"
"128 : category = fileScanner.nextLine()" -> "138 : partialExpense = new Partial(c, paidDollars, paidCents, payee, category, remainDollars, remainCents, )"
"129 : payee = fileScanner.nextLine()"
"129 : payee = fileScanner.nextLine()" -> "138 : partialExpense = new Partial(c, paidDollars, paidCents, payee, category, remainDollars, remainCents, )"
"130 : paid = fileScanner.nextLine()"
"131 : paidSplit = paid.split(\"\\.\", )"
"132 : paidDollars = Integer.parseInt(paidSplit[0], )"
"132 : paidDollars = Integer.parseInt(paidSplit[0], )" -> "138 : partialExpense = new Partial(c, paidDollars, paidCents, payee, category, remainDollars, remainCents, )"
"133 : paidCents = Integer.parseInt(paidSplit[1], )"
"133 : paidCents = Integer.parseInt(paidSplit[1], )" -> "138 : partialExpense = new Partial(c, paidDollars, paidCents, payee, category, remainDollars, remainCents, )"
"134 : remain = fileScanner.nextLine()"
"135 : remainSplit = remain.split(\"\\.\", )"
"136 : remainDollars = Integer.parseInt(remainSplit[0], )"
"136 : remainDollars = Integer.parseInt(remainSplit[0], )" -> "138 : partialExpense = new Partial(c, paidDollars, paidCents, payee, category, remainDollars, remainCents, )"
"137 : remainCents = Integer.parseInt(remainSplit[1], )"
"137 : remainCents = Integer.parseInt(remainSplit[1], )" -> "138 : partialExpense = new Partial(c, paidDollars, paidCents, payee, category, remainDollars, remainCents, )"
"138 : partialExpense = new Partial(c, paidDollars, paidCents, payee, category, remainDollars, remainCents, )"
"138 : partialExpense = new Partial(c, paidDollars, paidCents, payee, category, remainDollars, remainCents, )" -> "139 : expenses.add(partialExpense, )"
"139 : expenses.add(partialExpense, )"
"142 : date = fileScanner.nextLine()"
"142 : date = fileScanner.nextLine()" -> "122 : date = fileScanner.nextLine()" [style=dashed]
"146 : System.out.println(\"\", )"
"147 : System.err.print(\"Error occured in reading file. File not completely read.\", )"
"148 : System.out.println(\"\", )"
"99 : fileScanner.hasNextLine()"
}