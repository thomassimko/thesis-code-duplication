digraph G {
"7 : type = 0"
"7 : type = 0" -> "19 : type = sc.nextInt()" [style=dashed]
"7 : type = 0" -> "24 : type = 1" [style=dashed]
"8 : x = 0"
"8 : x = 0" -> "50 : new CartesianPoint(x, y, )"
"8 : x = 0" -> "33 : x = sc.nextDouble()" [style=dashed]
"9 : y = 0"
"9 : y = 0" -> "50 : new CartesianPoint(x, y, )"
"9 : y = 0" -> "43 : y = sc.nextDouble()" [style=dashed]
"10 : angle = 0"
"10 : angle = 0" -> "74 : new PolarPoint(radius, angle, )"
"10 : angle = 0" -> "67 : angle = sc.nextDouble()" [style=dashed]
"11 : radius = 0"
"11 : radius = 0" -> "74 : new PolarPoint(radius, angle, )"
"11 : radius = 0" -> "57 : radius = sc.nextDouble()" [style=dashed]
"13 : sc = new Scanner(System.in, )"
"14 : System.out.printf(\"Which type of point should be created(1 for Cartesian, 2 for Polar)? \", )"
"17 : sc.hasNextInt()"
"19 : type = sc.nextInt()"
"19 : type = sc.nextInt()" -> "52 : type == 2"
"19 : type = sc.nextInt()" -> "28 : type == 1"
"23 : System.out.println(\"Error double\", )"
"24 : type = 1"
"24 : type = 1" -> "52 : type == 2"
"24 : type = 1" -> "28 : type == 1"
"25 : System.exit(1, )"
"28 : type == 1"
"30 : System.out.printf(\"Enter x-coordinate: \", )"
"31 : sc.hasNextDouble()"
"33 : x = sc.nextDouble()"
"33 : x = sc.nextDouble()" -> "50 : new CartesianPoint(x, y, )"
"37 : System.out.println(\"Error double\", )"
"38 : System.exit(1, )"
"40 : System.out.printf(\"Enter y-coordinate: \", )"
"41 : sc.hasNextDouble()"
"43 : y = sc.nextDouble()"
"43 : y = sc.nextDouble()" -> "50 : new CartesianPoint(x, y, )"
"47 : System.out.println(\"Error double\", )"
"48 : System.exit(1, )"
"50 : new CartesianPoint(x, y, )"
"52 : type == 2"
"54 : System.out.printf(\"Enter radius: \", )"
"55 : sc.hasNextDouble()"
"57 : radius = sc.nextDouble()"
"57 : radius = sc.nextDouble()" -> "74 : new PolarPoint(radius, angle, )"
"61 : System.out.println(\"Error double\", )"
"62 : System.exit(1, )"
"64 : System.out.printf(\"Enter angle: \", )"
"65 : sc.hasNextDouble()"
"67 : angle = sc.nextDouble()"
"67 : angle = sc.nextDouble()" -> "74 : new PolarPoint(radius, angle, )"
"71 : System.out.println(\"Error double\", )"
"72 : System.exit(1, )"
"74 : new PolarPoint(radius, angle, )"
"78 : new CartesianPoint(0, 0, )"
}