digraph G {
"47 : scan = new Scanner(System.in, )"
"49 : choice = 0"
"49 : choice = 0" -> "62 : choice = scan.nextInt()" [style=dashed]
"50 : rad = 0.0"
"50 : rad = 0.0" -> "107 : rad = scan.nextDouble()" [style=dashed]
"50 : rad = 0.0" -> "77 : rad = scan.nextDouble()" [style=dashed]
"51 : theta = 0.0"
"51 : theta = 0.0" -> "81 : theta = Math.toRadians(thetaDeg, )" [style=dashed]
"51 : theta = 0.0" -> "111 : theta = Math.toRadians(thetaDeg, )" [style=dashed]
"52 : thetaDeg = 0.0"
"52 : thetaDeg = 0.0" -> "110 : thetaDeg = scan.nextDouble()" [style=dashed]
"52 : thetaDeg = 0.0" -> "80 : thetaDeg = scan.nextDouble()" [style=dashed]
"53 : xCoor = 0.0"
"53 : xCoor = 0.0" -> "67 : xCoor = scan.nextDouble()" [style=dashed]
"53 : xCoor = 0.0" -> "97 : xCoor = scan.nextDouble()" [style=dashed]
"54 : yCoor = 0.0"
"54 : yCoor = 0.0" -> "70 : yCoor = scan.nextDouble()" [style=dashed]
"54 : yCoor = 0.0" -> "100 : yCoor = scan.nextDouble()" [style=dashed]
"55 : pt1 = null"
"55 : pt1 = null" -> "87 : pt1 = new CartesianPoint(0, 0, )" [style=dashed]
"55 : pt1 = null" -> "83 : pt1 = new PolarPoint(rad, theta, )" [style=dashed]
"55 : pt1 = null" -> "72 : pt1 = new CartesianPoint(xCoor, yCoor, )" [style=dashed]
"56 : pt2 = null"
"56 : pt2 = null" -> "113 : pt2 = new PolarPoint(rad, theta, )" [style=dashed]
"56 : pt2 = null" -> "117 : pt2 = new CartesianPoint(0, 0, )" [style=dashed]
"56 : pt2 = null" -> "102 : pt2 = new CartesianPoint(xCoor, yCoor, )" [style=dashed]
"58 : dist = 0.0"
"58 : dist = 0.0" -> "121 : dist = distance(pt1, pt2, )" [style=dashed]
"59 : sameQuadrant = false"
"59 : sameQuadrant = false" -> "122 : sameQuadrant = CheckQuad(pt1, pt2, )" [style=dashed]
"61 : System.out.print(\"Which type of point should be created (1 for Cartesian, 2 for Polar)? \", )"
"62 : choice = scan.nextInt()"
"62 : choice = scan.nextInt()" -> "74 : choice == 2"
"62 : choice = scan.nextInt()" -> "64 : choice == 1"
"62 : choice = scan.nextInt()" -> "92 : choice = scan.nextInt()" [style=dashed]
"64 : choice == 1"
"66 : System.out.print(\"Enter x-coordinate: \", )"
"67 : xCoor = scan.nextDouble()"
"67 : xCoor = scan.nextDouble()" -> "72 : pt1 = new CartesianPoint(xCoor, yCoor, )"
"67 : xCoor = scan.nextDouble()" -> "97 : xCoor = scan.nextDouble()" [style=dashed]
"69 : System.out.print(\"Enter y-coordinate: \", )"
"70 : yCoor = scan.nextDouble()"
"70 : yCoor = scan.nextDouble()" -> "72 : pt1 = new CartesianPoint(xCoor, yCoor, )"
"70 : yCoor = scan.nextDouble()" -> "100 : yCoor = scan.nextDouble()" [style=dashed]
"72 : pt1 = new CartesianPoint(xCoor, yCoor, )"
"72 : pt1 = new CartesianPoint(xCoor, yCoor, )" -> "121 : dist = distance(pt1, pt2, )"
"72 : pt1 = new CartesianPoint(xCoor, yCoor, )" -> "122 : sameQuadrant = CheckQuad(pt1, pt2, )"
"74 : choice == 2"
"76 : System.out.print(\"Enter radius: \", )"
"77 : rad = scan.nextDouble()"
"77 : rad = scan.nextDouble()" -> "83 : pt1 = new PolarPoint(rad, theta, )"
"77 : rad = scan.nextDouble()" -> "107 : rad = scan.nextDouble()" [style=dashed]
"79 : System.out.print(\"Enter angle (in degrees): \", )"
"80 : thetaDeg = scan.nextDouble()"
"80 : thetaDeg = scan.nextDouble()" -> "81 : theta = Math.toRadians(thetaDeg, )"
"80 : thetaDeg = scan.nextDouble()" -> "110 : thetaDeg = scan.nextDouble()" [style=dashed]
"81 : theta = Math.toRadians(thetaDeg, )"
"81 : theta = Math.toRadians(thetaDeg, )" -> "83 : pt1 = new PolarPoint(rad, theta, )"
"81 : theta = Math.toRadians(thetaDeg, )" -> "111 : theta = Math.toRadians(thetaDeg, )" [style=dashed]
"83 : pt1 = new PolarPoint(rad, theta, )"
"83 : pt1 = new PolarPoint(rad, theta, )" -> "121 : dist = distance(pt1, pt2, )"
"83 : pt1 = new PolarPoint(rad, theta, )" -> "122 : sameQuadrant = CheckQuad(pt1, pt2, )"
"87 : pt1 = new CartesianPoint(0, 0, )"
"87 : pt1 = new CartesianPoint(0, 0, )" -> "121 : dist = distance(pt1, pt2, )"
"87 : pt1 = new CartesianPoint(0, 0, )" -> "122 : sameQuadrant = CheckQuad(pt1, pt2, )"
"88 : errorMsg()"
"91 : System.out.print(\"Which type of point should be created (1 for Cartesian, 2 for Polar)? \", )"
"92 : choice = scan.nextInt()"
"92 : choice = scan.nextInt()" -> "104 : choice == 2"
"92 : choice = scan.nextInt()" -> "94 : choice == 1"
"94 : choice == 1"
"96 : System.out.print(\"Enter x-coordinate: \", )"
"97 : xCoor = scan.nextDouble()"
"97 : xCoor = scan.nextDouble()" -> "102 : pt2 = new CartesianPoint(xCoor, yCoor, )"
"99 : System.out.print(\"Enter y-coordinate: \", )"
"100 : yCoor = scan.nextDouble()"
"100 : yCoor = scan.nextDouble()" -> "102 : pt2 = new CartesianPoint(xCoor, yCoor, )"
"102 : pt2 = new CartesianPoint(xCoor, yCoor, )"
"102 : pt2 = new CartesianPoint(xCoor, yCoor, )" -> "121 : dist = distance(pt1, pt2, )"
"102 : pt2 = new CartesianPoint(xCoor, yCoor, )" -> "122 : sameQuadrant = CheckQuad(pt1, pt2, )"
"104 : choice == 2"
"106 : System.out.print(\"Enter radius: \", )"
"107 : rad = scan.nextDouble()"
"107 : rad = scan.nextDouble()" -> "113 : pt2 = new PolarPoint(rad, theta, )"
"109 : System.out.print(\"Enter angle (in degrees): \", )"
"110 : thetaDeg = scan.nextDouble()"
"110 : thetaDeg = scan.nextDouble()" -> "111 : theta = Math.toRadians(thetaDeg, )"
"111 : theta = Math.toRadians(thetaDeg, )"
"111 : theta = Math.toRadians(thetaDeg, )" -> "113 : pt2 = new PolarPoint(rad, theta, )"
"113 : pt2 = new PolarPoint(rad, theta, )"
"113 : pt2 = new PolarPoint(rad, theta, )" -> "121 : dist = distance(pt1, pt2, )"
"113 : pt2 = new PolarPoint(rad, theta, )" -> "122 : sameQuadrant = CheckQuad(pt1, pt2, )"
"117 : pt2 = new CartesianPoint(0, 0, )"
"117 : pt2 = new CartesianPoint(0, 0, )" -> "121 : dist = distance(pt1, pt2, )"
"117 : pt2 = new CartesianPoint(0, 0, )" -> "122 : sameQuadrant = CheckQuad(pt1, pt2, )"
"118 : errorMsg()"
"121 : dist = distance(pt1, pt2, )"
"121 : dist = distance(pt1, pt2, )" -> "124 : System.out.println(\"Distance between points: \" + dist, )"
"122 : sameQuadrant = CheckQuad(pt1, pt2, )"
"124 : System.out.println(\"Distance between points: \" + dist, )"
"128 : System.out.println(\"In same quadrant.\", )"
"132 : System.out.println(\"Not in same quadrant.\", )"
}