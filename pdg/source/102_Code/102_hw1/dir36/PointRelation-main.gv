digraph G {
"7 : degree2 = 0.0"
"7 : degree2 = 0.0" -> "32 : degree2 = degree * Math.PI / 180" [style=dashed]
"7 : degree2 = 0.0" -> "61 : degree2 = degree * Math.PI / 180" [style=dashed]
"7 : distance2 = 0.0"
"7 : distance2 = 0.0" -> "71 : distance2 = distance(point1, point2, )" [style=dashed]
"8 : degree = 0"
"8 : degree = 0" -> "31 : degree = in.nextInt()" [style=dashed]
"8 : degree = 0" -> "60 : degree = in.nextInt()" [style=dashed]
"8 : x_coord = 0"
"8 : x_coord = 0" -> "48 : x_coord = in.nextInt()" [style=dashed]
"8 : x_coord = 0" -> "19 : x_coord = in.nextInt()" [style=dashed]
"8 : y_coord = 0"
"8 : y_coord = 0" -> "21 : y_coord = in.nextInt()" [style=dashed]
"8 : y_coord = 0" -> "50 : y_coord = in.nextInt()" [style=dashed]
"8 : radius = 0"
"8 : radius = 0" -> "29 : radius = in.nextInt()" [style=dashed]
"8 : radius = 0" -> "58 : radius = in.nextInt()" [style=dashed]
"8 : result = 0"
"8 : result = 0" -> "15 : result = in.nextInt()" [style=dashed]
"8 : result2 = 0"
"8 : result2 = 0" -> "74 : result2 = samequad(point1, point2, )" [style=dashed]
"9 : point1 = null"
"9 : point1 = null" -> "74 : result2 = samequad(point1, point2, )"
"9 : point1 = null" -> "71 : distance2 = distance(point1, point2, )"
"9 : point1 = null" -> "33 : point1 = new PolarPoint(radius, degree2, )" [style=dashed]
"9 : point1 = null" -> "22 : point1 = new CartesianPoint(x_coord, y_coord, )" [style=dashed]
"10 : point2 = null"
"10 : point2 = null" -> "74 : result2 = samequad(point1, point2, )"
"10 : point2 = null" -> "71 : distance2 = distance(point1, point2, )"
"10 : point2 = null" -> "51 : point2 = new CartesianPoint(x_coord, y_coord, )" [style=dashed]
"10 : point2 = null" -> "62 : point2 = new PolarPoint(radius, degree2, )" [style=dashed]
"12 : in = new Scanner(System.in, )"
"13 : System.out.print(\"Which type of point should be created\", )"
"14 : System.out.print(\" (1 for Cartesion, 2 for Polar)? \", )"
"15 : result = in.nextInt()"
"15 : result = in.nextInt()" -> "16 : result == 1"
"15 : result = in.nextInt()" -> "26 : result == 2"
"15 : result = in.nextInt()" -> "44 : result = in.nextInt()" [style=dashed]
"16 : result == 1"
"18 : System.out.print(\"Enter x-coordinate: \", )"
"19 : x_coord = in.nextInt()"
"19 : x_coord = in.nextInt()" -> "22 : point1 = new CartesianPoint(x_coord, y_coord, )"
"19 : x_coord = in.nextInt()" -> "48 : x_coord = in.nextInt()" [style=dashed]
"20 : System.out.print(\"Enter y-coordinate: \", )"
"21 : y_coord = in.nextInt()"
"21 : y_coord = in.nextInt()" -> "22 : point1 = new CartesianPoint(x_coord, y_coord, )"
"21 : y_coord = in.nextInt()" -> "50 : y_coord = in.nextInt()" [style=dashed]
"22 : point1 = new CartesianPoint(x_coord, y_coord, )"
"22 : point1 = new CartesianPoint(x_coord, y_coord, )" -> "74 : result2 = samequad(point1, point2, )"
"22 : point1 = new CartesianPoint(x_coord, y_coord, )" -> "71 : distance2 = distance(point1, point2, )"
"26 : result == 2"
"28 : System.out.print(\"Enter radius: \", )"
"29 : radius = in.nextInt()"
"29 : radius = in.nextInt()" -> "33 : point1 = new PolarPoint(radius, degree2, )"
"29 : radius = in.nextInt()" -> "58 : radius = in.nextInt()" [style=dashed]
"30 : System.out.print(\"Enter angle (in degrees): \", )"
"31 : degree = in.nextInt()"
"31 : degree = in.nextInt()" -> "32 : degree2 = degree * Math.PI / 180"
"31 : degree = in.nextInt()" -> "60 : degree = in.nextInt()" [style=dashed]
"32 : degree2 = degree * Math.PI / 180"
"32 : degree2 = degree * Math.PI / 180" -> "33 : point1 = new PolarPoint(radius, degree2, )"
"32 : degree2 = degree * Math.PI / 180" -> "61 : degree2 = degree * Math.PI / 180" [style=dashed]
"33 : point1 = new PolarPoint(radius, degree2, )"
"33 : point1 = new PolarPoint(radius, degree2, )" -> "74 : result2 = samequad(point1, point2, )"
"33 : point1 = new PolarPoint(radius, degree2, )" -> "71 : distance2 = distance(point1, point2, )"
"37 : System.out.println(\"Invalid value. Try again next time.\", )"
"38 : System.exit(1, )"
"42 : System.out.print(\"Which type of point should be created\", )"
"43 : System.out.print(\" (1 for Cartesion, 2 for Polar)? \", )"
"44 : result = in.nextInt()"
"44 : result = in.nextInt()" -> "55 : result == 2"
"44 : result = in.nextInt()" -> "45 : result == 1"
"44 : result = in.nextInt()" -> "44 : result = in.nextInt()" [style=dashed]
"45 : result == 1"
"47 : System.out.print(\"Enter x-coordinate: \", )"
"48 : x_coord = in.nextInt()"
"48 : x_coord = in.nextInt()" -> "51 : point2 = new CartesianPoint(x_coord, y_coord, )"
"48 : x_coord = in.nextInt()" -> "48 : x_coord = in.nextInt()" [style=dashed]
"49 : System.out.print(\"Enter y-coordinate: \", )"
"50 : y_coord = in.nextInt()"
"50 : y_coord = in.nextInt()" -> "51 : point2 = new CartesianPoint(x_coord, y_coord, )"
"50 : y_coord = in.nextInt()" -> "50 : y_coord = in.nextInt()" [style=dashed]
"51 : point2 = new CartesianPoint(x_coord, y_coord, )"
"51 : point2 = new CartesianPoint(x_coord, y_coord, )" -> "74 : result2 = samequad(point1, point2, )"
"51 : point2 = new CartesianPoint(x_coord, y_coord, )" -> "71 : distance2 = distance(point1, point2, )"
"51 : point2 = new CartesianPoint(x_coord, y_coord, )" -> "51 : point2 = new CartesianPoint(x_coord, y_coord, )" [style=dashed]
"51 : point2 = new CartesianPoint(x_coord, y_coord, )" -> "62 : point2 = new PolarPoint(radius, degree2, )" [style=dashed]
"55 : result == 2"
"57 : System.out.print(\"Enter radius: \", )"
"58 : radius = in.nextInt()"
"58 : radius = in.nextInt()" -> "62 : point2 = new PolarPoint(radius, degree2, )"
"58 : radius = in.nextInt()" -> "58 : radius = in.nextInt()" [style=dashed]
"59 : System.out.print(\"Enter angle (in degrees): \", )"
"60 : degree = in.nextInt()"
"60 : degree = in.nextInt()" -> "61 : degree2 = degree * Math.PI / 180"
"60 : degree = in.nextInt()" -> "60 : degree = in.nextInt()" [style=dashed]
"61 : degree2 = degree * Math.PI / 180"
"61 : degree2 = degree * Math.PI / 180" -> "62 : point2 = new PolarPoint(radius, degree2, )"
"61 : degree2 = degree * Math.PI / 180" -> "61 : degree2 = degree * Math.PI / 180" [style=dashed]
"62 : point2 = new PolarPoint(radius, degree2, )"
"62 : point2 = new PolarPoint(radius, degree2, )" -> "74 : result2 = samequad(point1, point2, )"
"62 : point2 = new PolarPoint(radius, degree2, )" -> "71 : distance2 = distance(point1, point2, )"
"62 : point2 = new PolarPoint(radius, degree2, )" -> "51 : point2 = new CartesianPoint(x_coord, y_coord, )" [style=dashed]
"62 : point2 = new PolarPoint(radius, degree2, )" -> "62 : point2 = new PolarPoint(radius, degree2, )" [style=dashed]
"66 : System.out.println(\"Invalid value. Try again next time.\", )"
"67 : System.exit(1, )"
"71 : distance2 = distance(point1, point2, )"
"71 : distance2 = distance(point1, point2, )" -> "72 : System.out.println(\"Distance between points: \" + distance2, )"
"71 : distance2 = distance(point1, point2, )" -> "71 : distance2 = distance(point1, point2, )" [style=dashed]
"72 : System.out.println(\"Distance between points: \" + distance2, )"
"74 : result2 = samequad(point1, point2, )"
"74 : result2 = samequad(point1, point2, )" -> "76 : result2 == 1"
"74 : result2 = samequad(point1, point2, )" -> "74 : result2 = samequad(point1, point2, )" [style=dashed]
"76 : result2 == 1"
"78 : System.out.println(\"In same quadrant\", )"
"82 : System.out.println(\"Not in same quadrant\", )"
}