digraph G {
"82 : scan = new Scanner(System.in, )"
"83 : x1 = 0.0"
"83 : x1 = 0.0" -> "91 : x1 = scan.nextDouble()" [style=dashed]
"83 : x2 = 0.0"
"83 : x2 = 0.0" -> "110 : x2 = scan.nextDouble()" [style=dashed]
"83 : y1 = 0.0"
"83 : y1 = 0.0" -> "93 : y1 = scan.nextDouble()" [style=dashed]
"83 : y2 = 0.0"
"83 : y2 = 0.0" -> "112 : y2 = scan.nextDouble()" [style=dashed]
"83 : r1 = 0.0"
"83 : r1 = 0.0" -> "99 : r1 = scan.nextDouble()" [style=dashed]
"83 : r2 = 0.0"
"83 : r2 = 0.0" -> "118 : r2 = scan.nextDouble()" [style=dashed]
"83 : a1 = 0.0"
"83 : a1 = 0.0" -> "101 : a1 = scan.nextDouble()" [style=dashed]
"83 : a2 = 0.0"
"83 : a2 = 0.0" -> "120 : a2 = scan.nextDouble()" [style=dashed]
"83 : d1 = 0.0"
"83 : d1 = 0.0" -> "124 : d1 = distance(pt1, pt2, )" [style=dashed]
"84 : pt1 = new CartesianPoint(0.0, 0.0, )"
"84 : pt1 = new CartesianPoint(0.0, 0.0, )" -> "103 : pt1 = new PolarPoint(r1, a1, )" [style=dashed]
"84 : pt1 = new CartesianPoint(0.0, 0.0, )" -> "94 : pt1 = new CartesianPoint(x1, y1, )" [style=dashed]
"85 : pt2 = new CartesianPoint(0.0, 0.0, )"
"85 : pt2 = new CartesianPoint(0.0, 0.0, )" -> "122 : pt2 = new PolarPoint(r2, a2, )" [style=dashed]
"85 : pt2 = new CartesianPoint(0.0, 0.0, )" -> "113 : pt2 = new CartesianPoint(x2, y2, )" [style=dashed]
"86 : System.out.print(\"Which type of point should be created (1 for Cartesian, 2 for Polar)? \", )"
"87 : choice1 = scan.nextInt()"
"87 : choice1 = scan.nextInt()" -> "88 : choice1 == 1"
"88 : choice1 == 1"
"90 : System.out.print(\"Enter x-coordinate: \", )"
"91 : x1 = scan.nextDouble()"
"91 : x1 = scan.nextDouble()" -> "94 : pt1 = new CartesianPoint(x1, y1, )"
"92 : System.out.print(\"Enter y-coordinate: \", )"
"93 : y1 = scan.nextDouble()"
"93 : y1 = scan.nextDouble()" -> "94 : pt1 = new CartesianPoint(x1, y1, )"
"94 : pt1 = new CartesianPoint(x1, y1, )"
"94 : pt1 = new CartesianPoint(x1, y1, )" -> "126 : same = sameQuad(pt1, pt2, )"
"94 : pt1 = new CartesianPoint(x1, y1, )" -> "124 : d1 = distance(pt1, pt2, )"
"98 : System.out.print(\"Enter radius: \", )"
"99 : r1 = scan.nextDouble()"
"99 : r1 = scan.nextDouble()" -> "103 : pt1 = new PolarPoint(r1, a1, )"
"100 : System.out.print(\"Enter angle (in degrees): \", )"
"101 : a1 = scan.nextDouble()"
"101 : a1 = scan.nextDouble()" -> "102 : a1 = a1 * Math.PI / 180.0"
"101 : a1 = scan.nextDouble()" -> "102 : a1 = a1 * Math.PI / 180.0" [style=dashed]
"102 : a1 = a1 * Math.PI / 180.0"
"102 : a1 = a1 * Math.PI / 180.0" -> "103 : pt1 = new PolarPoint(r1, a1, )"
"103 : pt1 = new PolarPoint(r1, a1, )"
"103 : pt1 = new PolarPoint(r1, a1, )" -> "126 : same = sameQuad(pt1, pt2, )"
"103 : pt1 = new PolarPoint(r1, a1, )" -> "124 : d1 = distance(pt1, pt2, )"
"105 : System.out.print(\"Which type of point should be created (1 for Cartesian, 2 for Polar)? \", )"
"106 : choice2 = scan.nextInt()"
"106 : choice2 = scan.nextInt()" -> "107 : choice2 == 1"
"107 : choice2 == 1"
"109 : System.out.print(\"Enter x-coordinate: \", )"
"110 : x2 = scan.nextDouble()"
"110 : x2 = scan.nextDouble()" -> "113 : pt2 = new CartesianPoint(x2, y2, )"
"111 : System.out.print(\"Enter y-coordinate: \", )"
"112 : y2 = scan.nextDouble()"
"112 : y2 = scan.nextDouble()" -> "113 : pt2 = new CartesianPoint(x2, y2, )"
"113 : pt2 = new CartesianPoint(x2, y2, )"
"113 : pt2 = new CartesianPoint(x2, y2, )" -> "126 : same = sameQuad(pt1, pt2, )"
"113 : pt2 = new CartesianPoint(x2, y2, )" -> "124 : d1 = distance(pt1, pt2, )"
"117 : System.out.print(\"Enter radius: \", )"
"118 : r2 = scan.nextDouble()"
"118 : r2 = scan.nextDouble()" -> "122 : pt2 = new PolarPoint(r2, a2, )"
"119 : System.out.print(\"Enter angle (in degrees): \", )"
"120 : a2 = scan.nextDouble()"
"120 : a2 = scan.nextDouble()" -> "121 : a2 = a2 * Math.PI / 180.0"
"120 : a2 = scan.nextDouble()" -> "121 : a2 = a2 * Math.PI / 180.0" [style=dashed]
"121 : a2 = a2 * Math.PI / 180.0"
"121 : a2 = a2 * Math.PI / 180.0" -> "122 : pt2 = new PolarPoint(r2, a2, )"
"122 : pt2 = new PolarPoint(r2, a2, )"
"122 : pt2 = new PolarPoint(r2, a2, )" -> "126 : same = sameQuad(pt1, pt2, )"
"122 : pt2 = new PolarPoint(r2, a2, )" -> "124 : d1 = distance(pt1, pt2, )"
"124 : d1 = distance(pt1, pt2, )"
"124 : d1 = distance(pt1, pt2, )" -> "125 : System.out.print(\"Distance between points: \" + d1, )"
"125 : System.out.print(\"Distance between points: \" + d1, )"
"126 : same = sameQuad(pt1, pt2, )"
"126 : same = sameQuad(pt1, pt2, )" -> "127 : same == true"
"127 : same == true"
"129 : System.out.print(\"\nIn same quadrant.\n\", )"
"133 : System.out.print(\"\nNot in same quadrant.\n\", )"
}