digraph G {
"105 : x1 = 0.0"
"105 : x1 = 0.0" -> "125 : x1 = sc.nextDouble()" [style=dashed]
"106 : y1 = 0.0"
"106 : y1 = 0.0" -> "127 : y1 = sc.nextDouble()" [style=dashed]
"107 : x2 = 0.0"
"107 : x2 = 0.0" -> "185 : x2 = sc.nextDouble()" [style=dashed]
"107 : x2 = 0.0" -> "134 : x2 = sc.nextDouble()" [style=dashed]
"108 : y2 = 0.0"
"108 : y2 = 0.0" -> "136 : y2 = sc.nextDouble()" [style=dashed]
"108 : y2 = 0.0" -> "187 : y2 = sc.nextDouble()" [style=dashed]
"109 : radius1 = 0.0"
"109 : radius1 = 0.0" -> "176 : radius1 = sc.nextDouble()" [style=dashed]
"109 : radius1 = 0.0" -> "152 : radius1 = sc.nextDouble()" [style=dashed]
"110 : angle1 = 0.0"
"110 : angle1 = 0.0" -> "154 : angle1 = sc.nextDouble()" [style=dashed]
"110 : angle1 = 0.0" -> "178 : angle1 = sc.nextDouble()" [style=dashed]
"111 : radius2 = 0.0"
"112 : angle2 = 0.0"
"113 : dist = 0.0"
"113 : dist = 0.0" -> "189 : dist = distance(pt1, pt2, )" [style=dashed]
"113 : dist = 0.0" -> "138 : dist = distance(pt1, pt2, )" [style=dashed]
"113 : dist = 0.0" -> "207 : dist = distance(pt1, pt2, )" [style=dashed]
"113 : dist = 0.0" -> "156 : dist = distance(pt1, pt2, )" [style=dashed]
"114 : pt1 = null"
"114 : pt1 = null" -> "179 : pt1 = new PolarPoint(radius1, angle1, )" [style=dashed]
"114 : pt1 = null" -> "128 : pt1 = new CartesianPoint(x1, y1, )" [style=dashed]
"115 : pt2 = null"
"115 : pt2 = null" -> "155 : pt2 = new PolarPoint(radius1, angle1, )" [style=dashed]
"115 : pt2 = null" -> "206 : pt2 = new PolarPoint(radius1, angle1, )" [style=dashed]
"115 : pt2 = null" -> "188 : pt2 = new CartesianPoint(x2, y2, )" [style=dashed]
"115 : pt2 = null" -> "137 : pt2 = new CartesianPoint(x2, y2, )" [style=dashed]
"116 : sc = new Scanner(System.in, )"
"118 : System.out.format(\"What type of point should be created (1 for Cartesian, 2 for Polar)? \", )"
"119 : PointType = 0"
"119 : PointType = 0" -> "120 : PointType = sc.nextInt()" [style=dashed]
"120 : PointType = sc.nextInt()"
"120 : PointType = sc.nextInt()" -> "122 : PointType == 1"
"120 : PointType = sc.nextInt()" -> "173 : PointType == 2"
"120 : PointType = sc.nextInt()" -> "130 : PointType = sc.nextInt()" [style=dashed]
"120 : PointType = sc.nextInt()" -> "181 : PointType = sc.nextInt()" [style=dashed]
"122 : PointType == 1"
"124 : System.out.format(\"Enter x-coordinate: \", )"
"125 : x1 = sc.nextDouble()"
"125 : x1 = sc.nextDouble()" -> "128 : pt1 = new CartesianPoint(x1, y1, )"
"126 : System.out.format(\"Enter y-coordinate: \", )"
"127 : y1 = sc.nextDouble()"
"127 : y1 = sc.nextDouble()" -> "128 : pt1 = new CartesianPoint(x1, y1, )"
"128 : pt1 = new CartesianPoint(x1, y1, )"
"128 : pt1 = new CartesianPoint(x1, y1, )" -> "138 : dist = distance(pt1, pt2, )"
"128 : pt1 = new CartesianPoint(x1, y1, )" -> "140 : determine(pt1, pt2, ) == true"
"128 : pt1 = new CartesianPoint(x1, y1, )" -> "158 : determine(pt1, pt2, ) == true"
"128 : pt1 = new CartesianPoint(x1, y1, )" -> "156 : dist = distance(pt1, pt2, )"
"129 : System.out.format(\"What type of point should be created (1 for Cartesian, 2 for Polar)? \", )"
"130 : PointType = sc.nextInt()"
"130 : PointType = sc.nextInt()" -> "149 : PointType == 2"
"130 : PointType = sc.nextInt()" -> "131 : PointType == 1"
"131 : PointType == 1"
"133 : System.out.format(\"Enter x-coordinate: \", )"
"134 : x2 = sc.nextDouble()"
"134 : x2 = sc.nextDouble()" -> "137 : pt2 = new CartesianPoint(x2, y2, )"
"135 : System.out.format(\"Enter y-coordinate: \", )"
"136 : y2 = sc.nextDouble()"
"136 : y2 = sc.nextDouble()" -> "137 : pt2 = new CartesianPoint(x2, y2, )"
"137 : pt2 = new CartesianPoint(x2, y2, )"
"137 : pt2 = new CartesianPoint(x2, y2, )" -> "138 : dist = distance(pt1, pt2, )"
"137 : pt2 = new CartesianPoint(x2, y2, )" -> "140 : determine(pt1, pt2, ) == true"
"138 : dist = distance(pt1, pt2, )"
"138 : dist = distance(pt1, pt2, )" -> "139 : System.out.format(\"Distance between points: %f\n\", dist, )"
"139 : System.out.format(\"Distance between points: %f\n\", dist, )"
"140 : determine(pt1, pt2, ) == true"
"142 : System.out.format(\"In same quadrant.\n\", )"
"146 : System.out.format(\"Not in same quadrant.\n\", )"
"149 : PointType == 2"
"151 : System.out.format(\"Enter radius: \", )"
"152 : radius1 = sc.nextDouble()"
"152 : radius1 = sc.nextDouble()" -> "155 : pt2 = new PolarPoint(radius1, angle1, )"
"153 : System.out.format(\"Enter angle (in degrees): \", )"
"154 : angle1 = sc.nextDouble()"
"154 : angle1 = sc.nextDouble()" -> "155 : pt2 = new PolarPoint(radius1, angle1, )"
"155 : pt2 = new PolarPoint(radius1, angle1, )"
"155 : pt2 = new PolarPoint(radius1, angle1, )" -> "158 : determine(pt1, pt2, ) == true"
"155 : pt2 = new PolarPoint(radius1, angle1, )" -> "156 : dist = distance(pt1, pt2, )"
"156 : dist = distance(pt1, pt2, )"
"156 : dist = distance(pt1, pt2, )" -> "157 : System.out.format(\"Distance between points: %f\n\", dist, )"
"157 : System.out.format(\"Distance between points: %f\n\", dist, )"
"158 : determine(pt1, pt2, ) == true"
"160 : System.out.format(\"In same quadrant.\n\", )"
"164 : System.out.format(\"Not in same quadrant.\n\", )"
"169 : System.out.format(\"Unknown command, please use 1) to create Cartesian Point or 2) to create Polar Point.\n\", )"
"170 : System.exit(1, )"
"173 : PointType == 2"
"175 : System.out.format(\"Enter radius: \", )"
"176 : radius1 = sc.nextDouble()"
"176 : radius1 = sc.nextDouble()" -> "179 : pt1 = new PolarPoint(radius1, angle1, )"
"176 : radius1 = sc.nextDouble()" -> "203 : radius1 = sc.nextDouble()" [style=dashed]
"177 : System.out.format(\"Enter angle (in degrees): \", )"
"178 : angle1 = sc.nextDouble()"
"178 : angle1 = sc.nextDouble()" -> "179 : pt1 = new PolarPoint(radius1, angle1, )"
"178 : angle1 = sc.nextDouble()" -> "205 : angle1 = sc.nextDouble()" [style=dashed]
"179 : pt1 = new PolarPoint(radius1, angle1, )"
"179 : pt1 = new PolarPoint(radius1, angle1, )" -> "189 : dist = distance(pt1, pt2, )"
"179 : pt1 = new PolarPoint(radius1, angle1, )" -> "209 : determine(pt1, pt2, ) == true"
"179 : pt1 = new PolarPoint(radius1, angle1, )" -> "207 : dist = distance(pt1, pt2, )"
"179 : pt1 = new PolarPoint(radius1, angle1, )" -> "191 : determine(pt1, pt2, ) == true"
"180 : System.out.format(\"What type of point should be created (1 for Cartesian, 2 for Polar)? \", )"
"181 : PointType = sc.nextInt()"
"181 : PointType = sc.nextInt()" -> "182 : PointType == 1"
"181 : PointType = sc.nextInt()" -> "200 : PointType == 2"
"182 : PointType == 1"
"184 : System.out.format(\"Enter x-coordinate: \", )"
"185 : x2 = sc.nextDouble()"
"185 : x2 = sc.nextDouble()" -> "188 : pt2 = new CartesianPoint(x2, y2, )"
"186 : System.out.format(\"Enter y-coordinate: \", )"
"187 : y2 = sc.nextDouble()"
"187 : y2 = sc.nextDouble()" -> "188 : pt2 = new CartesianPoint(x2, y2, )"
"188 : pt2 = new CartesianPoint(x2, y2, )"
"188 : pt2 = new CartesianPoint(x2, y2, )" -> "189 : dist = distance(pt1, pt2, )"
"188 : pt2 = new CartesianPoint(x2, y2, )" -> "191 : determine(pt1, pt2, ) == true"
"189 : dist = distance(pt1, pt2, )"
"189 : dist = distance(pt1, pt2, )" -> "190 : System.out.format(\"Distance between points: %f\n\", dist, )"
"190 : System.out.format(\"Distance between points: %f\n\", dist, )"
"191 : determine(pt1, pt2, ) == true"
"193 : System.out.format(\"In same quadrant.\n\", )"
"197 : System.out.format(\"Not in same quadrant.\n\", )"
"200 : PointType == 2"
"202 : System.out.format(\"Enter radius: \", )"
"203 : radius1 = sc.nextDouble()"
"203 : radius1 = sc.nextDouble()" -> "206 : pt2 = new PolarPoint(radius1, angle1, )"
"204 : System.out.format(\"Enter angle (in degrees): \", )"
"205 : angle1 = sc.nextDouble()"
"205 : angle1 = sc.nextDouble()" -> "206 : pt2 = new PolarPoint(radius1, angle1, )"
"206 : pt2 = new PolarPoint(radius1, angle1, )"
"206 : pt2 = new PolarPoint(radius1, angle1, )" -> "209 : determine(pt1, pt2, ) == true"
"206 : pt2 = new PolarPoint(radius1, angle1, )" -> "207 : dist = distance(pt1, pt2, )"
"207 : dist = distance(pt1, pt2, )"
"207 : dist = distance(pt1, pt2, )" -> "208 : System.out.format(\"Distance between points: %f\n\", dist, )"
"208 : System.out.format(\"Distance between points: %f\n\", dist, )"
"209 : determine(pt1, pt2, ) == true"
"211 : System.out.format(\"In same quadrant.\n\", )"
"215 : System.out.format(\"Not in same quadrant.\n\", )"
"220 : System.out.format(\"Unknown command, please use 1) to create Cartesian Point or 2) to create Polar Point.\n\", )"
"221 : System.exit(1, )"
"226 : System.out.format(\"Unknown command, please use 1) to create Cartesian Point or 2) to create Polar Point.\n\", )"
"227 : System.exit(1, )"
}