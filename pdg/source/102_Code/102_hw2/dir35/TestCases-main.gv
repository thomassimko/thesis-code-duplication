digraph G {
"5 : b1 = new VariableBindings()"
"5 : b1 = new VariableBindings()" -> "81 : Check.check(ex29.evaluate(b1, ), 0.4, )"
"5 : b1 = new VariableBindings()" -> "53 : Check.check(ex6.evaluate(b1, ), 61, )"
"5 : b1 = new VariableBindings()" -> "54 : Check.check(ex7.evaluate(b1, ), 4, )"
"5 : b1 = new VariableBindings()" -> "70 : Check.check(ex20.evaluate(b1, ), 2, )"
"5 : b1 = new VariableBindings()" -> "76 : Check.check(ex25.evaluate(b1, ), 15, )"
"5 : b1 = new VariableBindings()" -> "65 : Check.check(ex16.evaluate(b1, ), 28, )"
"5 : b1 = new VariableBindings()" -> "69 : Check.check(ex19.evaluate(b1, ), 2, )"
"5 : b1 = new VariableBindings()" -> "55 : Check.check(ex8.evaluate(b1, ), 0, )"
"5 : b1 = new VariableBindings()" -> "50 : Check.check(ex3.evaluate(b1, ), 10, )"
"5 : b1 = new VariableBindings()" -> "51 : Check.check(ex4.evaluate(b1, ), 12, )"
"5 : b1 = new VariableBindings()" -> "49 : Check.check(ex2.evaluate(b1, ), 80, )"
"5 : b1 = new VariableBindings()" -> "57 : Check.check(ex9.evaluate(b1, ), 11, )"
"5 : b1 = new VariableBindings()" -> "63 : Check.check(ex14.evaluate(b1, ), 28, )"
"5 : b1 = new VariableBindings()" -> "52 : Check.check(ex5.evaluate(b1, ), 5.44, )"
"5 : b1 = new VariableBindings()" -> "68 : Check.check(ex18.evaluate(b1, ), 2, )"
"5 : b1 = new VariableBindings()" -> "62 : Check.check(ex13.evaluate(b1, ), 28, )"
"5 : b1 = new VariableBindings()" -> "79 : Check.check(ex27.evaluate(b1, ), 6, )"
"5 : b1 = new VariableBindings()" -> "78 : Check.check(ex26.evaluate(b1, ), 14, )"
"5 : b1 = new VariableBindings()" -> "80 : Check.check(ex28.evaluate(b1, ), 40, )"
"5 : b1 = new VariableBindings()" -> "74 : Check.check(ex23.evaluate(b1, ), 9, )"
"5 : b1 = new VariableBindings()" -> "64 : Check.check(ex15.evaluate(b1, ), 28, )"
"5 : b1 = new VariableBindings()" -> "75 : Check.check(ex24.evaluate(b1, ), 15, )"
"5 : b1 = new VariableBindings()" -> "67 : Check.check(ex17.evaluate(b1, ), 2, )"
"5 : b1 = new VariableBindings()" -> "8 : a1.evaluate(b1, )"
"5 : b1 = new VariableBindings()" -> "58 : Check.check(ex10.evaluate(b1, ), 3, )"
"5 : b1 = new VariableBindings()" -> "72 : Check.check(ex21.evaluate(b1, ), 9, )"
"5 : b1 = new VariableBindings()" -> "73 : Check.check(ex22.evaluate(b1, ), 15, )"
"5 : b1 = new VariableBindings()" -> "9 : a2.evaluate(b1, )"
"5 : b1 = new VariableBindings()" -> "60 : Check.check(ex12.evaluate(b1, ), 3, )"
"5 : b1 = new VariableBindings()" -> "48 : Check.check(ex1.evaluate(b1, ), 3, )"
"5 : b1 = new VariableBindings()" -> "59 : Check.check(ex11.evaluate(b1, ), 11, )"
"6 : a1 = new Assignment(\"p\", new DoubleConstantExpression(4, ), )"
"7 : a2 = new Assignment(\"r\", new NegationExpression(new DoubleConstantExpression(10, ), ), )"
"8 : a1.evaluate(b1, )"
"9 : a2.evaluate(b1, )"
"11 : ex1 = new AddExpression(new DoubleConstantExpression(1, ), new DoubleConstantExpression(2, ), )"
"12 : ex2 = new MultiplyExpression(new MultiplyExpression(new IdentifierExpression(\"p\", ), new IdentifierExpression(\"r\", ), ), new DoubleConstantExpression(2, ), )"
"13 : ex3 = new DivideExpression(new DoubleConstantExpression(90, ), new NegationExpression(new DoubleConstantExpression(9, ), ), )"
"14 : ex4 = new SubtractExpression(new DoubleConstantExpression(4, ), new NegationExpression(new DoubleConstantExpression(8, ), ), )"
"16 : ex5 = new MultiplyExpression(new DoubleConstantExpression(1.7, ), new DoubleConstantExpression(3.2, ), )"
"17 : ex6 = new SubtractExpression(new AddExpression(new DoubleConstantExpression(1, ), new MultiplyExpression(new DoubleConstantExpression(2, ), new DoubleConstantExpression(3, ), ), ), new MultiplyExpression(new DoubleConstantExpression(4, ), new DoubleConstantExpression(17, ), ), )"
"18 : ex7 = new IdentifierExpression(\"p\", )"
"19 : ex8 = new DivideExpression(new DoubleConstantExpression(0, ), new DoubleConstantExpression(3.2, ), )"
"21 : ex9 = new AddExpression(new DoubleConstantExpression(4, ), new DoubleConstantExpression(7, ), )"
"22 : ex10 = new AddExpression(new DoubleConstantExpression(4, ), new NegationExpression(new DoubleConstantExpression(7, ), ), )"
"23 : ex11 = new AddExpression(new NegationExpression(new DoubleConstantExpression(4, ), ), new NegationExpression(new DoubleConstantExpression(7, ), ), )"
"24 : ex12 = new AddExpression(new NegationExpression(new DoubleConstantExpression(4, ), ), new DoubleConstantExpression(7, ), )"
"26 : ex13 = new MultiplyExpression(new DoubleConstantExpression(4, ), new DoubleConstantExpression(7, ), )"
"27 : ex14 = new MultiplyExpression(new DoubleConstantExpression(4, ), new NegationExpression(new DoubleConstantExpression(7, ), ), )"
"28 : ex15 = new MultiplyExpression(new NegationExpression(new DoubleConstantExpression(4, ), ), new NegationExpression(new DoubleConstantExpression(7, ), ), )"
"29 : ex16 = new MultiplyExpression(new NegationExpression(new DoubleConstantExpression(4, ), ), new DoubleConstantExpression(7, ), )"
"31 : ex17 = new DivideExpression(new DoubleConstantExpression(10, ), new DoubleConstantExpression(5, ), )"
"32 : ex18 = new DivideExpression(new DoubleConstantExpression(10, ), new NegationExpression(new DoubleConstantExpression(5, ), ), )"
"33 : ex19 = new DivideExpression(new NegationExpression(new DoubleConstantExpression(10, ), ), new NegationExpression(new DoubleConstantExpression(5, ), ), )"
"34 : ex20 = new DivideExpression(new NegationExpression(new DoubleConstantExpression(10, ), ), new DoubleConstantExpression(5, ), )"
"36 : ex21 = new SubtractExpression(new DoubleConstantExpression(3, ), new DoubleConstantExpression(12, ), )"
"37 : ex22 = new SubtractExpression(new DoubleConstantExpression(3, ), new NegationExpression(new DoubleConstantExpression(12, ), ), )"
"38 : ex23 = new SubtractExpression(new NegationExpression(new DoubleConstantExpression(3, ), ), new NegationExpression(new DoubleConstantExpression(12, ), ), )"
"39 : ex24 = new SubtractExpression(new NegationExpression(new DoubleConstantExpression(3, ), ), new DoubleConstantExpression(12, ), )"
"40 : ex25 = new SubtractExpression(new NegationExpression(new DoubleConstantExpression(-3, ), ), new NegationExpression(new DoubleConstantExpression(12, ), ), )"
"42 : ex26 = new SubtractExpression(new IdentifierExpression(\"p\", ), new IdentifierExpression(\"r\", ), )"
"43 : ex27 = new AddExpression(new IdentifierExpression(\"p\", ), new IdentifierExpression(\"r\", ), )"
"44 : ex28 = new MultiplyExpression(new IdentifierExpression(\"p\", ), new IdentifierExpression(\"r\", ), )"
"45 : ex29 = new DivideExpression(new IdentifierExpression(\"p\", ), new IdentifierExpression(\"r\", ), )"
"48 : Check.check(ex1.evaluate(b1, ), 3, )"
"49 : Check.check(ex2.evaluate(b1, ), 80, )"
"50 : Check.check(ex3.evaluate(b1, ), 10, )"
"51 : Check.check(ex4.evaluate(b1, ), 12, )"
"52 : Check.check(ex5.evaluate(b1, ), 5.44, )"
"53 : Check.check(ex6.evaluate(b1, ), 61, )"
"54 : Check.check(ex7.evaluate(b1, ), 4, )"
"55 : Check.check(ex8.evaluate(b1, ), 0, )"
"57 : Check.check(ex9.evaluate(b1, ), 11, )"
"58 : Check.check(ex10.evaluate(b1, ), 3, )"
"59 : Check.check(ex11.evaluate(b1, ), 11, )"
"60 : Check.check(ex12.evaluate(b1, ), 3, )"
"62 : Check.check(ex13.evaluate(b1, ), 28, )"
"63 : Check.check(ex14.evaluate(b1, ), 28, )"
"64 : Check.check(ex15.evaluate(b1, ), 28, )"
"65 : Check.check(ex16.evaluate(b1, ), 28, )"
"67 : Check.check(ex17.evaluate(b1, ), 2, )"
"68 : Check.check(ex18.evaluate(b1, ), 2, )"
"69 : Check.check(ex19.evaluate(b1, ), 2, )"
"70 : Check.check(ex20.evaluate(b1, ), 2, )"
"72 : Check.check(ex21.evaluate(b1, ), 9, )"
"73 : Check.check(ex22.evaluate(b1, ), 15, )"
"74 : Check.check(ex23.evaluate(b1, ), 9, )"
"75 : Check.check(ex24.evaluate(b1, ), 15, )"
"76 : Check.check(ex25.evaluate(b1, ), 15, )"
"78 : Check.check(ex26.evaluate(b1, ), 14, )"
"79 : Check.check(ex27.evaluate(b1, ), 6, )"
"80 : Check.check(ex28.evaluate(b1, ), 40, )"
"81 : Check.check(ex29.evaluate(b1, ), 0.4, )"
}