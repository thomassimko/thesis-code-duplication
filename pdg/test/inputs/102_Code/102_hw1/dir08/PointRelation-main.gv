digraph G {
"7 : readP = 0"
"7 : readP = 0" -> "17 : readP = Scan.nextInt()" [style=dashed]
"8 : Scan = new Scanner(System.in, )"
"9 : tempX = 0"
"9 : tempX = 0" -> "10 : p1 = new CartesianPoint(tempX, tempY, )"
"9 : tempX = 0" -> "11 : p2 = new CartesianPoint(tempX, tempY, )"
"9 : tempX = 0" -> "34 : tempX = Scan.nextDouble()" [style=dashed]
"9 : tempX = 0" -> "24 : tempX = Scan.nextDouble()" [style=dashed]
"9 : tempY = 0"
"9 : tempY = 0" -> "10 : p1 = new CartesianPoint(tempX, tempY, )"
"9 : tempY = 0" -> "11 : p2 = new CartesianPoint(tempX, tempY, )"
"9 : tempY = 0" -> "27 : tempY = Scan.nextDouble()" [style=dashed]
"9 : tempY = 0" -> "37 : tempY = Scan.nextDouble()" [style=dashed]
"9 : tempR = 0"
"9 : tempR = 0" -> "58 : tempR = Scan.nextDouble()" [style=dashed]
"9 : tempR = 0" -> "47 : tempR = Scan.nextDouble()" [style=dashed]
"9 : tempDeg = 0"
"9 : tempDeg = 0" -> "50 : tempDeg = Scan.nextDouble()" [style=dashed]
"9 : tempDeg = 0" -> "61 : tempDeg = Scan.nextDouble()" [style=dashed]
"9 : tempA = 0"
"9 : tempA = 0" -> "51 : tempA = tempDeg * Math.PI / 180" [style=dashed]
"9 : tempA = 0" -> "62 : tempA = tempDeg * Math.PI / 180" [style=dashed]
"9 : distance = 0.0"
"9 : distance = 0.0" -> "73 : distance = distancePoints(p1, p2, )" [style=dashed]
"10 : p1 = new CartesianPoint(tempX, tempY, )"
"10 : p1 = new CartesianPoint(tempX, tempY, )" -> "76 : boo = sameQuad(p1, p2, )"
"10 : p1 = new CartesianPoint(tempX, tempY, )" -> "73 : distance = distancePoints(p1, p2, )"
"10 : p1 = new CartesianPoint(tempX, tempY, )" -> "53 : p1 = new PolarPoint(tempR, tempA, )" [style=dashed]
"10 : p1 = new CartesianPoint(tempX, tempY, )" -> "29 : p1 = new CartesianPoint(tempX, tempY, )" [style=dashed]
"11 : p2 = new CartesianPoint(tempX, tempY, )"
"11 : p2 = new CartesianPoint(tempX, tempY, )" -> "76 : boo = sameQuad(p1, p2, )"
"11 : p2 = new CartesianPoint(tempX, tempY, )" -> "73 : distance = distancePoints(p1, p2, )"
"11 : p2 = new CartesianPoint(tempX, tempY, )" -> "39 : p2 = new CartesianPoint(tempX, tempY, )" [style=dashed]
"11 : p2 = new CartesianPoint(tempX, tempY, )" -> "64 : p2 = new PolarPoint(tempR, tempA, )" [style=dashed]
"12 : boo = false"
"12 : boo = false" -> "76 : boo = sameQuad(p1, p2, )" [style=dashed]
"14 : i = 1"
"14 : i = 1" -> "21 : i == 1"
"14 : i = 1" -> "44 : i == 1"
"14 : i = 1" -> "14 : i < 3"
"14 : i = 1" -> "14 : @temp1 = i"
"14 : i = 1" -> "14 : i = i + 1"
"14 : i = 1" -> "55 : i == 2"
"14 : i = 1" -> "31 : i == 2"
"14 : i = 1" -> "14 : i = i + 1" [style=dashed]
"14 : i < 3"
"16 : System.out.print(\"Which type of point should be created (1 for Cartesion, 2 for Polar)? \", )"
"17 : readP = Scan.nextInt()"
"17 : readP = Scan.nextInt()" -> "42 : readP == 2"
"17 : readP = Scan.nextInt()" -> "19 : readP == 1"
"17 : readP = Scan.nextInt()" -> "17 : readP = Scan.nextInt()" [style=dashed]
"19 : readP == 1"
"73 : distance = distancePoints(p1, p2, )"
"73 : distance = distancePoints(p1, p2, )" -> "74 : System.out.println(\"Distance between points: \" + distance, )"
"74 : System.out.println(\"Distance between points: \" + distance, )"
"76 : boo = sameQuad(p1, p2, )"
"76 : boo = sameQuad(p1, p2, )" -> "81 : boo == false"
"76 : boo = sameQuad(p1, p2, )" -> "77 : boo == true"
"77 : boo == true"
"21 : i == 1"
"23 : System.out.print(\"Enter x-coordinate: \", )"
"24 : tempX = Scan.nextDouble()"
"24 : tempX = Scan.nextDouble()" -> "29 : p1 = new CartesianPoint(tempX, tempY, )"
"24 : tempX = Scan.nextDouble()" -> "34 : tempX = Scan.nextDouble()" [style=dashed]
"24 : tempX = Scan.nextDouble()" -> "24 : tempX = Scan.nextDouble()" [style=dashed]
"26 : System.out.print(\"Enter y-coordinate: \", )"
"27 : tempY = Scan.nextDouble()"
"27 : tempY = Scan.nextDouble()" -> "29 : p1 = new CartesianPoint(tempX, tempY, )"
"27 : tempY = Scan.nextDouble()" -> "27 : tempY = Scan.nextDouble()" [style=dashed]
"27 : tempY = Scan.nextDouble()" -> "37 : tempY = Scan.nextDouble()" [style=dashed]
"29 : p1 = new CartesianPoint(tempX, tempY, )"
"29 : p1 = new CartesianPoint(tempX, tempY, )" -> "76 : boo = sameQuad(p1, p2, )"
"29 : p1 = new CartesianPoint(tempX, tempY, )" -> "73 : distance = distancePoints(p1, p2, )"
"29 : p1 = new CartesianPoint(tempX, tempY, )" -> "53 : p1 = new PolarPoint(tempR, tempA, )" [style=dashed]
"29 : p1 = new CartesianPoint(tempX, tempY, )" -> "29 : p1 = new CartesianPoint(tempX, tempY, )" [style=dashed]
"31 : i == 2"
"33 : System.out.print(\"Enter x-coordinate: \", )"
"34 : tempX = Scan.nextDouble()"
"34 : tempX = Scan.nextDouble()" -> "39 : p2 = new CartesianPoint(tempX, tempY, )"
"34 : tempX = Scan.nextDouble()" -> "34 : tempX = Scan.nextDouble()" [style=dashed]
"34 : tempX = Scan.nextDouble()" -> "24 : tempX = Scan.nextDouble()" [style=dashed]
"36 : System.out.print(\"Enter y-coordinate: \", )"
"37 : tempY = Scan.nextDouble()"
"37 : tempY = Scan.nextDouble()" -> "39 : p2 = new CartesianPoint(tempX, tempY, )"
"37 : tempY = Scan.nextDouble()" -> "27 : tempY = Scan.nextDouble()" [style=dashed]
"37 : tempY = Scan.nextDouble()" -> "37 : tempY = Scan.nextDouble()" [style=dashed]
"39 : p2 = new CartesianPoint(tempX, tempY, )"
"39 : p2 = new CartesianPoint(tempX, tempY, )" -> "76 : boo = sameQuad(p1, p2, )"
"39 : p2 = new CartesianPoint(tempX, tempY, )" -> "73 : distance = distancePoints(p1, p2, )"
"39 : p2 = new CartesianPoint(tempX, tempY, )" -> "39 : p2 = new CartesianPoint(tempX, tempY, )" [style=dashed]
"39 : p2 = new CartesianPoint(tempX, tempY, )" -> "64 : p2 = new PolarPoint(tempR, tempA, )" [style=dashed]
"42 : readP == 2"
"44 : i == 1"
"46 : System.out.print(\"Enter radius: \", )"
"47 : tempR = Scan.nextDouble()"
"47 : tempR = Scan.nextDouble()" -> "53 : p1 = new PolarPoint(tempR, tempA, )"
"47 : tempR = Scan.nextDouble()" -> "58 : tempR = Scan.nextDouble()" [style=dashed]
"47 : tempR = Scan.nextDouble()" -> "47 : tempR = Scan.nextDouble()" [style=dashed]
"49 : System.out.print(\"Enter angle (in degrees): \", )"
"50 : tempDeg = Scan.nextDouble()"
"50 : tempDeg = Scan.nextDouble()" -> "51 : tempA = tempDeg * Math.PI / 180"
"50 : tempDeg = Scan.nextDouble()" -> "50 : tempDeg = Scan.nextDouble()" [style=dashed]
"50 : tempDeg = Scan.nextDouble()" -> "61 : tempDeg = Scan.nextDouble()" [style=dashed]
"51 : tempA = tempDeg * Math.PI / 180"
"51 : tempA = tempDeg * Math.PI / 180" -> "53 : p1 = new PolarPoint(tempR, tempA, )"
"51 : tempA = tempDeg * Math.PI / 180" -> "51 : tempA = tempDeg * Math.PI / 180" [style=dashed]
"51 : tempA = tempDeg * Math.PI / 180" -> "62 : tempA = tempDeg * Math.PI / 180" [style=dashed]
"53 : p1 = new PolarPoint(tempR, tempA, )"
"53 : p1 = new PolarPoint(tempR, tempA, )" -> "76 : boo = sameQuad(p1, p2, )"
"53 : p1 = new PolarPoint(tempR, tempA, )" -> "73 : distance = distancePoints(p1, p2, )"
"53 : p1 = new PolarPoint(tempR, tempA, )" -> "53 : p1 = new PolarPoint(tempR, tempA, )" [style=dashed]
"53 : p1 = new PolarPoint(tempR, tempA, )" -> "29 : p1 = new CartesianPoint(tempX, tempY, )" [style=dashed]
"55 : i == 2"
"57 : System.out.print(\"Enter radius: \", )"
"58 : tempR = Scan.nextDouble()"
"58 : tempR = Scan.nextDouble()" -> "64 : p2 = new PolarPoint(tempR, tempA, )"
"58 : tempR = Scan.nextDouble()" -> "58 : tempR = Scan.nextDouble()" [style=dashed]
"58 : tempR = Scan.nextDouble()" -> "47 : tempR = Scan.nextDouble()" [style=dashed]
"60 : System.out.print(\"Enter angle (in degrees): \", )"
"61 : tempDeg = Scan.nextDouble()"
"61 : tempDeg = Scan.nextDouble()" -> "62 : tempA = tempDeg * Math.PI / 180"
"61 : tempDeg = Scan.nextDouble()" -> "50 : tempDeg = Scan.nextDouble()" [style=dashed]
"61 : tempDeg = Scan.nextDouble()" -> "61 : tempDeg = Scan.nextDouble()" [style=dashed]
"62 : tempA = tempDeg * Math.PI / 180"
"62 : tempA = tempDeg * Math.PI / 180" -> "64 : p2 = new PolarPoint(tempR, tempA, )"
"62 : tempA = tempDeg * Math.PI / 180" -> "51 : tempA = tempDeg * Math.PI / 180" [style=dashed]
"62 : tempA = tempDeg * Math.PI / 180" -> "62 : tempA = tempDeg * Math.PI / 180" [style=dashed]
"64 : p2 = new PolarPoint(tempR, tempA, )"
"64 : p2 = new PolarPoint(tempR, tempA, )" -> "76 : boo = sameQuad(p1, p2, )"
"64 : p2 = new PolarPoint(tempR, tempA, )" -> "73 : distance = distancePoints(p1, p2, )"
"64 : p2 = new PolarPoint(tempR, tempA, )" -> "39 : p2 = new CartesianPoint(tempX, tempY, )" [style=dashed]
"64 : p2 = new PolarPoint(tempR, tempA, )" -> "64 : p2 = new PolarPoint(tempR, tempA, )" [style=dashed]
"69 : System.err.println(\"Error: Invalid Value\", )"
"70 : System.exit(1, )"
"14 : @temp1 = i"
"14 : @temp1 = i" -> "14 : @temp1 = i" [style=dashed]
"14 : i = i + 1"
"14 : i = i + 1" -> "21 : i == 1"
"14 : i = i + 1" -> "44 : i == 1"
"14 : i = i + 1" -> "14 : i < 3"
"14 : i = i + 1" -> "14 : @temp1 = i"
"14 : i = i + 1" -> "14 : i = i + 1"
"14 : i = i + 1" -> "55 : i == 2"
"14 : i = i + 1" -> "31 : i == 2"
"14 : i = i + 1" -> "14 : i = i + 1" [style=dashed]
"79 : System.out.println(\"In the same quadrant.\", )"
"81 : boo == false"
"83 : System.out.println(\"Not in the same quadrant.\", )"
}