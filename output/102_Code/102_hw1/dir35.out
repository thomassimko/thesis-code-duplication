[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for thesis:thesis:jar:1.0-SNAPSHOT
[WARNING] 'dependencies.dependency.version' for org.junit.jupiter:junit-jupiter-api:jar is either LATEST or RELEASE (both of them are being deprecated) @ line 25, column 22
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------------------------------------------------------------
[INFO] Building thesis 1.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] >>> exec-maven-plugin:1.2.1:java (default-cli) > validate @ thesis >>>
[INFO] 
[INFO] <<< exec-maven-plugin:1.2.1:java (default-cli) < validate @ thesis <<<
[INFO] 
[INFO] 
[INFO] --- exec-maven-plugin:1.2.1:java (default-cli) @ thesis ---
BLOCK: Startconstructor1L0
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: BasicL1
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: trueL3
angle : angle = angle + Math.PI, 
radius : radius = 1 * radius, 
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: joinL4
angle : angle = angle + Math.PI, 
radius : radius = 1 * radius, 
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: trueL5
angle : angle = angle + Math.PI, 
radius : radius = 1 * radius, 
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: LoopL7
angle : angle = angle + 2 * Math.PI, 
radius : radius = 1 * radius, 
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: BasicL8
angle : angle = angle + 2 * Math.PI, angle = angle + Math.PI, 
radius : radius = 1 * radius, 
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: joinL6
angle : angle = angle + 2 * Math.PI, angle = angle + Math.PI, 
radius : radius = 1 * radius, 
this.radius : this.radius = radius, 
this.angle : this.angle = angle, 

BLOCK: StartxCoordinateL9
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: BasicL10
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: StartyCoordinateL12
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: BasicL13
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: StartradiusL15
this.angle : this.angle = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: BasicL16
this.angle : this.angle = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: StartangleL18
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: BasicL19
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: Startrotate90L21
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: BasicL22
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 
newPoint : newPoint = new PolarPoint(this.radius, this.angle + Math.PI / 2, ), 

BLOCK: StartcalcDistanceL24

BLOCK: BasicL25

BLOCK: StartfindQuadrantL27

BLOCK: BasicL28

BLOCK: trueL30

BLOCK: falseL32

BLOCK: trueL33

BLOCK: falseL35

BLOCK: trueL36

BLOCK: falseL38

BLOCK: joinL37

BLOCK: joinL34

BLOCK: joinL31

BLOCK: StartinSameQuadrantL39

BLOCK: BasicL40

BLOCK: trueL42

BLOCK: joinL43

BLOCK: StartmainL44

BLOCK: BasicL45
pointType : pointType = 0, 
points : points = new ArrayList(), 

BLOCK: ForInitL47
i : i = 0, 
pointType : pointType = 0, 
points : points = new ArrayList(), 

BLOCK: ForCondL48
radius : radius = scanner.nextDouble(), 
i : i = i + 1, i = 0, 
pointType : pointType = scanner.nextInt(), pointType = 0, 
y_coord : y_coord = scanner.nextDouble(), 
angle : angle = scanner.nextDouble() * Math.PI / 180, 
@temp1 : @temp1 = i, 
scanner : scanner = new Scanner(System.in, ), 
x_coord : x_coord = scanner.nextDouble(), 
points : points = new ArrayList(), 

BLOCK: LoopL49
radius : radius = scanner.nextDouble(), 
pointType : pointType = scanner.nextInt(), 
i : i = i + 1, i = 0, 
y_coord : y_coord = scanner.nextDouble(), 
angle : angle = scanner.nextDouble() * Math.PI / 180, 
@temp1 : @temp1 = i, 
scanner : scanner = new Scanner(System.in, ), 
x_coord : x_coord = scanner.nextDouble(), 
points : points = new ArrayList(), 

BLOCK: BasicL50
radius : radius = scanner.nextDouble(), 
i : i = i + 1, i = 0, 
pointType : pointType = scanner.nextInt(), pointType = 0, 
y_coord : y_coord = scanner.nextDouble(), 
angle : angle = scanner.nextDouble() * Math.PI / 180, 
@temp1 : @temp1 = i, 
scanner : scanner = new Scanner(System.in, ), 
distance : distance = PointRelation.calcDistance(points.get(0, ), points.get(1, ), ), 
x_coord : x_coord = scanner.nextDouble(), 
points : points = new ArrayList(), 

BLOCK: trueL51
radius : radius = scanner.nextDouble(), 
pointType : pointType = scanner.nextInt(), 
i : i = i + 1, i = 0, 
y_coord : y_coord = scanner.nextDouble(), 
angle : angle = scanner.nextDouble() * Math.PI / 180, 
@temp1 : @temp1 = i, 
scanner : scanner = new Scanner(System.in, ), 
x_coord : x_coord = scanner.nextDouble(), 
points : points = new ArrayList(), 

BLOCK: falseL53
radius : radius = scanner.nextDouble(), 
pointType : pointType = scanner.nextInt(), 
i : i = i + 1, i = 0, 
y_coord : y_coord = scanner.nextDouble(), 
angle : angle = scanner.nextDouble() * Math.PI / 180, 
@temp1 : @temp1 = i, 
scanner : scanner = new Scanner(System.in, ), 
x_coord : x_coord = scanner.nextDouble(), 
points : points = new ArrayList(), 

BLOCK: trueL54
radius : radius = scanner.nextDouble(), 
pointType : pointType = scanner.nextInt(), 
i : i = i + 1, i = 0, 
angle : angle = scanner.nextDouble() * Math.PI / 180, 
y_coord : y_coord = scanner.nextDouble(), 
@temp1 : @temp1 = i, 
scanner : scanner = new Scanner(System.in, ), 
x_coord : x_coord = scanner.nextDouble(), 
points : points = new ArrayList(), 

BLOCK: falseL56
radius : radius = scanner.nextDouble(), 
pointType : pointType = scanner.nextInt(), 
i : i = i + 1, i = 0, 
y_coord : y_coord = scanner.nextDouble(), 
angle : angle = scanner.nextDouble() * Math.PI / 180, 
@temp1 : @temp1 = i, 
scanner : scanner = new Scanner(System.in, ), 
x_coord : x_coord = scanner.nextDouble(), 
points : points = new ArrayList(), 

BLOCK: joinL55
radius : radius = scanner.nextDouble(), 
pointType : pointType = scanner.nextInt(), 
i : i = i + 1, i = 0, 
angle : angle = scanner.nextDouble() * Math.PI / 180, 
y_coord : y_coord = scanner.nextDouble(), 
@temp1 : @temp1 = i, 
scanner : scanner = new Scanner(System.in, ), 
x_coord : x_coord = scanner.nextDouble(), 
points : points = new ArrayList(), 

BLOCK: joinL52
radius : radius = scanner.nextDouble(), 
i : i = i + 1, 
pointType : pointType = scanner.nextInt(), 
y_coord : y_coord = scanner.nextDouble(), 
angle : angle = scanner.nextDouble() * Math.PI / 180, 
@temp1 : @temp1 = i, 
scanner : scanner = new Scanner(System.in, ), 
x_coord : x_coord = scanner.nextDouble(), 
points : points = new ArrayList(), 

BLOCK: trueL57
radius : radius = scanner.nextDouble(), 
i : i = i + 1, i = 0, 
pointType : pointType = scanner.nextInt(), pointType = 0, 
y_coord : y_coord = scanner.nextDouble(), 
angle : angle = scanner.nextDouble() * Math.PI / 180, 
@temp1 : @temp1 = i, 
scanner : scanner = new Scanner(System.in, ), 
distance : distance = PointRelation.calcDistance(points.get(0, ), points.get(1, ), ), 
x_coord : x_coord = scanner.nextDouble(), 
points : points = new ArrayList(), 

BLOCK: falseL59
radius : radius = scanner.nextDouble(), 
i : i = i + 1, i = 0, 
pointType : pointType = scanner.nextInt(), pointType = 0, 
y_coord : y_coord = scanner.nextDouble(), 
angle : angle = scanner.nextDouble() * Math.PI / 180, 
@temp1 : @temp1 = i, 
scanner : scanner = new Scanner(System.in, ), 
distance : distance = PointRelation.calcDistance(points.get(0, ), points.get(1, ), ), 
x_coord : x_coord = scanner.nextDouble(), 
points : points = new ArrayList(), 

BLOCK: joinL58
radius : radius = scanner.nextDouble(), 
i : i = i + 1, i = 0, 
pointType : pointType = scanner.nextInt(), pointType = 0, 
y_coord : y_coord = scanner.nextDouble(), 
angle : angle = scanner.nextDouble() * Math.PI / 180, 
@temp1 : @temp1 = i, 
scanner : scanner = new Scanner(System.in, ), 
distance : distance = PointRelation.calcDistance(points.get(0, ), points.get(1, ), ), 
x_coord : x_coord = scanner.nextDouble(), 
points : points = new ArrayList(), 

BLOCK: StartmainL60

BLOCK: BasicL61
pt3 : pt3 = new PolarPoint(-1.3, Math.PI, ), 
pt5 : pt5 = new PolarPoint(2.0, Math.PI / 3, ), 
pt : pt = new PolarPoint(4.0, Math.PI / 2, ), 
pt4 : pt4 = new PolarPoint(5.0, 3 * Math.PI / 2, ), 
pt2 : pt2 = new PolarPoint(0.0, 0.0, ), 

BLOCK: Startconstructor1L63
this.y_coord : this.y_coord = 0.0, 
this.x_coord : this.x_coord = 0.0, 

BLOCK: BasicL64
this.y_coord : this.y_coord = y_coord, 
this.x_coord : this.x_coord = x_coord, 

BLOCK: StartxCoordinateL66
this.y_coord : this.y_coord = 0.0, 
this.x_coord : this.x_coord = 0.0, 

BLOCK: BasicL67
this.y_coord : this.y_coord = 0.0, 
this.x_coord : this.x_coord = 0.0, 

BLOCK: StartyCoordinateL69
this.y_coord : this.y_coord = 0.0, 
this.x_coord : this.x_coord = 0.0, 

BLOCK: BasicL70
this.y_coord : this.y_coord = 0.0, 
this.x_coord : this.x_coord = 0.0, 

BLOCK: StartradiusL72
this.y_coord : this.y_coord = 0.0, 
this.x_coord : this.x_coord = 0.0, 

BLOCK: BasicL73
this.y_coord : this.y_coord = 0.0, 
this.x_coord : this.x_coord = 0.0, 

BLOCK: StartangleL75
this.x_coord : this.x_coord = 0.0, 
this.y_coord : this.y_coord = 0.0, 

BLOCK: BasicL76
this.x_coord : this.x_coord = 0.0, 
this.y_coord : this.y_coord = 0.0, 

BLOCK: Startrotate90L78
this.x_coord : this.x_coord = 0.0, 
this.y_coord : this.y_coord = 0.0, 

BLOCK: BasicL79
this.x_coord : this.x_coord = 0.0, 
newPoint : newPoint = new CartesianPoint(-this.y_coord, this.x_coord, ), 
this.y_coord : this.y_coord = 0.0, 

BLOCK: StartmainL81

BLOCK: BasicL82
pt2 : pt2 = new CartesianPoint(0.0, 1.5, ), 
pt : pt = new CartesianPoint(1.0, 1.0, ), 
pt4 : pt4 = new CartesianPoint(0.0, 0.0, ), 
pt3 : pt3 = new CartesianPoint(1.2, 0.0, ), 
pt5 : pt5 = new CartesianPoint(-2.0, 1.0, ), 

BLOCK: Startconstructor1L0
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: Startconstructor1L0
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: BasicL1
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: trueL3
angle : angle = angle + Math.PI, 
radius : radius = 1 * radius, 
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: joinL4
angle : angle = angle + Math.PI, 
radius : radius = 1 * radius, 
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: trueL5
angle : angle = angle + Math.PI, 
radius : radius = 1 * radius, 
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: LoopL7
angle : angle = angle + 2 * Math.PI, 
radius : radius = 1 * radius, 
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: BasicL8
angle : angle = angle + 2 * Math.PI, angle = angle + Math.PI, 
radius : radius = 1 * radius, 
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: joinL6
angle : angle = angle + 2 * Math.PI, angle = angle + Math.PI, 
radius : radius = 1 * radius, 
this.radius : this.radius = radius, 
this.angle : this.angle = angle, 

BLOCK: StartxCoordinateL9
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: StartxCoordinateL9
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: BasicL10
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: StartyCoordinateL12
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: StartyCoordinateL12
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: BasicL13
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: StartradiusL15
this.angle : this.angle = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: StartradiusL15
this.angle : this.angle = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: BasicL16
this.angle : this.angle = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: StartangleL18
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: StartangleL18
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: BasicL19
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: Startrotate90L21
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: Startrotate90L21
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: BasicL22
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 
newPoint : newPoint = new PolarPoint(this.radius, this.angle + Math.PI / 2, ), 

BLOCK: StartcalcDistanceL24

BLOCK: StartcalcDistanceL24

BLOCK: BasicL25

BLOCK: StartfindQuadrantL27

BLOCK: StartfindQuadrantL27

BLOCK: BasicL28

BLOCK: trueL30

BLOCK: falseL32

BLOCK: trueL33

BLOCK: falseL35

BLOCK: trueL36

BLOCK: falseL38

BLOCK: joinL37

BLOCK: joinL34

BLOCK: joinL31

BLOCK: StartinSameQuadrantL39

BLOCK: StartinSameQuadrantL39

BLOCK: BasicL40

BLOCK: trueL42

BLOCK: joinL43

BLOCK: StartmainL44

BLOCK: StartmainL44

BLOCK: BasicL45
pointType : pointType = 0, 
points : points = new ArrayList(), 

BLOCK: ForInitL47
i : i = 0, 
pointType : pointType = 0, 
points : points = new ArrayList(), 

BLOCK: ForCondL48
radius : radius = scanner.nextDouble(), 
i : i = i + 1, i = 0, 
pointType : pointType = scanner.nextInt(), pointType = 0, 
y_coord : y_coord = scanner.nextDouble(), 
angle : angle = scanner.nextDouble() * Math.PI / 180, 
@temp1 : @temp1 = i, 
scanner : scanner = new Scanner(System.in, ), 
x_coord : x_coord = scanner.nextDouble(), 
points : points = new ArrayList(), 

BLOCK: LoopL49
radius : radius = scanner.nextDouble(), 
pointType : pointType = scanner.nextInt(), 
i : i = i + 1, i = 0, 
y_coord : y_coord = scanner.nextDouble(), 
angle : angle = scanner.nextDouble() * Math.PI / 180, 
@temp1 : @temp1 = i, 
scanner : scanner = new Scanner(System.in, ), 
x_coord : x_coord = scanner.nextDouble(), 
points : points = new ArrayList(), 

BLOCK: BasicL50
radius : radius = scanner.nextDouble(), 
i : i = i + 1, i = 0, 
pointType : pointType = scanner.nextInt(), pointType = 0, 
y_coord : y_coord = scanner.nextDouble(), 
angle : angle = scanner.nextDouble() * Math.PI / 180, 
@temp1 : @temp1 = i, 
scanner : scanner = new Scanner(System.in, ), 
distance : distance = PointRelation.calcDistance(points.get(0, ), points.get(1, ), ), 
x_coord : x_coord = scanner.nextDouble(), 
points : points = new ArrayList(), 

BLOCK: trueL51
radius : radius = scanner.nextDouble(), 
pointType : pointType = scanner.nextInt(), 
i : i = i + 1, i = 0, 
y_coord : y_coord = scanner.nextDouble(), 
angle : angle = scanner.nextDouble() * Math.PI / 180, 
@temp1 : @temp1 = i, 
scanner : scanner = new Scanner(System.in, ), 
x_coord : x_coord = scanner.nextDouble(), 
points : points = new ArrayList(), 

BLOCK: falseL53
radius : radius = scanner.nextDouble(), 
pointType : pointType = scanner.nextInt(), 
i : i = i + 1, i = 0, 
y_coord : y_coord = scanner.nextDouble(), 
angle : angle = scanner.nextDouble() * Math.PI / 180, 
@temp1 : @temp1 = i, 
scanner : scanner = new Scanner(System.in, ), 
x_coord : x_coord = scanner.nextDouble(), 
points : points = new ArrayList(), 

BLOCK: trueL54
radius : radius = scanner.nextDouble(), 
pointType : pointType = scanner.nextInt(), 
i : i = i + 1, i = 0, 
angle : angle = scanner.nextDouble() * Math.PI / 180, 
y_coord : y_coord = scanner.nextDouble(), 
@temp1 : @temp1 = i, 
scanner : scanner = new Scanner(System.in, ), 
x_coord : x_coord = scanner.nextDouble(), 
points : points = new ArrayList(), 

BLOCK: falseL56
radius : radius = scanner.nextDouble(), 
pointType : pointType = scanner.nextInt(), 
i : i = i + 1, i = 0, 
y_coord : y_coord = scanner.nextDouble(), 
angle : angle = scanner.nextDouble() * Math.PI / 180, 
@temp1 : @temp1 = i, 
scanner : scanner = new Scanner(System.in, ), 
x_coord : x_coord = scanner.nextDouble(), 
points : points = new ArrayList(), 

BLOCK: joinL55
radius : radius = scanner.nextDouble(), 
pointType : pointType = scanner.nextInt(), 
i : i = i + 1, i = 0, 
angle : angle = scanner.nextDouble() * Math.PI / 180, 
y_coord : y_coord = scanner.nextDouble(), 
@temp1 : @temp1 = i, 
scanner : scanner = new Scanner(System.in, ), 
x_coord : x_coord = scanner.nextDouble(), 
points : points = new ArrayList(), 

BLOCK: joinL52
radius : radius = scanner.nextDouble(), 
i : i = i + 1, 
pointType : pointType = scanner.nextInt(), 
y_coord : y_coord = scanner.nextDouble(), 
angle : angle = scanner.nextDouble() * Math.PI / 180, 
@temp1 : @temp1 = i, 
scanner : scanner = new Scanner(System.in, ), 
x_coord : x_coord = scanner.nextDouble(), 
points : points = new ArrayList(), 

BLOCK: trueL57
radius : radius = scanner.nextDouble(), 
i : i = i + 1, i = 0, 
pointType : pointType = scanner.nextInt(), pointType = 0, 
y_coord : y_coord = scanner.nextDouble(), 
angle : angle = scanner.nextDouble() * Math.PI / 180, 
@temp1 : @temp1 = i, 
scanner : scanner = new Scanner(System.in, ), 
distance : distance = PointRelation.calcDistance(points.get(0, ), points.get(1, ), ), 
x_coord : x_coord = scanner.nextDouble(), 
points : points = new ArrayList(), 

BLOCK: falseL59
radius : radius = scanner.nextDouble(), 
i : i = i + 1, i = 0, 
pointType : pointType = scanner.nextInt(), pointType = 0, 
y_coord : y_coord = scanner.nextDouble(), 
angle : angle = scanner.nextDouble() * Math.PI / 180, 
@temp1 : @temp1 = i, 
scanner : scanner = new Scanner(System.in, ), 
distance : distance = PointRelation.calcDistance(points.get(0, ), points.get(1, ), ), 
x_coord : x_coord = scanner.nextDouble(), 
points : points = new ArrayList(), 

BLOCK: joinL58
radius : radius = scanner.nextDouble(), 
i : i = i + 1, i = 0, 
pointType : pointType = scanner.nextInt(), pointType = 0, 
y_coord : y_coord = scanner.nextDouble(), 
angle : angle = scanner.nextDouble() * Math.PI / 180, 
@temp1 : @temp1 = i, 
scanner : scanner = new Scanner(System.in, ), 
distance : distance = PointRelation.calcDistance(points.get(0, ), points.get(1, ), ), 
x_coord : x_coord = scanner.nextDouble(), 
points : points = new ArrayList(), 

BLOCK: StartmainL60

BLOCK: StartmainL60

BLOCK: BasicL61
pt3 : pt3 = new PolarPoint(-1.3, Math.PI, ), 
pt5 : pt5 = new PolarPoint(2.0, Math.PI / 3, ), 
pt : pt = new PolarPoint(4.0, Math.PI / 2, ), 
pt4 : pt4 = new PolarPoint(5.0, 3 * Math.PI / 2, ), 
pt2 : pt2 = new PolarPoint(0.0, 0.0, ), 

BLOCK: Startconstructor1L63
this.y_coord : this.y_coord = 0.0, 
this.x_coord : this.x_coord = 0.0, 

BLOCK: Startconstructor1L63
this.y_coord : this.y_coord = 0.0, 
this.x_coord : this.x_coord = 0.0, 

BLOCK: BasicL64
this.y_coord : this.y_coord = y_coord, 
this.x_coord : this.x_coord = x_coord, 

BLOCK: StartxCoordinateL66
this.y_coord : this.y_coord = 0.0, 
this.x_coord : this.x_coord = 0.0, 

BLOCK: StartxCoordinateL66
this.y_coord : this.y_coord = 0.0, 
this.x_coord : this.x_coord = 0.0, 

BLOCK: BasicL67
this.y_coord : this.y_coord = 0.0, 
this.x_coord : this.x_coord = 0.0, 

BLOCK: StartyCoordinateL69
this.y_coord : this.y_coord = 0.0, 
this.x_coord : this.x_coord = 0.0, 

BLOCK: StartyCoordinateL69
this.y_coord : this.y_coord = 0.0, 
this.x_coord : this.x_coord = 0.0, 

BLOCK: BasicL70
this.y_coord : this.y_coord = 0.0, 
this.x_coord : this.x_coord = 0.0, 

BLOCK: StartradiusL72
this.y_coord : this.y_coord = 0.0, 
this.x_coord : this.x_coord = 0.0, 

BLOCK: StartradiusL72
this.y_coord : this.y_coord = 0.0, 
this.x_coord : this.x_coord = 0.0, 

BLOCK: BasicL73
this.y_coord : this.y_coord = 0.0, 
this.x_coord : this.x_coord = 0.0, 

BLOCK: StartangleL75
this.x_coord : this.x_coord = 0.0, 
this.y_coord : this.y_coord = 0.0, 

BLOCK: StartangleL75
this.x_coord : this.x_coord = 0.0, 
this.y_coord : this.y_coord = 0.0, 

BLOCK: BasicL76
this.x_coord : this.x_coord = 0.0, 
this.y_coord : this.y_coord = 0.0, 

BLOCK: Startrotate90L78
this.x_coord : this.x_coord = 0.0, 
this.y_coord : this.y_coord = 0.0, 

BLOCK: Startrotate90L78
this.x_coord : this.x_coord = 0.0, 
this.y_coord : this.y_coord = 0.0, 

BLOCK: BasicL79
this.x_coord : this.x_coord = 0.0, 
newPoint : newPoint = new CartesianPoint(-this.y_coord, this.x_coord, ), 
this.y_coord : this.y_coord = 0.0, 

BLOCK: StartmainL81

BLOCK: StartmainL81

BLOCK: BasicL82
pt2 : pt2 = new CartesianPoint(0.0, 1.5, ), 
pt : pt = new CartesianPoint(1.0, 1.0, ), 
pt4 : pt4 = new CartesianPoint(0.0, 0.0, ), 
pt3 : pt3 = new CartesianPoint(1.2, 0.0, ), 
pt5 : pt5 = new CartesianPoint(-2.0, 1.0, ), 

Unfiltered: 0
Filtered: 0


[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 7.541 s
[INFO] Finished at: 2019-05-06T19:55:13-07:00
[INFO] Final Memory: 27M/964M
[INFO] ------------------------------------------------------------------------
