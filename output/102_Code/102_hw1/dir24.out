[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for thesis:thesis:jar:1.0-SNAPSHOT
[WARNING] 'dependencies.dependency.version' for org.junit.jupiter:junit-jupiter-api:jar is either LATEST or RELEASE (both of them are being deprecated) @ line 25, column 22
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------------------------------------------------------------
[INFO] Building thesis 1.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] >>> exec-maven-plugin:1.2.1:java (default-cli) > validate @ thesis >>>
[INFO] 
[INFO] <<< exec-maven-plugin:1.2.1:java (default-cli) < validate @ thesis <<<
[INFO] 
[INFO] 
[INFO] --- exec-maven-plugin:1.2.1:java (default-cli) @ thesis ---
BLOCK: Startconstructor1L0
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: BasicL1
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: trueL3
this.radius : this.radius = 0.0, 
angle : angle = 2 * Math.PI + angle, 
this.angle : this.angle = 0.0, 

BLOCK: joinL4
this.radius : this.radius = 0.0, 
angle : angle = 2 * Math.PI + angle, 
this.angle : this.angle = 0.0, 

BLOCK: trueL5
this.radius : this.radius = 0.0, 
angle : angle = 2 * Math.PI + angle, 
this.angle : this.angle = 0.0, 
radius : radius = radius, 

BLOCK: trueL7
this.radius : this.radius = 0.0, 
angle : angle = angle, 
this.angle : this.angle = 0.0, 
radius : radius = radius, 

BLOCK: falseL9
this.radius : this.radius = 0.0, 
angle : angle = 2 * Math.PI + angle, 
this.angle : this.angle = 0.0, 
radius : radius = radius, 

BLOCK: joinL8
this.radius : this.radius = 0.0, 
angle : angle = 2 * Math.PI + angle, angle = angle, 
this.angle : this.angle = 0.0, 
radius : radius = radius, 

BLOCK: joinL6
this.radius : this.radius = 0.0, 
angle : angle = 2 * Math.PI + angle, angle = angle, angle = 2 * Math.PI + angle, 
this.angle : this.angle = 0.0, 
radius : radius = radius, 

BLOCK: trueL10
this.radius : this.radius = 0.0, 
angle : angle = 2 * Math.PI + angle, angle = angle, angle = 2 * Math.PI + angle, 
this.angle : this.angle = 0.0, 
radius : radius = radius * 1, 

BLOCK: trueL12
this.radius : this.radius = 0.0, 
angle : angle = angle + Math.PI, 
this.angle : this.angle = 0.0, 
radius : radius = radius * 1, 

BLOCK: falseL14
this.radius : this.radius = 0.0, 
angle : angle = angle + Math.PI, 
this.angle : this.angle = 0.0, 
radius : radius = radius * 1, 

BLOCK: joinL13
this.radius : this.radius = 0.0, 
angle : angle = angle + Math.PI, angle = angle + Math.PI, 
this.angle : this.angle = 0.0, 
radius : radius = radius * 1, 

BLOCK: joinL11
this.radius : this.radius = radius, 
angle : angle = angle + Math.PI, angle = 2 * Math.PI + angle, angle = angle + Math.PI, angle = angle, angle = 2 * Math.PI + angle, 
this.angle : this.angle = angle, 
radius : radius = radius * 1, radius = radius, 

BLOCK: StartxCoordinateL15
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: BasicL16
x_coord : x_coord = this.radius * Math.cos(this.angle, ), 
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: StartyCoordinateL18
this.angle : this.angle = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: BasicL19
this.angle : this.angle = 0.0, 
y_coord : y_coord = this.radius * Math.sin(this.angle, ), 
this.radius : this.radius = 0.0, 

BLOCK: StartradiusL21
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: BasicL22
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: StartangleL24
this.angle : this.angle = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: BasicL25
this.angle : this.angle = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: Startrotate90L27
this.angle : this.angle = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: BasicL28
this.angle : this.angle = this.angle + Math.PI / 2, 
this.radius : this.radius = 0.0, 

BLOCK: trueL30
this.angle : this.angle = this.angle - 2 * Math.PI, 
this.radius : this.radius = 0.0, 

BLOCK: joinL31
this.angle : this.angle = this.angle - 2 * Math.PI, this.angle = this.angle + Math.PI / 2, 
this.radius : this.radius = 0.0, 

BLOCK: StartPointDistanceL32

BLOCK: BasicL33
y1 : y1 = p1.yCoordinate(), 
y2 : y2 = p2.yCoordinate(), 
x1 : x1 = p1.xCoordinate(), 
x2 : x2 = p2.xCoordinate(), 
distance : distance = Math.sqrt(x2 - x1 * x2 - x1 + y2 - y1 * y2 - y1, ), 

BLOCK: StartQuadrantCheckL35

BLOCK: BasicL36
y1 : y1 = p1.yCoordinate(), 
x2 : x2 = p2.xCoordinate(), 
y2 : y2 = p2.yCoordinate(), 
x1 : x1 = p1.xCoordinate(), 

BLOCK: trueL38
y1 : y1 = p1.yCoordinate(), 
x2 : x2 = p2.xCoordinate(), 
y2 : y2 = p2.yCoordinate(), 
x1 : x1 = p1.xCoordinate(), 

BLOCK: falseL40
y1 : y1 = p1.yCoordinate(), 
x2 : x2 = p2.xCoordinate(), 
y2 : y2 = p2.yCoordinate(), 
x1 : x1 = p1.xCoordinate(), 

BLOCK: trueL41
y1 : y1 = p1.yCoordinate(), 
x2 : x2 = p2.xCoordinate(), 
y2 : y2 = p2.yCoordinate(), 
x1 : x1 = p1.xCoordinate(), 

BLOCK: falseL43
y1 : y1 = p1.yCoordinate(), 
x2 : x2 = p2.xCoordinate(), 
y2 : y2 = p2.yCoordinate(), 
x1 : x1 = p1.xCoordinate(), 

BLOCK: trueL44
y1 : y1 = p1.yCoordinate(), 
x2 : x2 = p2.xCoordinate(), 
y2 : y2 = p2.yCoordinate(), 
x1 : x1 = p1.xCoordinate(), 

BLOCK: falseL46
y1 : y1 = p1.yCoordinate(), 
x2 : x2 = p2.xCoordinate(), 
y2 : y2 = p2.yCoordinate(), 
x1 : x1 = p1.xCoordinate(), 

BLOCK: trueL47
y1 : y1 = p1.yCoordinate(), 
x2 : x2 = p2.xCoordinate(), 
y2 : y2 = p2.yCoordinate(), 
x1 : x1 = p1.xCoordinate(), 

BLOCK: falseL49
y1 : y1 = p1.yCoordinate(), 
x2 : x2 = p2.xCoordinate(), 
y2 : y2 = p2.yCoordinate(), 
x1 : x1 = p1.xCoordinate(), 

BLOCK: joinL48
y1 : y1 = p1.yCoordinate(), 
x2 : x2 = p2.xCoordinate(), 
y2 : y2 = p2.yCoordinate(), 
x1 : x1 = p1.xCoordinate(), 

BLOCK: joinL45
y1 : y1 = p1.yCoordinate(), 
x2 : x2 = p2.xCoordinate(), 
y2 : y2 = p2.yCoordinate(), 
x1 : x1 = p1.xCoordinate(), 

BLOCK: joinL42
y1 : y1 = p1.yCoordinate(), 
x2 : x2 = p2.xCoordinate(), 
y2 : y2 = p2.yCoordinate(), 
x1 : x1 = p1.xCoordinate(), 

BLOCK: joinL39
y1 : y1 = p1.yCoordinate(), 
x2 : x2 = p2.xCoordinate(), 
y2 : y2 = p2.yCoordinate(), 
x1 : x1 = p1.xCoordinate(), 

BLOCK: StartmainL50

BLOCK: BasicL51
a : a = 0.0, 
r : r = 0.0, 
x : x = 0.0, 
sc : sc = new Scanner(System.in, ), 
i : i = sc.nextInt(), 
p2 : p2 = null, 
y : y = 0.0, 
p1 : p1 = null, 

BLOCK: trueL53
x : x = sc.nextInt(), 
a : a = 0.0, 
r : r = 0.0, 
sc : sc = new Scanner(System.in, ), 
i : i = sc.nextInt(), 
p2 : p2 = null, 
y : y = sc.nextInt(), 
p1 : p1 = new CartesianPoint(x, y, ), 

BLOCK: falseL55
a : a = 0.0, 
r : r = 0.0, 
x : x = 0.0, 
sc : sc = new Scanner(System.in, ), 
i : i = sc.nextInt(), 
p2 : p2 = null, 
y : y = 0.0, 
p1 : p1 = null, 

BLOCK: trueL56
a : a = a * Math.PI / 180, 
r : r = sc.nextInt(), 
x : x = 0.0, 
sc : sc = new Scanner(System.in, ), 
i : i = sc.nextInt(), 
p2 : p2 = null, 
y : y = 0.0, 
p1 : p1 = new PolarPoint(r, a, ), 

BLOCK: falseL58
a : a = 0.0, 
r : r = 0.0, 
x : x = 0.0, 
sc : sc = new Scanner(System.in, ), 
i : i = sc.nextInt(), 
p2 : p2 = null, 
y : y = 0.0, 
p1 : p1 = null, 

BLOCK: joinL57
a : a = 0.0, a = a * Math.PI / 180, a = a * Math.PI / 180, 
r : r = sc.nextInt(), r = sc.nextInt(), r = 0.0, 
x : x = sc.nextInt(), x = 0.0, x = sc.nextInt(), 
sc : sc = new Scanner(System.in, ), 
i : i = sc.nextInt(), i = sc.nextInt(), 
p2 : p2 = null, p2 = new CartesianPoint(x, y, ), p2 = new PolarPoint(r, a, ), 
y : y = sc.nextInt(), y = sc.nextInt(), y = 0.0, 
p1 : p1 = new CartesianPoint(x, y, ), p1 = null, p1 = new PolarPoint(r, a, ), 

BLOCK: joinL54
x : x = sc.nextInt(), x = 0.0, x = sc.nextInt(), 
a : a = 0.0, a = a * Math.PI / 180, a = a * Math.PI / 180, 
r : r = sc.nextInt(), r = sc.nextInt(), r = 0.0, 
sc : sc = new Scanner(System.in, ), 
i : i = sc.nextInt(), 
p2 : p2 = null, p2 = new CartesianPoint(x, y, ), p2 = new PolarPoint(r, a, ), 
y : y = sc.nextInt(), y = sc.nextInt(), y = 0.0, 
p1 : p1 = new CartesianPoint(x, y, ), p1 = null, p1 = new PolarPoint(r, a, ), 

BLOCK: trueL59
x : x = sc.nextInt(), 
a : a = 0.0, a = a * Math.PI / 180, a = a * Math.PI / 180, 
r : r = sc.nextInt(), r = sc.nextInt(), r = 0.0, 
sc : sc = new Scanner(System.in, ), 
i : i = sc.nextInt(), 
p2 : p2 = new CartesianPoint(x, y, ), 
y : y = sc.nextInt(), 
p1 : p1 = new CartesianPoint(x, y, ), p1 = null, p1 = new PolarPoint(r, a, ), 

BLOCK: falseL61
x : x = sc.nextInt(), x = 0.0, x = sc.nextInt(), 
a : a = 0.0, a = a * Math.PI / 180, a = a * Math.PI / 180, 
r : r = sc.nextInt(), r = sc.nextInt(), r = 0.0, 
sc : sc = new Scanner(System.in, ), 
i : i = sc.nextInt(), 
p2 : p2 = null, p2 = new CartesianPoint(x, y, ), p2 = new PolarPoint(r, a, ), 
y : y = sc.nextInt(), y = sc.nextInt(), y = 0.0, 
p1 : p1 = new CartesianPoint(x, y, ), p1 = null, p1 = new PolarPoint(r, a, ), 

BLOCK: trueL62
a : a = a * Math.PI / 180, 
r : r = sc.nextInt(), 
x : x = sc.nextInt(), x = 0.0, x = sc.nextInt(), 
sc : sc = new Scanner(System.in, ), 
i : i = sc.nextInt(), 
p2 : p2 = new PolarPoint(r, a, ), 
y : y = sc.nextInt(), y = sc.nextInt(), y = 0.0, 
p1 : p1 = new CartesianPoint(x, y, ), p1 = null, p1 = new PolarPoint(r, a, ), 

BLOCK: falseL64
x : x = sc.nextInt(), x = 0.0, x = sc.nextInt(), 
a : a = 0.0, a = a * Math.PI / 180, a = a * Math.PI / 180, 
r : r = sc.nextInt(), r = sc.nextInt(), r = 0.0, 
sc : sc = new Scanner(System.in, ), 
i : i = sc.nextInt(), 
p2 : p2 = null, p2 = new CartesianPoint(x, y, ), p2 = new PolarPoint(r, a, ), 
y : y = sc.nextInt(), y = sc.nextInt(), y = 0.0, 
p1 : p1 = new CartesianPoint(x, y, ), p1 = null, p1 = new PolarPoint(r, a, ), 

BLOCK: joinL63
a : a = 0.0, a = a * Math.PI / 180, a = a * Math.PI / 180, 
r : r = sc.nextInt(), r = sc.nextInt(), r = 0.0, 
x : x = sc.nextInt(), x = 0.0, x = sc.nextInt(), 
sc : sc = new Scanner(System.in, ), 
i : i = sc.nextInt(), i = sc.nextInt(), 
p2 : p2 = null, p2 = new CartesianPoint(x, y, ), p2 = new PolarPoint(r, a, ), 
y : y = sc.nextInt(), y = sc.nextInt(), y = 0.0, 
p1 : p1 = new CartesianPoint(x, y, ), p1 = null, p1 = new PolarPoint(r, a, ), 

BLOCK: joinL60
x : x = sc.nextInt(), x = 0.0, x = sc.nextInt(), 
a : a = 0.0, a = a * Math.PI / 180, a = a * Math.PI / 180, 
r : r = sc.nextInt(), r = sc.nextInt(), r = 0.0, 
sc : sc = new Scanner(System.in, ), 
i : i = sc.nextInt(), i = sc.nextInt(), 
p2 : p2 = null, p2 = new CartesianPoint(x, y, ), p2 = new PolarPoint(r, a, ), 
y : y = sc.nextInt(), y = sc.nextInt(), y = 0.0, 
p1 : p1 = new CartesianPoint(x, y, ), p1 = null, p1 = new PolarPoint(r, a, ), 

BLOCK: StarttestPolarPointL65

BLOCK: BasicL66

BLOCK: StartmainL68

BLOCK: BasicL69

BLOCK: Startconstructor1L71
this.x_coord : this.x_coord = 0.0, 
this.y_coord : this.y_coord = 0.0, 

BLOCK: BasicL72
this.x_coord : this.x_coord = x_coord, 
this.y_coord : this.y_coord = y_coord, 

BLOCK: StartxCoordinateL74
this.y_coord : this.y_coord = 0.0, 
this.x_coord : this.x_coord = 0.0, 

BLOCK: BasicL75
this.y_coord : this.y_coord = 0.0, 
this.x_coord : this.x_coord = 0.0, 

BLOCK: StartyCoordinateL77
this.y_coord : this.y_coord = 0.0, 
this.x_coord : this.x_coord = 0.0, 

BLOCK: BasicL78
this.y_coord : this.y_coord = 0.0, 
this.x_coord : this.x_coord = 0.0, 

BLOCK: StartradiusL80
this.y_coord : this.y_coord = 0.0, 
this.x_coord : this.x_coord = 0.0, 

BLOCK: BasicL81
this.y_coord : this.y_coord = 0.0, 
b : b = this.y_coord, 
a : a = this.x_coord, 
radius : radius = Math.sqrt(a * a + b * b, ), 
this.x_coord : this.x_coord = 0.0, 

BLOCK: StartangleL83
this.x_coord : this.x_coord = 0.0, 
this.y_coord : this.y_coord = 0.0, 

BLOCK: BasicL84
this.x_coord : this.x_coord = 0.0, 
angle : angle = 0.0, 
this.y_coord : this.y_coord = 0.0, 

BLOCK: trueL86
this.x_coord : this.x_coord = 0.0, 
angle : angle = Math.atan2(this.y_coord, this.x_coord, ), 
this.y_coord : this.y_coord = 0.0, 

BLOCK: joinL87
this.x_coord : this.x_coord = 0.0, 
angle : angle = Math.atan2(this.y_coord, this.x_coord, ), angle = 0.0, 
this.y_coord : this.y_coord = 0.0, 

BLOCK: trueL88
this.x_coord : this.x_coord = 0.0, 
angle : angle = Math.atan2(this.y_coord, this.x_coord, ), 
this.y_coord : this.y_coord = 0.0, 

BLOCK: joinL89
this.x_coord : this.x_coord = 0.0, 
angle : angle = Math.atan2(this.y_coord, this.x_coord, ), angle = Math.atan2(this.y_coord, this.x_coord, ), angle = 0.0, 
this.y_coord : this.y_coord = 0.0, 

BLOCK: trueL90
this.x_coord : this.x_coord = 0.0, 
angle : angle = Math.atan2(this.y_coord, this.x_coord, ) + Math.PI + Math.PI, 
this.y_coord : this.y_coord = 0.0, 

BLOCK: joinL91
this.x_coord : this.x_coord = 0.0, 
angle : angle = Math.atan2(this.y_coord, this.x_coord, ), angle = Math.atan2(this.y_coord, this.x_coord, ), angle = Math.atan2(this.y_coord, this.x_coord, ) + Math.PI + Math.PI, angle = 0.0, 
this.y_coord : this.y_coord = 0.0, 

BLOCK: trueL92
this.x_coord : this.x_coord = 0.0, 
angle : angle = Math.atan2(this.y_coord, this.x_coord, ) + Math.PI + Math.PI, 
this.y_coord : this.y_coord = 0.0, 

BLOCK: joinL93
this.x_coord : this.x_coord = 0.0, 
angle : angle = Math.atan2(this.y_coord, this.x_coord, ), angle = Math.atan2(this.y_coord, this.x_coord, ) + Math.PI + Math.PI, angle = Math.atan2(this.y_coord, this.x_coord, ), angle = Math.atan2(this.y_coord, this.x_coord, ) + Math.PI + Math.PI, angle = 0.0, 
this.y_coord : this.y_coord = 0.0, 

BLOCK: Startrotate90L94
this.y_coord : this.y_coord = 0.0, 
this.x_coord : this.x_coord = 0.0, 

BLOCK: BasicL95
this.y_coord : this.y_coord = temp_coord, 
this.x_coord : this.x_coord = this.y_coord, 
temp_coord : temp_coord = this.x_coord, 

BLOCK: StarttestCartesianPointL97

BLOCK: BasicL98

BLOCK: StartmainL100

BLOCK: BasicL101

BLOCK: Startconstructor1L0
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: Startconstructor1L0
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: BasicL1
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: trueL3
this.radius : this.radius = 0.0, 
angle : angle = 2 * Math.PI + angle, 
this.angle : this.angle = 0.0, 

BLOCK: joinL4
this.radius : this.radius = 0.0, 
angle : angle = 2 * Math.PI + angle, 
this.angle : this.angle = 0.0, 

BLOCK: trueL5
this.radius : this.radius = 0.0, 
angle : angle = 2 * Math.PI + angle, 
this.angle : this.angle = 0.0, 
radius : radius = radius, 

BLOCK: trueL7
this.radius : this.radius = 0.0, 
angle : angle = angle, 
this.angle : this.angle = 0.0, 
radius : radius = radius, 

BLOCK: falseL9
this.radius : this.radius = 0.0, 
angle : angle = 2 * Math.PI + angle, 
this.angle : this.angle = 0.0, 
radius : radius = radius, 

BLOCK: joinL8
this.radius : this.radius = 0.0, 
angle : angle = 2 * Math.PI + angle, angle = angle, 
this.angle : this.angle = 0.0, 
radius : radius = radius, 

BLOCK: joinL6
this.radius : this.radius = 0.0, 
angle : angle = 2 * Math.PI + angle, angle = angle, angle = 2 * Math.PI + angle, 
this.angle : this.angle = 0.0, 
radius : radius = radius, 

BLOCK: trueL10
this.radius : this.radius = 0.0, 
angle : angle = 2 * Math.PI + angle, angle = angle, angle = 2 * Math.PI + angle, 
this.angle : this.angle = 0.0, 
radius : radius = radius * 1, 

BLOCK: trueL12
this.radius : this.radius = 0.0, 
angle : angle = angle + Math.PI, 
this.angle : this.angle = 0.0, 
radius : radius = radius * 1, 

BLOCK: falseL14
this.radius : this.radius = 0.0, 
angle : angle = angle + Math.PI, 
this.angle : this.angle = 0.0, 
radius : radius = radius * 1, 

BLOCK: joinL13
this.radius : this.radius = 0.0, 
angle : angle = angle + Math.PI, angle = angle + Math.PI, 
this.angle : this.angle = 0.0, 
radius : radius = radius * 1, 

BLOCK: joinL11
this.radius : this.radius = radius, 
angle : angle = angle + Math.PI, angle = 2 * Math.PI + angle, angle = angle + Math.PI, angle = angle, angle = 2 * Math.PI + angle, 
this.angle : this.angle = angle, 
radius : radius = radius * 1, radius = radius, 

BLOCK: StartxCoordinateL15
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: StartxCoordinateL15
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: BasicL16
x_coord : x_coord = this.radius * Math.cos(this.angle, ), 
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: StartyCoordinateL18
this.angle : this.angle = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: StartyCoordinateL18
this.angle : this.angle = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: BasicL19
this.angle : this.angle = 0.0, 
y_coord : y_coord = this.radius * Math.sin(this.angle, ), 
this.radius : this.radius = 0.0, 

BLOCK: StartradiusL21
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: StartradiusL21
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: BasicL22
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: StartangleL24
this.angle : this.angle = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: StartangleL24
this.angle : this.angle = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: BasicL25
this.angle : this.angle = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: Startrotate90L27
this.angle : this.angle = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: Startrotate90L27
this.angle : this.angle = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: BasicL28
this.angle : this.angle = this.angle + Math.PI / 2, 
this.radius : this.radius = 0.0, 

BLOCK: trueL30
this.angle : this.angle = this.angle - 2 * Math.PI, 
this.radius : this.radius = 0.0, 

BLOCK: joinL31
this.angle : this.angle = this.angle - 2 * Math.PI, this.angle = this.angle + Math.PI / 2, 
this.radius : this.radius = 0.0, 

BLOCK: StartPointDistanceL32

BLOCK: StartPointDistanceL32

BLOCK: BasicL33
y1 : y1 = p1.yCoordinate(), 
y2 : y2 = p2.yCoordinate(), 
x1 : x1 = p1.xCoordinate(), 
x2 : x2 = p2.xCoordinate(), 
distance : distance = Math.sqrt(x2 - x1 * x2 - x1 + y2 - y1 * y2 - y1, ), 

BLOCK: StartQuadrantCheckL35

BLOCK: StartQuadrantCheckL35

BLOCK: BasicL36
y1 : y1 = p1.yCoordinate(), 
x2 : x2 = p2.xCoordinate(), 
y2 : y2 = p2.yCoordinate(), 
x1 : x1 = p1.xCoordinate(), 

BLOCK: trueL38
y1 : y1 = p1.yCoordinate(), 
x2 : x2 = p2.xCoordinate(), 
y2 : y2 = p2.yCoordinate(), 
x1 : x1 = p1.xCoordinate(), 

BLOCK: falseL40
y1 : y1 = p1.yCoordinate(), 
x2 : x2 = p2.xCoordinate(), 
y2 : y2 = p2.yCoordinate(), 
x1 : x1 = p1.xCoordinate(), 

BLOCK: trueL41
y1 : y1 = p1.yCoordinate(), 
x2 : x2 = p2.xCoordinate(), 
y2 : y2 = p2.yCoordinate(), 
x1 : x1 = p1.xCoordinate(), 

BLOCK: falseL43
y1 : y1 = p1.yCoordinate(), 
x2 : x2 = p2.xCoordinate(), 
y2 : y2 = p2.yCoordinate(), 
x1 : x1 = p1.xCoordinate(), 

BLOCK: trueL44
y1 : y1 = p1.yCoordinate(), 
x2 : x2 = p2.xCoordinate(), 
y2 : y2 = p2.yCoordinate(), 
x1 : x1 = p1.xCoordinate(), 

BLOCK: falseL46
y1 : y1 = p1.yCoordinate(), 
x2 : x2 = p2.xCoordinate(), 
y2 : y2 = p2.yCoordinate(), 
x1 : x1 = p1.xCoordinate(), 

BLOCK: trueL47
y1 : y1 = p1.yCoordinate(), 
x2 : x2 = p2.xCoordinate(), 
y2 : y2 = p2.yCoordinate(), 
x1 : x1 = p1.xCoordinate(), 

BLOCK: falseL49
y1 : y1 = p1.yCoordinate(), 
x2 : x2 = p2.xCoordinate(), 
y2 : y2 = p2.yCoordinate(), 
x1 : x1 = p1.xCoordinate(), 

BLOCK: joinL48
y1 : y1 = p1.yCoordinate(), 
x2 : x2 = p2.xCoordinate(), 
y2 : y2 = p2.yCoordinate(), 
x1 : x1 = p1.xCoordinate(), 

BLOCK: joinL45
y1 : y1 = p1.yCoordinate(), 
x2 : x2 = p2.xCoordinate(), 
y2 : y2 = p2.yCoordinate(), 
x1 : x1 = p1.xCoordinate(), 

BLOCK: joinL42
y1 : y1 = p1.yCoordinate(), 
x2 : x2 = p2.xCoordinate(), 
y2 : y2 = p2.yCoordinate(), 
x1 : x1 = p1.xCoordinate(), 

BLOCK: joinL39
y1 : y1 = p1.yCoordinate(), 
x2 : x2 = p2.xCoordinate(), 
y2 : y2 = p2.yCoordinate(), 
x1 : x1 = p1.xCoordinate(), 

BLOCK: StartmainL50

BLOCK: StartmainL50

BLOCK: BasicL51
a : a = 0.0, 
r : r = 0.0, 
x : x = 0.0, 
sc : sc = new Scanner(System.in, ), 
i : i = sc.nextInt(), 
p2 : p2 = null, 
y : y = 0.0, 
p1 : p1 = null, 

BLOCK: trueL53
x : x = sc.nextInt(), 
a : a = 0.0, 
r : r = 0.0, 
sc : sc = new Scanner(System.in, ), 
i : i = sc.nextInt(), 
p2 : p2 = null, 
y : y = sc.nextInt(), 
p1 : p1 = new CartesianPoint(x, y, ), 

BLOCK: falseL55
a : a = 0.0, 
r : r = 0.0, 
x : x = 0.0, 
sc : sc = new Scanner(System.in, ), 
i : i = sc.nextInt(), 
p2 : p2 = null, 
y : y = 0.0, 
p1 : p1 = null, 

BLOCK: trueL56
a : a = a * Math.PI / 180, 
r : r = sc.nextInt(), 
x : x = 0.0, 
sc : sc = new Scanner(System.in, ), 
i : i = sc.nextInt(), 
p2 : p2 = null, 
y : y = 0.0, 
p1 : p1 = new PolarPoint(r, a, ), 

BLOCK: falseL58
a : a = 0.0, 
r : r = 0.0, 
x : x = 0.0, 
sc : sc = new Scanner(System.in, ), 
i : i = sc.nextInt(), 
p2 : p2 = null, 
y : y = 0.0, 
p1 : p1 = null, 

BLOCK: joinL57
a : a = 0.0, a = a * Math.PI / 180, a = a * Math.PI / 180, 
r : r = sc.nextInt(), r = sc.nextInt(), r = 0.0, 
x : x = sc.nextInt(), x = 0.0, x = sc.nextInt(), 
sc : sc = new Scanner(System.in, ), 
i : i = sc.nextInt(), i = sc.nextInt(), 
p2 : p2 = null, p2 = new CartesianPoint(x, y, ), p2 = new PolarPoint(r, a, ), 
y : y = sc.nextInt(), y = sc.nextInt(), y = 0.0, 
p1 : p1 = new CartesianPoint(x, y, ), p1 = null, p1 = new PolarPoint(r, a, ), 

BLOCK: joinL54
x : x = sc.nextInt(), x = 0.0, x = sc.nextInt(), 
a : a = 0.0, a = a * Math.PI / 180, a = a * Math.PI / 180, 
r : r = sc.nextInt(), r = sc.nextInt(), r = 0.0, 
sc : sc = new Scanner(System.in, ), 
i : i = sc.nextInt(), 
p2 : p2 = null, p2 = new CartesianPoint(x, y, ), p2 = new PolarPoint(r, a, ), 
y : y = sc.nextInt(), y = sc.nextInt(), y = 0.0, 
p1 : p1 = new CartesianPoint(x, y, ), p1 = null, p1 = new PolarPoint(r, a, ), 

BLOCK: trueL59
x : x = sc.nextInt(), 
a : a = 0.0, a = a * Math.PI / 180, a = a * Math.PI / 180, 
r : r = sc.nextInt(), r = sc.nextInt(), r = 0.0, 
sc : sc = new Scanner(System.in, ), 
i : i = sc.nextInt(), 
p2 : p2 = new CartesianPoint(x, y, ), 
y : y = sc.nextInt(), 
p1 : p1 = new CartesianPoint(x, y, ), p1 = null, p1 = new PolarPoint(r, a, ), 

BLOCK: falseL61
x : x = sc.nextInt(), x = 0.0, x = sc.nextInt(), 
a : a = 0.0, a = a * Math.PI / 180, a = a * Math.PI / 180, 
r : r = sc.nextInt(), r = sc.nextInt(), r = 0.0, 
sc : sc = new Scanner(System.in, ), 
i : i = sc.nextInt(), 
p2 : p2 = null, p2 = new CartesianPoint(x, y, ), p2 = new PolarPoint(r, a, ), 
y : y = sc.nextInt(), y = sc.nextInt(), y = 0.0, 
p1 : p1 = new CartesianPoint(x, y, ), p1 = null, p1 = new PolarPoint(r, a, ), 

BLOCK: trueL62
a : a = a * Math.PI / 180, 
r : r = sc.nextInt(), 
x : x = sc.nextInt(), x = 0.0, x = sc.nextInt(), 
sc : sc = new Scanner(System.in, ), 
i : i = sc.nextInt(), 
p2 : p2 = new PolarPoint(r, a, ), 
y : y = sc.nextInt(), y = sc.nextInt(), y = 0.0, 
p1 : p1 = new CartesianPoint(x, y, ), p1 = null, p1 = new PolarPoint(r, a, ), 

BLOCK: falseL64
x : x = sc.nextInt(), x = 0.0, x = sc.nextInt(), 
a : a = 0.0, a = a * Math.PI / 180, a = a * Math.PI / 180, 
r : r = sc.nextInt(), r = sc.nextInt(), r = 0.0, 
sc : sc = new Scanner(System.in, ), 
i : i = sc.nextInt(), 
p2 : p2 = null, p2 = new CartesianPoint(x, y, ), p2 = new PolarPoint(r, a, ), 
y : y = sc.nextInt(), y = sc.nextInt(), y = 0.0, 
p1 : p1 = new CartesianPoint(x, y, ), p1 = null, p1 = new PolarPoint(r, a, ), 

BLOCK: joinL63
a : a = 0.0, a = a * Math.PI / 180, a = a * Math.PI / 180, 
r : r = sc.nextInt(), r = sc.nextInt(), r = 0.0, 
x : x = sc.nextInt(), x = 0.0, x = sc.nextInt(), 
sc : sc = new Scanner(System.in, ), 
i : i = sc.nextInt(), i = sc.nextInt(), 
p2 : p2 = null, p2 = new CartesianPoint(x, y, ), p2 = new PolarPoint(r, a, ), 
y : y = sc.nextInt(), y = sc.nextInt(), y = 0.0, 
p1 : p1 = new CartesianPoint(x, y, ), p1 = null, p1 = new PolarPoint(r, a, ), 

BLOCK: joinL60
x : x = sc.nextInt(), x = 0.0, x = sc.nextInt(), 
a : a = 0.0, a = a * Math.PI / 180, a = a * Math.PI / 180, 
r : r = sc.nextInt(), r = sc.nextInt(), r = 0.0, 
sc : sc = new Scanner(System.in, ), 
i : i = sc.nextInt(), i = sc.nextInt(), 
p2 : p2 = null, p2 = new CartesianPoint(x, y, ), p2 = new PolarPoint(r, a, ), 
y : y = sc.nextInt(), y = sc.nextInt(), y = 0.0, 
p1 : p1 = new CartesianPoint(x, y, ), p1 = null, p1 = new PolarPoint(r, a, ), 

BLOCK: StarttestPolarPointL65

BLOCK: StarttestPolarPointL65

BLOCK: BasicL66

BLOCK: StartmainL68

BLOCK: StartmainL68

BLOCK: BasicL69

BLOCK: Startconstructor1L71
this.x_coord : this.x_coord = 0.0, 
this.y_coord : this.y_coord = 0.0, 

BLOCK: Startconstructor1L71
this.x_coord : this.x_coord = 0.0, 
this.y_coord : this.y_coord = 0.0, 

BLOCK: BasicL72
this.x_coord : this.x_coord = x_coord, 
this.y_coord : this.y_coord = y_coord, 

BLOCK: StartxCoordinateL74
this.y_coord : this.y_coord = 0.0, 
this.x_coord : this.x_coord = 0.0, 

BLOCK: StartxCoordinateL74
this.y_coord : this.y_coord = 0.0, 
this.x_coord : this.x_coord = 0.0, 

BLOCK: BasicL75
this.y_coord : this.y_coord = 0.0, 
this.x_coord : this.x_coord = 0.0, 

BLOCK: StartyCoordinateL77
this.y_coord : this.y_coord = 0.0, 
this.x_coord : this.x_coord = 0.0, 

BLOCK: StartyCoordinateL77
this.y_coord : this.y_coord = 0.0, 
this.x_coord : this.x_coord = 0.0, 

BLOCK: BasicL78
this.y_coord : this.y_coord = 0.0, 
this.x_coord : this.x_coord = 0.0, 

BLOCK: StartradiusL80
this.y_coord : this.y_coord = 0.0, 
this.x_coord : this.x_coord = 0.0, 

BLOCK: StartradiusL80
this.y_coord : this.y_coord = 0.0, 
this.x_coord : this.x_coord = 0.0, 

BLOCK: BasicL81
this.y_coord : this.y_coord = 0.0, 
b : b = this.y_coord, 
a : a = this.x_coord, 
radius : radius = Math.sqrt(a * a + b * b, ), 
this.x_coord : this.x_coord = 0.0, 

BLOCK: StartangleL83
this.x_coord : this.x_coord = 0.0, 
this.y_coord : this.y_coord = 0.0, 

BLOCK: StartangleL83
this.x_coord : this.x_coord = 0.0, 
this.y_coord : this.y_coord = 0.0, 

BLOCK: BasicL84
this.x_coord : this.x_coord = 0.0, 
angle : angle = 0.0, 
this.y_coord : this.y_coord = 0.0, 

BLOCK: trueL86
this.x_coord : this.x_coord = 0.0, 
angle : angle = Math.atan2(this.y_coord, this.x_coord, ), 
this.y_coord : this.y_coord = 0.0, 

BLOCK: joinL87
this.x_coord : this.x_coord = 0.0, 
angle : angle = Math.atan2(this.y_coord, this.x_coord, ), angle = 0.0, 
this.y_coord : this.y_coord = 0.0, 

BLOCK: trueL88
this.x_coord : this.x_coord = 0.0, 
angle : angle = Math.atan2(this.y_coord, this.x_coord, ), 
this.y_coord : this.y_coord = 0.0, 

BLOCK: joinL89
this.x_coord : this.x_coord = 0.0, 
angle : angle = Math.atan2(this.y_coord, this.x_coord, ), angle = Math.atan2(this.y_coord, this.x_coord, ), angle = 0.0, 
this.y_coord : this.y_coord = 0.0, 

BLOCK: trueL90
this.x_coord : this.x_coord = 0.0, 
angle : angle = Math.atan2(this.y_coord, this.x_coord, ) + Math.PI + Math.PI, 
this.y_coord : this.y_coord = 0.0, 

BLOCK: joinL91
this.x_coord : this.x_coord = 0.0, 
angle : angle = Math.atan2(this.y_coord, this.x_coord, ), angle = Math.atan2(this.y_coord, this.x_coord, ), angle = Math.atan2(this.y_coord, this.x_coord, ) + Math.PI + Math.PI, angle = 0.0, 
this.y_coord : this.y_coord = 0.0, 

BLOCK: trueL92
this.x_coord : this.x_coord = 0.0, 
angle : angle = Math.atan2(this.y_coord, this.x_coord, ) + Math.PI + Math.PI, 
this.y_coord : this.y_coord = 0.0, 

BLOCK: joinL93
this.x_coord : this.x_coord = 0.0, 
angle : angle = Math.atan2(this.y_coord, this.x_coord, ), angle = Math.atan2(this.y_coord, this.x_coord, ) + Math.PI + Math.PI, angle = Math.atan2(this.y_coord, this.x_coord, ), angle = Math.atan2(this.y_coord, this.x_coord, ) + Math.PI + Math.PI, angle = 0.0, 
this.y_coord : this.y_coord = 0.0, 

BLOCK: Startrotate90L94
this.y_coord : this.y_coord = 0.0, 
this.x_coord : this.x_coord = 0.0, 

BLOCK: Startrotate90L94
this.y_coord : this.y_coord = 0.0, 
this.x_coord : this.x_coord = 0.0, 

BLOCK: BasicL95
this.y_coord : this.y_coord = temp_coord, 
this.x_coord : this.x_coord = this.y_coord, 
temp_coord : temp_coord = this.x_coord, 

BLOCK: StarttestCartesianPointL97

BLOCK: StarttestCartesianPointL97

BLOCK: BasicL98

BLOCK: StartmainL100

BLOCK: StartmainL100

BLOCK: BasicL101

Unfiltered: 4891
Filtered: 2


Duplicate found: 102_Code/102_hw1/dir24/PointRelation.java lines [75, 151] and 102_Code/102_hw1/dir24/PointRelation.java lines [75, 149]
102_Code/102_hw1/dir24/PointRelation.java ----------
75 :	a = 0.0
84 :	y = sc.nextInt()
86 :	p1 = new CartesianPoint(x, y, )
95 :	r = sc.nextInt()
98 :	a = sc.nextInt()
102 :	p1 = new PolarPoint(r, a, )
122 :	y = sc.nextInt()
124 :	p2 = new CartesianPoint(x, y, )
132 :	r = sc.nextInt()
151 :	QuadrantCheck(p1, p2, )
102_Code/102_hw1/dir24/PointRelation.java ----------
75 :	a = 0.0
95 :	r = sc.nextInt()
102 :	p1 = new PolarPoint(r, a, )
84 :	y = sc.nextInt()
119 :	x = sc.nextInt()
86 :	p1 = new CartesianPoint(x, y, )
132 :	r = sc.nextInt()
139 :	p2 = new PolarPoint(r, a, )
122 :	y = sc.nextInt()
149 :	PointDistance(p1, p2, )
===========================



Duplicate found: 102_Code/102_hw1/dir24/PointRelation.java lines [75, 151] and 102_Code/102_hw1/dir24/PointRelation.java lines [75, 151]
102_Code/102_hw1/dir24/PointRelation.java ----------
75 :	a = 0.0
84 :	y = sc.nextInt()
86 :	p1 = new CartesianPoint(x, y, )
95 :	r = sc.nextInt()
98 :	a = sc.nextInt()
102 :	p1 = new PolarPoint(r, a, )
122 :	y = sc.nextInt()
132 :	r = sc.nextInt()
149 :	PointDistance(p1, p2, )
151 :	QuadrantCheck(p1, p2, )
102_Code/102_hw1/dir24/PointRelation.java ----------
75 :	a = 0.0
95 :	r = sc.nextInt()
102 :	p1 = new PolarPoint(r, a, )
84 :	y = sc.nextInt()
119 :	x = sc.nextInt()
86 :	p1 = new CartesianPoint(x, y, )
132 :	r = sc.nextInt()
122 :	y = sc.nextInt()
151 :	QuadrantCheck(p1, p2, )
149 :	PointDistance(p1, p2, )
===========================



[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 10.793 s
[INFO] Finished at: 2019-05-06T19:51:16-07:00
[INFO] Final Memory: 35M/1413M
[INFO] ------------------------------------------------------------------------
