[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for thesis:thesis:jar:1.0-SNAPSHOT
[WARNING] 'dependencies.dependency.version' for org.junit.jupiter:junit-jupiter-api:jar is either LATEST or RELEASE (both of them are being deprecated) @ line 25, column 22
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------------------------------------------------------------
[INFO] Building thesis 1.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] >>> exec-maven-plugin:1.2.1:java (default-cli) > validate @ thesis >>>
[INFO] 
[INFO] <<< exec-maven-plugin:1.2.1:java (default-cli) < validate @ thesis <<<
[INFO] 
[INFO] 
[INFO] --- exec-maven-plugin:1.2.1:java (default-cli) @ thesis ---
BLOCK: Startconstructor1L0
this.angle : this.angle = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: BasicL1
this.angle : this.angle = Math.toRadians(angle, ), 
this.xCoordinate : this.xCoordinate = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: trueL3
this.angle : this.angle = this.angle + Math.PI, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = radius * 1, 

BLOCK: falseL5
this.angle : this.angle = Math.toRadians(angle, ), 
this.xCoordinate : this.xCoordinate = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = radius, 

BLOCK: trueL6
this.angle : this.angle = this.angle + Math.PI * 2, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = radius, 

BLOCK: falseL8
this.angle : this.angle = this.angle, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = radius, 

BLOCK: joinL7
this.angle : this.angle = this.angle, this.angle = this.angle + Math.PI * 2, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = radius, 

BLOCK: joinL4
this.angle : this.angle = this.angle + Math.PI, this.angle = this.angle, this.angle = this.angle + Math.PI * 2, 
this.xCoordinate : this.xCoordinate = Math.cos(this.angle, ) * this.radius, 
this.yCoordinate : this.yCoordinate = Math.sin(this.angle, ) * this.radius, 
this.radius : this.radius = radius, this.radius = radius * 1, 

BLOCK: StartxCoordinateL9
this.angle : this.angle = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: BasicL10
this.angle : this.angle = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: StartyCoordinateL12
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 

BLOCK: BasicL13
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 

BLOCK: StartradiusL15
this.xCoordinate : this.xCoordinate = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.angle : this.angle = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: BasicL16
this.xCoordinate : this.xCoordinate = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.angle : this.angle = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: StartangleL18
this.yCoordinate : this.yCoordinate = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.angle : this.angle = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: BasicL19
this.yCoordinate : this.yCoordinate = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.angle : this.angle = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: trueL21
this.yCoordinate : this.yCoordinate = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.angle : this.angle = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: falseL23
this.yCoordinate : this.yCoordinate = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.angle : this.angle = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: joinL22
this.yCoordinate : this.yCoordinate = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.angle : this.angle = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: Startrotate90L24
this.angle : this.angle = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 

BLOCK: BasicL25
rot_90radius : rot_90radius = this.radius, 
this.angle : this.angle = 0.0, 
rot_90angle : rot_90angle = Math.toDegrees(this.angle + Math.PI / 2, ), 
rot_90point : rot_90point = new PolarPoint(rot_90radius, rot_90angle, ), 
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 

BLOCK: StartmainL27

BLOCK: BasicL28
p2 : p2 = new CartesianPoint(0, 0, ), 
sc : sc = new Scanner(System.in, ), 
prompt1 : prompt1 = 0.0, 
prompt4 : prompt4 = 0.0, 
pt1 : pt1 = sc.nextInt(), 
p1 : p1 = new CartesianPoint(0, 0, ), 
prompt2 : prompt2 = 0.0, 
pt2 : pt2 = 0, 
prompt3 : prompt3 = 0.0, 

BLOCK: trueL30
p2 : p2 = new CartesianPoint(0, 0, ), 
sc : sc = new Scanner(System.in, ), 
prompt1 : prompt1 = sc.nextDouble(), 
prompt4 : prompt4 = 0.0, 
p1 : p1 = new CartesianPoint(prompt1, prompt2, ), 
pt1 : pt1 = sc.nextInt(), 
prompt2 : prompt2 = sc.nextDouble(), 
pt2 : pt2 = 0, 
prompt3 : prompt3 = 0.0, 

BLOCK: falseL32
p2 : p2 = new CartesianPoint(0, 0, ), 
sc : sc = new Scanner(System.in, ), 
prompt1 : prompt1 = 0.0, 
prompt4 : prompt4 = 0.0, 
pt1 : pt1 = sc.nextInt(), 
p1 : p1 = new CartesianPoint(0, 0, ), 
prompt2 : prompt2 = 0.0, 
pt2 : pt2 = 0, 
prompt3 : prompt3 = 0.0, 

BLOCK: trueL33
p2 : p2 = new CartesianPoint(0, 0, ), 
sc : sc = new Scanner(System.in, ), 
prompt1 : prompt1 = sc.nextDouble(), 
prompt4 : prompt4 = 0.0, 
p1 : p1 = new PolarPoint(prompt1, prompt2, ), 
pt1 : pt1 = sc.nextInt(), 
prompt2 : prompt2 = sc.nextDouble(), 
pt2 : pt2 = 0, 
prompt3 : prompt3 = 0.0, 

BLOCK: falseL35
p2 : p2 = new CartesianPoint(0, 0, ), 
sc : sc = new Scanner(System.in, ), 
prompt1 : prompt1 = 0.0, 
prompt4 : prompt4 = 0.0, 
pt1 : pt1 = sc.nextInt(), 
p1 : p1 = new CartesianPoint(0, 0, ), 
prompt2 : prompt2 = 0.0, 
pt2 : pt2 = 0, 
prompt3 : prompt3 = 0.0, 

BLOCK: joinL34
p2 : p2 = new CartesianPoint(0, 0, ), 
sc : sc = new Scanner(System.in, ), 
prompt1 : prompt1 = sc.nextDouble(), prompt1 = 0.0, 
prompt4 : prompt4 = 0.0, 
p1 : p1 = new PolarPoint(prompt1, prompt2, ), p1 = new CartesianPoint(0, 0, ), 
pt1 : pt1 = sc.nextInt(), 
prompt2 : prompt2 = 0.0, prompt2 = sc.nextDouble(), 
pt2 : pt2 = 0, 
prompt3 : prompt3 = 0.0, 

BLOCK: joinL31
p2 : p2 = new CartesianPoint(0, 0, ), 
sc : sc = new Scanner(System.in, ), 
prompt1 : prompt1 = sc.nextDouble(), prompt1 = 0.0, prompt1 = sc.nextDouble(), 
prompt4 : prompt4 = 0.0, 
p1 : p1 = new CartesianPoint(prompt1, prompt2, ), p1 = new PolarPoint(prompt1, prompt2, ), p1 = new CartesianPoint(0, 0, ), 
pt1 : pt1 = sc.nextInt(), 
pt2 : pt2 = sc.nextInt(), 
prompt2 : prompt2 = sc.nextDouble(), prompt2 = 0.0, prompt2 = sc.nextDouble(), 
prompt3 : prompt3 = 0.0, 

BLOCK: trueL36
p2 : p2 = new CartesianPoint(prompt3, prompt4, ), 
sc : sc = new Scanner(System.in, ), 
prompt1 : prompt1 = sc.nextDouble(), prompt1 = 0.0, prompt1 = sc.nextDouble(), 
prompt4 : prompt4 = sc.nextDouble(), 
p1 : p1 = new CartesianPoint(prompt1, prompt2, ), p1 = new PolarPoint(prompt1, prompt2, ), p1 = new CartesianPoint(0, 0, ), 
pt1 : pt1 = sc.nextInt(), 
pt2 : pt2 = sc.nextInt(), 
prompt2 : prompt2 = sc.nextDouble(), prompt2 = 0.0, prompt2 = sc.nextDouble(), 
prompt3 : prompt3 = sc.nextDouble(), 

BLOCK: falseL38
p2 : p2 = new CartesianPoint(0, 0, ), 
sc : sc = new Scanner(System.in, ), 
prompt1 : prompt1 = sc.nextDouble(), prompt1 = 0.0, prompt1 = sc.nextDouble(), 
prompt4 : prompt4 = 0.0, 
p1 : p1 = new CartesianPoint(prompt1, prompt2, ), p1 = new PolarPoint(prompt1, prompt2, ), p1 = new CartesianPoint(0, 0, ), 
pt1 : pt1 = sc.nextInt(), 
pt2 : pt2 = sc.nextInt(), 
prompt2 : prompt2 = sc.nextDouble(), prompt2 = 0.0, prompt2 = sc.nextDouble(), 
prompt3 : prompt3 = 0.0, 

BLOCK: trueL39
p2 : p2 = new PolarPoint(prompt3, prompt4, ), 
sc : sc = new Scanner(System.in, ), 
prompt1 : prompt1 = sc.nextDouble(), prompt1 = 0.0, prompt1 = sc.nextDouble(), 
prompt4 : prompt4 = sc.nextDouble(), 
p1 : p1 = new CartesianPoint(prompt1, prompt2, ), p1 = new PolarPoint(prompt1, prompt2, ), p1 = new CartesianPoint(0, 0, ), 
pt1 : pt1 = sc.nextInt(), 
pt2 : pt2 = sc.nextInt(), 
prompt2 : prompt2 = sc.nextDouble(), prompt2 = 0.0, prompt2 = sc.nextDouble(), 
prompt3 : prompt3 = sc.nextDouble(), 

BLOCK: falseL41
p2 : p2 = new CartesianPoint(0, 0, ), 
sc : sc = new Scanner(System.in, ), 
prompt1 : prompt1 = sc.nextDouble(), prompt1 = 0.0, prompt1 = sc.nextDouble(), 
prompt4 : prompt4 = 0.0, 
p1 : p1 = new CartesianPoint(prompt1, prompt2, ), p1 = new PolarPoint(prompt1, prompt2, ), p1 = new CartesianPoint(0, 0, ), 
pt1 : pt1 = sc.nextInt(), 
pt2 : pt2 = sc.nextInt(), 
prompt2 : prompt2 = sc.nextDouble(), prompt2 = 0.0, prompt2 = sc.nextDouble(), 
prompt3 : prompt3 = 0.0, 

BLOCK: joinL40
p2 : p2 = new PolarPoint(prompt3, prompt4, ), p2 = new CartesianPoint(0, 0, ), 
sc : sc = new Scanner(System.in, ), 
prompt1 : prompt1 = sc.nextDouble(), prompt1 = 0.0, prompt1 = sc.nextDouble(), 
prompt4 : prompt4 = 0.0, prompt4 = sc.nextDouble(), 
p1 : p1 = new CartesianPoint(prompt1, prompt2, ), p1 = new PolarPoint(prompt1, prompt2, ), p1 = new CartesianPoint(0, 0, ), 
pt1 : pt1 = sc.nextInt(), 
pt2 : pt2 = sc.nextInt(), 
prompt2 : prompt2 = sc.nextDouble(), prompt2 = 0.0, prompt2 = sc.nextDouble(), 
prompt3 : prompt3 = 0.0, prompt3 = sc.nextDouble(), 

BLOCK: joinL37
p2 : p2 = new PolarPoint(prompt3, prompt4, ), p2 = new CartesianPoint(0, 0, ), p2 = new CartesianPoint(prompt3, prompt4, ), 
sc : sc = new Scanner(System.in, ), 
prompt1 : prompt1 = sc.nextDouble(), prompt1 = 0.0, prompt1 = sc.nextDouble(), 
prompt4 : prompt4 = 0.0, prompt4 = sc.nextDouble(), prompt4 = sc.nextDouble(), 
p1 : p1 = new CartesianPoint(prompt1, prompt2, ), p1 = new PolarPoint(prompt1, prompt2, ), p1 = new CartesianPoint(0, 0, ), 
pt1 : pt1 = sc.nextInt(), 
pt2 : pt2 = sc.nextInt(), 
prompt2 : prompt2 = sc.nextDouble(), prompt2 = 0.0, prompt2 = sc.nextDouble(), 
quad : quad = quadrant(p1, p2, ), 
prompt3 : prompt3 = 0.0, prompt3 = sc.nextDouble(), prompt3 = sc.nextDouble(), 

BLOCK: trueL42
p2 : p2 = new PolarPoint(prompt3, prompt4, ), p2 = new CartesianPoint(0, 0, ), p2 = new CartesianPoint(prompt3, prompt4, ), 
sc : sc = new Scanner(System.in, ), 
prompt1 : prompt1 = sc.nextDouble(), prompt1 = 0.0, prompt1 = sc.nextDouble(), 
prompt4 : prompt4 = 0.0, prompt4 = sc.nextDouble(), prompt4 = sc.nextDouble(), 
p1 : p1 = new CartesianPoint(prompt1, prompt2, ), p1 = new PolarPoint(prompt1, prompt2, ), p1 = new CartesianPoint(0, 0, ), 
pt1 : pt1 = sc.nextInt(), 
pt2 : pt2 = sc.nextInt(), 
prompt2 : prompt2 = sc.nextDouble(), prompt2 = 0.0, prompt2 = sc.nextDouble(), 
quad : quad = quadrant(p1, p2, ), 
prompt3 : prompt3 = 0.0, prompt3 = sc.nextDouble(), prompt3 = sc.nextDouble(), 

BLOCK: falseL44
p2 : p2 = new PolarPoint(prompt3, prompt4, ), p2 = new CartesianPoint(0, 0, ), p2 = new CartesianPoint(prompt3, prompt4, ), 
sc : sc = new Scanner(System.in, ), 
prompt1 : prompt1 = sc.nextDouble(), prompt1 = 0.0, prompt1 = sc.nextDouble(), 
prompt4 : prompt4 = 0.0, prompt4 = sc.nextDouble(), prompt4 = sc.nextDouble(), 
p1 : p1 = new CartesianPoint(prompt1, prompt2, ), p1 = new PolarPoint(prompt1, prompt2, ), p1 = new CartesianPoint(0, 0, ), 
pt1 : pt1 = sc.nextInt(), 
pt2 : pt2 = sc.nextInt(), 
prompt2 : prompt2 = sc.nextDouble(), prompt2 = 0.0, prompt2 = sc.nextDouble(), 
quad : quad = quadrant(p1, p2, ), 
prompt3 : prompt3 = 0.0, prompt3 = sc.nextDouble(), prompt3 = sc.nextDouble(), 

BLOCK: joinL43
p2 : p2 = new PolarPoint(prompt3, prompt4, ), p2 = new CartesianPoint(0, 0, ), p2 = new CartesianPoint(prompt3, prompt4, ), 
sc : sc = new Scanner(System.in, ), 
prompt1 : prompt1 = sc.nextDouble(), prompt1 = 0.0, prompt1 = sc.nextDouble(), 
prompt4 : prompt4 = 0.0, prompt4 = sc.nextDouble(), prompt4 = sc.nextDouble(), 
p1 : p1 = new CartesianPoint(prompt1, prompt2, ), p1 = new PolarPoint(prompt1, prompt2, ), p1 = new CartesianPoint(0, 0, ), 
pt1 : pt1 = sc.nextInt(), 
pt2 : pt2 = sc.nextInt(), 
prompt2 : prompt2 = sc.nextDouble(), prompt2 = 0.0, prompt2 = sc.nextDouble(), 
quad : quad = quadrant(p1, p2, ), 
prompt3 : prompt3 = 0.0, prompt3 = sc.nextDouble(), prompt3 = sc.nextDouble(), 

BLOCK: StartdistanceL45

BLOCK: BasicL46
x_diff : x_diff = p1.xCoordinate() - p2.xCoordinate(), 
distance : distance = Math.sqrt(x_diff * x_diff + y_diff * y_diff, ), 
y_diff : y_diff = p1.yCoordinate() - p2.yCoordinate(), 

BLOCK: StartquadrantL48

BLOCK: BasicL49
p2quad : p2quad = 0, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 0, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: trueL51
p2quad : p2quad = 0, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 1, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: falseL53
p2quad : p2quad = 0, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 0, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: trueL54
p2quad : p2quad = 0, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 2, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: falseL56
p2quad : p2quad = 0, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 0, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: trueL57
p2quad : p2quad = 0, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 3, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: falseL59
p2quad : p2quad = 0, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 4, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: joinL58
p2quad : p2quad = 0, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 3, p1quad = 4, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: joinL55
p2quad : p2quad = 0, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 2, p1quad = 3, p1quad = 4, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: joinL52
p2quad : p2quad = 0, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 2, p1quad = 3, p1quad = 1, p1quad = 4, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: trueL60
p2quad : p2quad = 1, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 2, p1quad = 3, p1quad = 1, p1quad = 4, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: falseL62
p2quad : p2quad = 0, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 2, p1quad = 3, p1quad = 1, p1quad = 4, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: trueL63
p2quad : p2quad = 2, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 2, p1quad = 3, p1quad = 1, p1quad = 4, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: falseL65
p2quad : p2quad = 0, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 2, p1quad = 3, p1quad = 1, p1quad = 4, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: trueL66
p2quad : p2quad = 3, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 2, p1quad = 3, p1quad = 1, p1quad = 4, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: falseL68
p2quad : p2quad = 4, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 2, p1quad = 3, p1quad = 1, p1quad = 4, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: joinL67
p2quad : p2quad = 4, p2quad = 3, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 2, p1quad = 3, p1quad = 1, p1quad = 4, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: joinL64
p2quad : p2quad = 4, p2quad = 2, p2quad = 3, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 2, p1quad = 3, p1quad = 1, p1quad = 4, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: joinL61
p2quad : p2quad = 1, p2quad = 4, p2quad = 2, p2quad = 3, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 2, p1quad = 3, p1quad = 1, p1quad = 4, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: trueL69
p2quad : p2quad = 1, p2quad = 4, p2quad = 2, p2quad = 3, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 2, p1quad = 3, p1quad = 1, p1quad = 4, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: falseL71
p2quad : p2quad = 1, p2quad = 4, p2quad = 2, p2quad = 3, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 2, p1quad = 3, p1quad = 1, p1quad = 4, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: joinL70
p2quad : p2quad = 1, p2quad = 4, p2quad = 2, p2quad = 3, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 2, p1quad = 3, p1quad = 1, p1quad = 4, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: StartmainL72

BLOCK: BasicL73
pt3 : pt3 = new PolarPoint(1, 90, ), 
pt4 : pt4 = pt3.rotate90(), 

BLOCK: Startconstructor1L75
this.xCoordinate : this.xCoordinate = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.angle : this.angle = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: BasicL76
this.xCoordinate : this.xCoordinate = x_coord, 
this.yCoordinate : this.yCoordinate = y_coord, 
this.angle : this.angle = Math.atan2(y_coord, x_coord, ), 
this.radius : this.radius = Math.sqrt(x_coord * x_coord + y_coord * y_coord, ), 

BLOCK: StartxCoordinateL78
this.angle : this.angle = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: BasicL79
this.angle : this.angle = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: StartyCoordinateL81
this.xCoordinate : this.xCoordinate = 0.0, 
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 

BLOCK: BasicL82
this.xCoordinate : this.xCoordinate = 0.0, 
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 

BLOCK: StartradiusL84
this.xCoordinate : this.xCoordinate = 0.0, 
this.angle : this.angle = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: BasicL85
this.xCoordinate : this.xCoordinate = 0.0, 
this.angle : this.angle = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: StartangleL87
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: BasicL88
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: trueL90
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: falseL92
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: joinL91
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: Startrotate90L93
this.angle : this.angle = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: BasicL94
rot_90y_coord : rot_90y_coord = Math.sin(rot_90angle, ) * rot_90radius, 
this.angle : this.angle = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 
rot_90angle : rot_90angle = this.angle + Math.PI / 2, 
this.yCoordinate : this.yCoordinate = 0.0, 
rot_90x_coord : rot_90x_coord = Math.cos(rot_90angle, ) * rot_90radius, 
this.radius : this.radius = 0.0, 
rot_90point : rot_90point = new CartesianPoint(rot_90x_coord, rot_90y_coord, ), 
rot_90radius : rot_90radius = this.radius, 

BLOCK: StartmainL96

BLOCK: BasicL97
pt2 : pt2 = pt.rotate90(), 
pt : pt = new CartesianPoint(0, 1, ), 

BLOCK: Startconstructor1L0
this.angle : this.angle = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: Startconstructor1L0
this.angle : this.angle = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: BasicL1
this.angle : this.angle = Math.toRadians(angle, ), 
this.xCoordinate : this.xCoordinate = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: trueL3
this.angle : this.angle = this.angle + Math.PI, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = radius * 1, 

BLOCK: falseL5
this.angle : this.angle = Math.toRadians(angle, ), 
this.xCoordinate : this.xCoordinate = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = radius, 

BLOCK: trueL6
this.angle : this.angle = this.angle + Math.PI * 2, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = radius, 

BLOCK: falseL8
this.angle : this.angle = this.angle, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = radius, 

BLOCK: joinL7
this.angle : this.angle = this.angle, this.angle = this.angle + Math.PI * 2, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = radius, 

BLOCK: joinL4
this.angle : this.angle = this.angle + Math.PI, this.angle = this.angle, this.angle = this.angle + Math.PI * 2, 
this.xCoordinate : this.xCoordinate = Math.cos(this.angle, ) * this.radius, 
this.yCoordinate : this.yCoordinate = Math.sin(this.angle, ) * this.radius, 
this.radius : this.radius = radius, this.radius = radius * 1, 

BLOCK: StartxCoordinateL9
this.angle : this.angle = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: StartxCoordinateL9
this.angle : this.angle = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: BasicL10
this.angle : this.angle = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: StartyCoordinateL12
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 

BLOCK: StartyCoordinateL12
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 

BLOCK: BasicL13
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 

BLOCK: StartradiusL15
this.xCoordinate : this.xCoordinate = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.angle : this.angle = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: StartradiusL15
this.xCoordinate : this.xCoordinate = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.angle : this.angle = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: BasicL16
this.xCoordinate : this.xCoordinate = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.angle : this.angle = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: StartangleL18
this.yCoordinate : this.yCoordinate = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.angle : this.angle = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: StartangleL18
this.yCoordinate : this.yCoordinate = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.angle : this.angle = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: BasicL19
this.yCoordinate : this.yCoordinate = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.angle : this.angle = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: trueL21
this.yCoordinate : this.yCoordinate = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.angle : this.angle = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: falseL23
this.yCoordinate : this.yCoordinate = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.angle : this.angle = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: joinL22
this.yCoordinate : this.yCoordinate = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.angle : this.angle = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: Startrotate90L24
this.angle : this.angle = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 

BLOCK: Startrotate90L24
this.angle : this.angle = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 

BLOCK: BasicL25
rot_90radius : rot_90radius = this.radius, 
this.angle : this.angle = 0.0, 
rot_90angle : rot_90angle = Math.toDegrees(this.angle + Math.PI / 2, ), 
rot_90point : rot_90point = new PolarPoint(rot_90radius, rot_90angle, ), 
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 

BLOCK: StartmainL27

BLOCK: StartmainL27

BLOCK: BasicL28
p2 : p2 = new CartesianPoint(0, 0, ), 
sc : sc = new Scanner(System.in, ), 
prompt1 : prompt1 = 0.0, 
prompt4 : prompt4 = 0.0, 
pt1 : pt1 = sc.nextInt(), 
p1 : p1 = new CartesianPoint(0, 0, ), 
prompt2 : prompt2 = 0.0, 
pt2 : pt2 = 0, 
prompt3 : prompt3 = 0.0, 

BLOCK: trueL30
p2 : p2 = new CartesianPoint(0, 0, ), 
sc : sc = new Scanner(System.in, ), 
prompt1 : prompt1 = sc.nextDouble(), 
prompt4 : prompt4 = 0.0, 
p1 : p1 = new CartesianPoint(prompt1, prompt2, ), 
pt1 : pt1 = sc.nextInt(), 
prompt2 : prompt2 = sc.nextDouble(), 
pt2 : pt2 = 0, 
prompt3 : prompt3 = 0.0, 

BLOCK: falseL32
p2 : p2 = new CartesianPoint(0, 0, ), 
sc : sc = new Scanner(System.in, ), 
prompt1 : prompt1 = 0.0, 
prompt4 : prompt4 = 0.0, 
pt1 : pt1 = sc.nextInt(), 
p1 : p1 = new CartesianPoint(0, 0, ), 
prompt2 : prompt2 = 0.0, 
pt2 : pt2 = 0, 
prompt3 : prompt3 = 0.0, 

BLOCK: trueL33
p2 : p2 = new CartesianPoint(0, 0, ), 
sc : sc = new Scanner(System.in, ), 
prompt1 : prompt1 = sc.nextDouble(), 
prompt4 : prompt4 = 0.0, 
p1 : p1 = new PolarPoint(prompt1, prompt2, ), 
pt1 : pt1 = sc.nextInt(), 
prompt2 : prompt2 = sc.nextDouble(), 
pt2 : pt2 = 0, 
prompt3 : prompt3 = 0.0, 

BLOCK: falseL35
p2 : p2 = new CartesianPoint(0, 0, ), 
sc : sc = new Scanner(System.in, ), 
prompt1 : prompt1 = 0.0, 
prompt4 : prompt4 = 0.0, 
pt1 : pt1 = sc.nextInt(), 
p1 : p1 = new CartesianPoint(0, 0, ), 
prompt2 : prompt2 = 0.0, 
pt2 : pt2 = 0, 
prompt3 : prompt3 = 0.0, 

BLOCK: joinL34
p2 : p2 = new CartesianPoint(0, 0, ), 
sc : sc = new Scanner(System.in, ), 
prompt1 : prompt1 = sc.nextDouble(), prompt1 = 0.0, 
prompt4 : prompt4 = 0.0, 
p1 : p1 = new PolarPoint(prompt1, prompt2, ), p1 = new CartesianPoint(0, 0, ), 
pt1 : pt1 = sc.nextInt(), 
prompt2 : prompt2 = 0.0, prompt2 = sc.nextDouble(), 
pt2 : pt2 = 0, 
prompt3 : prompt3 = 0.0, 

BLOCK: joinL31
p2 : p2 = new CartesianPoint(0, 0, ), 
sc : sc = new Scanner(System.in, ), 
prompt1 : prompt1 = sc.nextDouble(), prompt1 = 0.0, prompt1 = sc.nextDouble(), 
prompt4 : prompt4 = 0.0, 
p1 : p1 = new CartesianPoint(prompt1, prompt2, ), p1 = new PolarPoint(prompt1, prompt2, ), p1 = new CartesianPoint(0, 0, ), 
pt1 : pt1 = sc.nextInt(), 
pt2 : pt2 = sc.nextInt(), 
prompt2 : prompt2 = sc.nextDouble(), prompt2 = 0.0, prompt2 = sc.nextDouble(), 
prompt3 : prompt3 = 0.0, 

BLOCK: trueL36
p2 : p2 = new CartesianPoint(prompt3, prompt4, ), 
sc : sc = new Scanner(System.in, ), 
prompt1 : prompt1 = sc.nextDouble(), prompt1 = 0.0, prompt1 = sc.nextDouble(), 
prompt4 : prompt4 = sc.nextDouble(), 
p1 : p1 = new CartesianPoint(prompt1, prompt2, ), p1 = new PolarPoint(prompt1, prompt2, ), p1 = new CartesianPoint(0, 0, ), 
pt1 : pt1 = sc.nextInt(), 
pt2 : pt2 = sc.nextInt(), 
prompt2 : prompt2 = sc.nextDouble(), prompt2 = 0.0, prompt2 = sc.nextDouble(), 
prompt3 : prompt3 = sc.nextDouble(), 

BLOCK: falseL38
p2 : p2 = new CartesianPoint(0, 0, ), 
sc : sc = new Scanner(System.in, ), 
prompt1 : prompt1 = sc.nextDouble(), prompt1 = 0.0, prompt1 = sc.nextDouble(), 
prompt4 : prompt4 = 0.0, 
p1 : p1 = new CartesianPoint(prompt1, prompt2, ), p1 = new PolarPoint(prompt1, prompt2, ), p1 = new CartesianPoint(0, 0, ), 
pt1 : pt1 = sc.nextInt(), 
pt2 : pt2 = sc.nextInt(), 
prompt2 : prompt2 = sc.nextDouble(), prompt2 = 0.0, prompt2 = sc.nextDouble(), 
prompt3 : prompt3 = 0.0, 

BLOCK: trueL39
p2 : p2 = new PolarPoint(prompt3, prompt4, ), 
sc : sc = new Scanner(System.in, ), 
prompt1 : prompt1 = sc.nextDouble(), prompt1 = 0.0, prompt1 = sc.nextDouble(), 
prompt4 : prompt4 = sc.nextDouble(), 
p1 : p1 = new CartesianPoint(prompt1, prompt2, ), p1 = new PolarPoint(prompt1, prompt2, ), p1 = new CartesianPoint(0, 0, ), 
pt1 : pt1 = sc.nextInt(), 
pt2 : pt2 = sc.nextInt(), 
prompt2 : prompt2 = sc.nextDouble(), prompt2 = 0.0, prompt2 = sc.nextDouble(), 
prompt3 : prompt3 = sc.nextDouble(), 

BLOCK: falseL41
p2 : p2 = new CartesianPoint(0, 0, ), 
sc : sc = new Scanner(System.in, ), 
prompt1 : prompt1 = sc.nextDouble(), prompt1 = 0.0, prompt1 = sc.nextDouble(), 
prompt4 : prompt4 = 0.0, 
p1 : p1 = new CartesianPoint(prompt1, prompt2, ), p1 = new PolarPoint(prompt1, prompt2, ), p1 = new CartesianPoint(0, 0, ), 
pt1 : pt1 = sc.nextInt(), 
pt2 : pt2 = sc.nextInt(), 
prompt2 : prompt2 = sc.nextDouble(), prompt2 = 0.0, prompt2 = sc.nextDouble(), 
prompt3 : prompt3 = 0.0, 

BLOCK: joinL40
p2 : p2 = new PolarPoint(prompt3, prompt4, ), p2 = new CartesianPoint(0, 0, ), 
sc : sc = new Scanner(System.in, ), 
prompt1 : prompt1 = sc.nextDouble(), prompt1 = 0.0, prompt1 = sc.nextDouble(), 
prompt4 : prompt4 = 0.0, prompt4 = sc.nextDouble(), 
p1 : p1 = new CartesianPoint(prompt1, prompt2, ), p1 = new PolarPoint(prompt1, prompt2, ), p1 = new CartesianPoint(0, 0, ), 
pt1 : pt1 = sc.nextInt(), 
pt2 : pt2 = sc.nextInt(), 
prompt2 : prompt2 = sc.nextDouble(), prompt2 = 0.0, prompt2 = sc.nextDouble(), 
prompt3 : prompt3 = 0.0, prompt3 = sc.nextDouble(), 

BLOCK: joinL37
p2 : p2 = new PolarPoint(prompt3, prompt4, ), p2 = new CartesianPoint(0, 0, ), p2 = new CartesianPoint(prompt3, prompt4, ), 
sc : sc = new Scanner(System.in, ), 
prompt1 : prompt1 = sc.nextDouble(), prompt1 = 0.0, prompt1 = sc.nextDouble(), 
prompt4 : prompt4 = 0.0, prompt4 = sc.nextDouble(), prompt4 = sc.nextDouble(), 
p1 : p1 = new CartesianPoint(prompt1, prompt2, ), p1 = new PolarPoint(prompt1, prompt2, ), p1 = new CartesianPoint(0, 0, ), 
pt1 : pt1 = sc.nextInt(), 
pt2 : pt2 = sc.nextInt(), 
prompt2 : prompt2 = sc.nextDouble(), prompt2 = 0.0, prompt2 = sc.nextDouble(), 
quad : quad = quadrant(p1, p2, ), 
prompt3 : prompt3 = 0.0, prompt3 = sc.nextDouble(), prompt3 = sc.nextDouble(), 

BLOCK: trueL42
p2 : p2 = new PolarPoint(prompt3, prompt4, ), p2 = new CartesianPoint(0, 0, ), p2 = new CartesianPoint(prompt3, prompt4, ), 
sc : sc = new Scanner(System.in, ), 
prompt1 : prompt1 = sc.nextDouble(), prompt1 = 0.0, prompt1 = sc.nextDouble(), 
prompt4 : prompt4 = 0.0, prompt4 = sc.nextDouble(), prompt4 = sc.nextDouble(), 
p1 : p1 = new CartesianPoint(prompt1, prompt2, ), p1 = new PolarPoint(prompt1, prompt2, ), p1 = new CartesianPoint(0, 0, ), 
pt1 : pt1 = sc.nextInt(), 
pt2 : pt2 = sc.nextInt(), 
prompt2 : prompt2 = sc.nextDouble(), prompt2 = 0.0, prompt2 = sc.nextDouble(), 
quad : quad = quadrant(p1, p2, ), 
prompt3 : prompt3 = 0.0, prompt3 = sc.nextDouble(), prompt3 = sc.nextDouble(), 

BLOCK: falseL44
p2 : p2 = new PolarPoint(prompt3, prompt4, ), p2 = new CartesianPoint(0, 0, ), p2 = new CartesianPoint(prompt3, prompt4, ), 
sc : sc = new Scanner(System.in, ), 
prompt1 : prompt1 = sc.nextDouble(), prompt1 = 0.0, prompt1 = sc.nextDouble(), 
prompt4 : prompt4 = 0.0, prompt4 = sc.nextDouble(), prompt4 = sc.nextDouble(), 
p1 : p1 = new CartesianPoint(prompt1, prompt2, ), p1 = new PolarPoint(prompt1, prompt2, ), p1 = new CartesianPoint(0, 0, ), 
pt1 : pt1 = sc.nextInt(), 
pt2 : pt2 = sc.nextInt(), 
prompt2 : prompt2 = sc.nextDouble(), prompt2 = 0.0, prompt2 = sc.nextDouble(), 
quad : quad = quadrant(p1, p2, ), 
prompt3 : prompt3 = 0.0, prompt3 = sc.nextDouble(), prompt3 = sc.nextDouble(), 

BLOCK: joinL43
p2 : p2 = new PolarPoint(prompt3, prompt4, ), p2 = new CartesianPoint(0, 0, ), p2 = new CartesianPoint(prompt3, prompt4, ), 
sc : sc = new Scanner(System.in, ), 
prompt1 : prompt1 = sc.nextDouble(), prompt1 = 0.0, prompt1 = sc.nextDouble(), 
prompt4 : prompt4 = 0.0, prompt4 = sc.nextDouble(), prompt4 = sc.nextDouble(), 
p1 : p1 = new CartesianPoint(prompt1, prompt2, ), p1 = new PolarPoint(prompt1, prompt2, ), p1 = new CartesianPoint(0, 0, ), 
pt1 : pt1 = sc.nextInt(), 
pt2 : pt2 = sc.nextInt(), 
prompt2 : prompt2 = sc.nextDouble(), prompt2 = 0.0, prompt2 = sc.nextDouble(), 
quad : quad = quadrant(p1, p2, ), 
prompt3 : prompt3 = 0.0, prompt3 = sc.nextDouble(), prompt3 = sc.nextDouble(), 

BLOCK: StartdistanceL45

BLOCK: StartdistanceL45

BLOCK: BasicL46
x_diff : x_diff = p1.xCoordinate() - p2.xCoordinate(), 
distance : distance = Math.sqrt(x_diff * x_diff + y_diff * y_diff, ), 
y_diff : y_diff = p1.yCoordinate() - p2.yCoordinate(), 

BLOCK: StartquadrantL48

BLOCK: StartquadrantL48

BLOCK: BasicL49
p2quad : p2quad = 0, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 0, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: trueL51
p2quad : p2quad = 0, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 1, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: falseL53
p2quad : p2quad = 0, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 0, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: trueL54
p2quad : p2quad = 0, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 2, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: falseL56
p2quad : p2quad = 0, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 0, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: trueL57
p2quad : p2quad = 0, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 3, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: falseL59
p2quad : p2quad = 0, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 4, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: joinL58
p2quad : p2quad = 0, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 3, p1quad = 4, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: joinL55
p2quad : p2quad = 0, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 2, p1quad = 3, p1quad = 4, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: joinL52
p2quad : p2quad = 0, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 2, p1quad = 3, p1quad = 1, p1quad = 4, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: trueL60
p2quad : p2quad = 1, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 2, p1quad = 3, p1quad = 1, p1quad = 4, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: falseL62
p2quad : p2quad = 0, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 2, p1quad = 3, p1quad = 1, p1quad = 4, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: trueL63
p2quad : p2quad = 2, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 2, p1quad = 3, p1quad = 1, p1quad = 4, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: falseL65
p2quad : p2quad = 0, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 2, p1quad = 3, p1quad = 1, p1quad = 4, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: trueL66
p2quad : p2quad = 3, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 2, p1quad = 3, p1quad = 1, p1quad = 4, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: falseL68
p2quad : p2quad = 4, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 2, p1quad = 3, p1quad = 1, p1quad = 4, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: joinL67
p2quad : p2quad = 4, p2quad = 3, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 2, p1quad = 3, p1quad = 1, p1quad = 4, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: joinL64
p2quad : p2quad = 4, p2quad = 2, p2quad = 3, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 2, p1quad = 3, p1quad = 1, p1quad = 4, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: joinL61
p2quad : p2quad = 1, p2quad = 4, p2quad = 2, p2quad = 3, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 2, p1quad = 3, p1quad = 1, p1quad = 4, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: trueL69
p2quad : p2quad = 1, p2quad = 4, p2quad = 2, p2quad = 3, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 2, p1quad = 3, p1quad = 1, p1quad = 4, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: falseL71
p2quad : p2quad = 1, p2quad = 4, p2quad = 2, p2quad = 3, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 2, p1quad = 3, p1quad = 1, p1quad = 4, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: joinL70
p2quad : p2quad = 1, p2quad = 4, p2quad = 2, p2quad = 3, 
p1y : p1y = p1.yCoordinate(), 
p1quad : p1quad = 2, p1quad = 3, p1quad = 1, p1quad = 4, 
p2x : p2x = p2.xCoordinate(), 
p1x : p1x = p1.xCoordinate(), 
p2y : p2y = p2.yCoordinate(), 

BLOCK: StartmainL72

BLOCK: StartmainL72

BLOCK: BasicL73
pt3 : pt3 = new PolarPoint(1, 90, ), 
pt4 : pt4 = pt3.rotate90(), 

BLOCK: Startconstructor1L75
this.xCoordinate : this.xCoordinate = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.angle : this.angle = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: Startconstructor1L75
this.xCoordinate : this.xCoordinate = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.angle : this.angle = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: BasicL76
this.xCoordinate : this.xCoordinate = x_coord, 
this.yCoordinate : this.yCoordinate = y_coord, 
this.angle : this.angle = Math.atan2(y_coord, x_coord, ), 
this.radius : this.radius = Math.sqrt(x_coord * x_coord + y_coord * y_coord, ), 

BLOCK: StartxCoordinateL78
this.angle : this.angle = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: StartxCoordinateL78
this.angle : this.angle = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: BasicL79
this.angle : this.angle = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: StartyCoordinateL81
this.xCoordinate : this.xCoordinate = 0.0, 
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 

BLOCK: StartyCoordinateL81
this.xCoordinate : this.xCoordinate = 0.0, 
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 

BLOCK: BasicL82
this.xCoordinate : this.xCoordinate = 0.0, 
this.radius : this.radius = 0.0, 
this.angle : this.angle = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 

BLOCK: StartradiusL84
this.xCoordinate : this.xCoordinate = 0.0, 
this.angle : this.angle = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: StartradiusL84
this.xCoordinate : this.xCoordinate = 0.0, 
this.angle : this.angle = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: BasicL85
this.xCoordinate : this.xCoordinate = 0.0, 
this.angle : this.angle = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: StartangleL87
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: StartangleL87
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: BasicL88
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: trueL90
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: falseL92
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: joinL91
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.angle : this.angle = 0.0, 

BLOCK: Startrotate90L93
this.angle : this.angle = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: Startrotate90L93
this.angle : this.angle = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 
this.yCoordinate : this.yCoordinate = 0.0, 
this.radius : this.radius = 0.0, 

BLOCK: BasicL94
rot_90y_coord : rot_90y_coord = Math.sin(rot_90angle, ) * rot_90radius, 
this.angle : this.angle = 0.0, 
this.xCoordinate : this.xCoordinate = 0.0, 
rot_90angle : rot_90angle = this.angle + Math.PI / 2, 
this.yCoordinate : this.yCoordinate = 0.0, 
rot_90x_coord : rot_90x_coord = Math.cos(rot_90angle, ) * rot_90radius, 
this.radius : this.radius = 0.0, 
rot_90point : rot_90point = new CartesianPoint(rot_90x_coord, rot_90y_coord, ), 
rot_90radius : rot_90radius = this.radius, 

BLOCK: StartmainL96

BLOCK: StartmainL96

BLOCK: BasicL97
pt2 : pt2 = pt.rotate90(), 
pt : pt = new CartesianPoint(0, 1, ), 

Unfiltered: 0
Filtered: 0


[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 6.384 s
[INFO] Finished at: 2019-05-06T19:55:04-07:00
[INFO] Final Memory: 25M/1362M
[INFO] ------------------------------------------------------------------------
