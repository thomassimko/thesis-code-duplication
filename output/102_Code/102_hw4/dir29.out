[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for thesis:thesis:jar:1.0-SNAPSHOT
[WARNING] 'dependencies.dependency.version' for org.junit.jupiter:junit-jupiter-api:jar is either LATEST or RELEASE (both of them are being deprecated) @ line 25, column 22
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------------------------------------------------------------
[INFO] Building thesis 1.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] >>> exec-maven-plugin:1.2.1:java (default-cli) > validate @ thesis >>>
[INFO] 
[INFO] <<< exec-maven-plugin:1.2.1:java (default-cli) < validate @ thesis <<<
[INFO] 
[INFO] 
[INFO] --- exec-maven-plugin:1.2.1:java (default-cli) @ thesis ---
BLOCK: Startconstructor1L0

BLOCK: BasicL1

BLOCK: StartcompareL3

BLOCK: BasicL4

BLOCK: Startconstructor1L6

BLOCK: BasicL7

BLOCK: StartcompareL9

BLOCK: BasicL10

BLOCK: Startconstructor1L12
this.comp1 : this.comp1 = null, 
this.comp2 : this.comp2 = null, 

BLOCK: BasicL13
this.comp1 : this.comp1 = comp1, 
this.comp2 : this.comp2 = comp2, 

BLOCK: StartcompareL15
this.comp1 : this.comp1 = null, 
this.comp2 : this.comp2 = null, 

BLOCK: BasicL16
firstComparison : firstComparison = this.comp1.compare(o1, o2, ), 
this.comp1 : this.comp1 = null, 
this.comp2 : this.comp2 = null, 

BLOCK: trueL18
firstComparison : firstComparison = this.comp1.compare(o1, o2, ), 
this.comp1 : this.comp1 = null, 
this.comp2 : this.comp2 = null, 

BLOCK: joinL19
firstComparison : firstComparison = this.comp1.compare(o1, o2, ), 
this.comp1 : this.comp1 = null, 
this.comp2 : this.comp2 = null, 

BLOCK: Startconstructor1L20

BLOCK: BasicL21

BLOCK: StartcompareL23

BLOCK: BasicL24

BLOCK: trueL26

BLOCK: falseL28

BLOCK: trueL29

BLOCK: joinL30

BLOCK: joinL27

BLOCK: Startconstructor1L31
this.category : this.category = null, 
this.amountPaid : this.amountPaid = 0.0, 
this.date : this.date = null, 
this.payee : this.payee = null, 

BLOCK: BasicL32
this.category : this.category = category, 
this.amountPaid : this.amountPaid = amountPaid, 
this.date : this.date = date, 
this.payee : this.payee = payee, 

BLOCK: StartgetTypeL34
this.amountPaid : this.amountPaid = 0.0, 
this.category : this.category = null, 
this.payee : this.payee = null, 
this.date : this.date = null, 

BLOCK: BasicL35
this.amountPaid : this.amountPaid = 0.0, 
this.category : this.category = null, 
this.payee : this.payee = null, 
this.date : this.date = null, 

BLOCK: StartgetDateL37
this.payee : this.payee = null, 
this.date : this.date = null, 
this.category : this.category = null, 
this.amountPaid : this.amountPaid = 0.0, 

BLOCK: BasicL38
this.payee : this.payee = null, 
this.date : this.date = null, 
this.category : this.category = null, 
this.amountPaid : this.amountPaid = 0.0, 

BLOCK: StartgetCategoryL40
this.amountPaid : this.amountPaid = 0.0, 
this.date : this.date = null, 
this.category : this.category = null, 
this.payee : this.payee = null, 

BLOCK: BasicL41
this.amountPaid : this.amountPaid = 0.0, 
this.date : this.date = null, 
this.category : this.category = null, 
this.payee : this.payee = null, 

BLOCK: StartgetPayeeL43
this.amountPaid : this.amountPaid = 0.0, 
this.date : this.date = null, 
this.category : this.category = null, 
this.payee : this.payee = null, 

BLOCK: BasicL44
this.amountPaid : this.amountPaid = 0.0, 
this.date : this.date = null, 
this.category : this.category = null, 
this.payee : this.payee = null, 

BLOCK: StartgetAmountPaidL46
this.category : this.category = null, 
this.date : this.date = null, 
this.amountPaid : this.amountPaid = 0.0, 
this.payee : this.payee = null, 

BLOCK: BasicL47
this.category : this.category = null, 
this.date : this.date = null, 
this.amountPaid : this.amountPaid = 0.0, 
this.payee : this.payee = null, 

BLOCK: Startconstructor1L49

BLOCK: BasicL50

BLOCK: StartcompareL52

BLOCK: BasicL53

BLOCK: trueL55

BLOCK: falseL57

BLOCK: trueL58

BLOCK: joinL59

BLOCK: joinL56

BLOCK: StartmainL60

BLOCK: BasicL61
s : s = null, 
error : error = false, 
expenseList : expenseList = new ArrayList(), 
out : out = null, 
scan : scan = new Scanner(System.in, ), 

BLOCK: BasicL63
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
remainingAmount : remainingAmount = 0.0, 
category : category = null, 
date : date = null, 
payee : payee = null, 
amount : amount = 0.0, 

BLOCK: BasicL64
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
str : str = s.nextLine(), 
error : error = true, error = true, 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 

BLOCK: LoopL65
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
str : str = s.nextLine(), 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 

BLOCK: BasicL66
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
str : str = s.nextLine(), 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 

BLOCK: trueL67
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
str : str = s.nextLine(), 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
category : category = s.nextLine(), 
date : date = df.parse(s.nextLine(), ), 
payee : payee = s.nextLine(), 
amount : amount = Double.parseDouble(s.nextLine(), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 

BLOCK: falseL69
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
str : str = s.nextLine(), 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 

BLOCK: trueL70
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
str : str = s.nextLine(), 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), 
category : category = s.nextLine(), 
date : date = df.parse(s.nextLine(), ), 
payee : payee = s.nextLine(), 
amount : amount = Double.parseDouble(s.nextLine(), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 

BLOCK: joinL71
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
str : str = s.nextLine(), 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 

BLOCK: joinL68
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
str : str = s.nextLine(), 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 

BLOCK: BasicL72
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
str : str = s.nextLine(), 
error : error = true, 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 

BLOCK: BasicL73
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
str : str = s.nextLine(), 
error : error = true, 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 

BLOCK: trueL74
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
str : str = s.nextLine(), 
error : error = true, error = true, 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 

BLOCK: joinL75
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
str : str = s.nextLine(), 
error : error = true, error = true, 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
choice : choice = 0, 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 

BLOCK: LoopL76
expDate : expDate = exp.getDate(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
listNew : listNew = new ArrayList(), 
str : str = s.nextLine(), 
remainingAmount : remainingAmount = Double.parseDouble(scan.next(), ), 
exp : exp = expenseList, 
choice : choice = Integer.parseInt(scan.next(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
expPayee : expPayee = exp.getPayee(), 
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
expRemaining : expRemaining = getRemainingAmount(), 
error : error = true, error = true, 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
expCategory : expCategory = exp.getCategory(), 
expenseList : expenseList = listNew, expenseList = listNew, 
out : out = new FileWriter("StoredExpenses", ), 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
expAmount : expAmount = exp.getAmountPaid(), 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
exp : exp = expenseList, 
strOut : strOut = String.format("%1$2tm/%<2td/%<tY ", expDate, ) + String.format("%-15.15s %10s [%s]", expPayee, expAmount.toString(), expCategory, ), strOut = null, strOut = String.format("%1$2tm/%<2td/%<tY ", expDate, ) + String.format("%-15.15s %10s (%s) [%s]", expPayee, expAmount.toString(), expRemaining.toString(), expCategory, ), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
listNew : listNew = new ArrayList(), 

BLOCK: BasicL77
expDate : expDate = exp.getDate(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
listNew : listNew = new ArrayList(), 
str : str = s.nextLine(), 
remainingAmount : remainingAmount = Double.parseDouble(scan.next(), ), 
exp : exp = expenseList, 
choice : choice = 0, choice = Integer.parseInt(scan.next(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
expPayee : expPayee = exp.getPayee(), 
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
expRemaining : expRemaining = getRemainingAmount(), 
error : error = true, error = true, 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
expCategory : expCategory = exp.getCategory(), 
expenseList : expenseList = listNew, expenseList = listNew, 
out : out = new FileWriter("StoredExpenses", ), 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
expAmount : expAmount = exp.getAmountPaid(), 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
exp : exp = expenseList, 
strOut : strOut = String.format("%1$2tm/%<2td/%<tY ", expDate, ) + String.format("%-15.15s %10s [%s]", expPayee, expAmount.toString(), expCategory, ), strOut = null, strOut = String.format("%1$2tm/%<2td/%<tY ", expDate, ) + String.format("%-15.15s %10s (%s) [%s]", expPayee, expAmount.toString(), expRemaining.toString(), expCategory, ), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
listNew : listNew = new ArrayList(), 

BLOCK: trueL78
expDate : expDate = exp.getDate(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
listNew : listNew = new ArrayList(), 
str : str = s.nextLine(), 
remainingAmount : remainingAmount = Double.parseDouble(scan.next(), ), 
exp : exp = expenseList, 
choice : choice = Integer.parseInt(scan.next(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
expPayee : expPayee = exp.getPayee(), 
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
expRemaining : expRemaining = getRemainingAmount(), 
error : error = true, error = true, 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
expCategory : expCategory = exp.getCategory(), 
expenseList : expenseList = listNew, expenseList = listNew, 
out : out = new FileWriter("StoredExpenses", ), 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
expAmount : expAmount = exp.getAmountPaid(), 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
exp : exp = expenseList, 
strOut : strOut = String.format("%1$2tm/%<2td/%<tY ", expDate, ) + String.format("%-15.15s %10s [%s]", expPayee, expAmount.toString(), expCategory, ), strOut = null, strOut = String.format("%1$2tm/%<2td/%<tY ", expDate, ) + String.format("%-15.15s %10s (%s) [%s]", expPayee, expAmount.toString(), expRemaining.toString(), expCategory, ), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
listNew : listNew = new ArrayList(), 

BLOCK: joinL79
expDate : expDate = exp.getDate(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
listNew : listNew = new ArrayList(), 
str : str = s.nextLine(), 
remainingAmount : remainingAmount = Double.parseDouble(scan.next(), ), 
exp : exp = expenseList, 
choice : choice = Integer.parseInt(scan.next(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
expPayee : expPayee = exp.getPayee(), 
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
expRemaining : expRemaining = getRemainingAmount(), 
error : error = true, error = true, 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
expCategory : expCategory = exp.getCategory(), 
expenseList : expenseList = listNew, expenseList = listNew, 
out : out = new FileWriter("StoredExpenses", ), 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
expAmount : expAmount = exp.getAmountPaid(), 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
exp : exp = expenseList, 
strOut : strOut = String.format("%1$2tm/%<2td/%<tY ", expDate, ) + String.format("%-15.15s %10s [%s]", expPayee, expAmount.toString(), expCategory, ), strOut = null, strOut = String.format("%1$2tm/%<2td/%<tY ", expDate, ) + String.format("%-15.15s %10s (%s) [%s]", expPayee, expAmount.toString(), expRemaining.toString(), expCategory, ), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
listNew : listNew = new ArrayList(), 

BLOCK: LoopL82
expDate : expDate = exp.getDate(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
listNew : listNew = new ArrayList(), 
str : str = s.nextLine(), 
remainingAmount : remainingAmount = Double.parseDouble(scan.next(), ), 
exp : exp = expenseList, 
choice : choice = Integer.parseInt(scan.next(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
expPayee : expPayee = exp.getPayee(), 
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
expRemaining : expRemaining = getRemainingAmount(), 
expCategory : expCategory = exp.getCategory(), 
error : error = true, error = true, 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
expenseList : expenseList = listNew, expenseList = listNew, 
out : out = new FileWriter("StoredExpenses", ), 
expAmount : expAmount = exp.getAmountPaid(), 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
exp : exp = expenseList, 
strOut : strOut = null, 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
listNew : listNew = new ArrayList(), 

BLOCK: BasicL83
expDate : expDate = exp.getDate(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
listNew : listNew = new ArrayList(), 
str : str = s.nextLine(), 
remainingAmount : remainingAmount = Double.parseDouble(scan.next(), ), 
exp : exp = expenseList, 
choice : choice = Integer.parseInt(scan.next(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
expPayee : expPayee = exp.getPayee(), 
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
expRemaining : expRemaining = getRemainingAmount(), 
expCategory : expCategory = exp.getCategory(), 
error : error = true, error = true, 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
expenseList : expenseList = listNew, expenseList = listNew, 
out : out = new FileWriter("StoredExpenses", ), 
expAmount : expAmount = exp.getAmountPaid(), 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
exp : exp = expenseList, 
strOut : strOut = String.format("%1$2tm/%<2td/%<tY ", expDate, ) + String.format("%-15.15s %10s [%s]", expPayee, expAmount.toString(), expCategory, ), strOut = null, strOut = String.format("%1$2tm/%<2td/%<tY ", expDate, ) + String.format("%-15.15s %10s (%s) [%s]", expPayee, expAmount.toString(), expRemaining.toString(), expCategory, ), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
listNew : listNew = new ArrayList(), 

BLOCK: trueL84
expDate : expDate = exp.getDate(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
listNew : listNew = new ArrayList(), 
str : str = s.nextLine(), 
remainingAmount : remainingAmount = Double.parseDouble(scan.next(), ), 
exp : exp = expenseList, 
choice : choice = Integer.parseInt(scan.next(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
expPayee : expPayee = exp.getPayee(), 
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
expRemaining : expRemaining = getRemainingAmount(), 
expCategory : expCategory = exp.getCategory(), 
error : error = true, error = true, 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
expenseList : expenseList = listNew, expenseList = listNew, 
out : out = new FileWriter("StoredExpenses", ), 
expAmount : expAmount = exp.getAmountPaid(), 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
exp : exp = expenseList, 
strOut : strOut = String.format("%1$2tm/%<2td/%<tY ", expDate, ) + String.format("%-15.15s %10s (%s) [%s]", expPayee, expAmount.toString(), expRemaining.toString(), expCategory, ), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
listNew : listNew = new ArrayList(), 

BLOCK: falseL86
expDate : expDate = exp.getDate(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
listNew : listNew = new ArrayList(), 
str : str = s.nextLine(), 
remainingAmount : remainingAmount = Double.parseDouble(scan.next(), ), 
exp : exp = expenseList, 
choice : choice = Integer.parseInt(scan.next(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
expPayee : expPayee = exp.getPayee(), 
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
expRemaining : expRemaining = getRemainingAmount(), 
expCategory : expCategory = exp.getCategory(), 
error : error = true, error = true, 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
expenseList : expenseList = listNew, expenseList = listNew, 
out : out = new FileWriter("StoredExpenses", ), 
expAmount : expAmount = exp.getAmountPaid(), 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
exp : exp = expenseList, 
strOut : strOut = String.format("%1$2tm/%<2td/%<tY ", expDate, ) + String.format("%-15.15s %10s [%s]", expPayee, expAmount.toString(), expCategory, ), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
listNew : listNew = new ArrayList(), 

BLOCK: joinL85
expDate : expDate = exp.getDate(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
listNew : listNew = new ArrayList(), 
str : str = s.nextLine(), 
remainingAmount : remainingAmount = Double.parseDouble(scan.next(), ), 
exp : exp = expenseList, 
choice : choice = Integer.parseInt(scan.next(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
expPayee : expPayee = exp.getPayee(), 
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
expRemaining : expRemaining = getRemainingAmount(), 
expCategory : expCategory = exp.getCategory(), 
error : error = true, error = true, 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
expenseList : expenseList = listNew, expenseList = listNew, 
out : out = new FileWriter("StoredExpenses", ), 
expAmount : expAmount = exp.getAmountPaid(), 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
exp : exp = expenseList, 
strOut : strOut = String.format("%1$2tm/%<2td/%<tY ", expDate, ) + String.format("%-15.15s %10s [%s]", expPayee, expAmount.toString(), expCategory, ), strOut = String.format("%1$2tm/%<2td/%<tY ", expDate, ) + String.format("%-15.15s %10s (%s) [%s]", expPayee, expAmount.toString(), expRemaining.toString(), expCategory, ), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
listNew : listNew = new ArrayList(), 

BLOCK: trueL88
expDate : expDate = exp.getDate(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
listNew : listNew = new ArrayList(), 
str : str = s.nextLine(), 
remainingAmount : remainingAmount = Double.parseDouble(scan.next(), ), 
exp : exp = expenseList, 
choice : choice = Integer.parseInt(scan.next(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
expPayee : expPayee = exp.getPayee(), 
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
expRemaining : expRemaining = getRemainingAmount(), 
error : error = true, error = true, 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
expCategory : expCategory = exp.getCategory(), 
expenseList : expenseList = listNew, 
out : out = new FileWriter("StoredExpenses", ), 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
expAmount : expAmount = exp.getAmountPaid(), 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
exp : exp = expenseList, 
strOut : strOut = String.format("%1$2tm/%<2td/%<tY ", expDate, ) + String.format("%-15.15s %10s [%s]", expPayee, expAmount.toString(), expCategory, ), strOut = null, strOut = String.format("%1$2tm/%<2td/%<tY ", expDate, ) + String.format("%-15.15s %10s (%s) [%s]", expPayee, expAmount.toString(), expRemaining.toString(), expCategory, ), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
listNew : listNew = new ArrayList(), 

BLOCK: falseL90
expDate : expDate = exp.getDate(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
listNew : listNew = new ArrayList(), 
remainingAmount : remainingAmount = Double.parseDouble(scan.next(), ), 
str : str = s.nextLine(), 
exp : exp = expenseList, 
choice : choice = Integer.parseInt(scan.next(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
expPayee : expPayee = exp.getPayee(), 
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
expRemaining : expRemaining = getRemainingAmount(), 
error : error = true, error = true, 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
expCategory : expCategory = exp.getCategory(), 
expenseList : expenseList = listNew, 
out : out = new FileWriter("StoredExpenses", ), 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
expAmount : expAmount = exp.getAmountPaid(), 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
exp : exp = expenseList, 
strOut : strOut = String.format("%1$2tm/%<2td/%<tY ", expDate, ) + String.format("%-15.15s %10s [%s]", expPayee, expAmount.toString(), expCategory, ), strOut = null, strOut = String.format("%1$2tm/%<2td/%<tY ", expDate, ) + String.format("%-15.15s %10s (%s) [%s]", expPayee, expAmount.toString(), expRemaining.toString(), expCategory, ), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
listNew : listNew = new ArrayList(), 

BLOCK: joinL89
expDate : expDate = exp.getDate(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
listNew : listNew = new ArrayList(), 
str : str = s.nextLine(), 
remainingAmount : remainingAmount = Double.parseDouble(scan.next(), ), 
exp : exp = expenseList, 
choice : choice = Integer.parseInt(scan.next(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
expPayee : expPayee = exp.getPayee(), 
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
expRemaining : expRemaining = getRemainingAmount(), 
error : error = true, error = true, 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
expCategory : expCategory = exp.getCategory(), 
expenseList : expenseList = listNew, expenseList = listNew, 
out : out = new FileWriter("StoredExpenses", ), 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
expAmount : expAmount = exp.getAmountPaid(), 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
exp : exp = expenseList, 
strOut : strOut = String.format("%1$2tm/%<2td/%<tY ", expDate, ) + String.format("%-15.15s %10s [%s]", expPayee, expAmount.toString(), expCategory, ), strOut = null, strOut = String.format("%1$2tm/%<2td/%<tY ", expDate, ) + String.format("%-15.15s %10s (%s) [%s]", expPayee, expAmount.toString(), expRemaining.toString(), expCategory, ), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
listNew : listNew = new ArrayList(), 

BLOCK: BasicL93
out : out = new FileWriter("StoredExpenses", ), 

BLOCK: BasicL94
out : out = new FileWriter("StoredExpenses", ), 
exp : exp = expenseList, 

BLOCK: LoopL95
out : out = new FileWriter("StoredExpenses", ), 
exp : exp = expenseList, 

BLOCK: BasicL96
out : out = new FileWriter("StoredExpenses", ), 
exp : exp = expenseList, 

BLOCK: trueL97
out : out = new FileWriter("StoredExpenses", ), 
exp : exp = expenseList, 

BLOCK: falseL99
out : out = new FileWriter("StoredExpenses", ), 
exp : exp = expenseList, 

BLOCK: joinL98
out : out = new FileWriter("StoredExpenses", ), 
exp : exp = expenseList, 

BLOCK: BasicL100
out : out = new FileWriter("StoredExpenses", ), 
exp : exp = expenseList, 

BLOCK: trueL101
out : out = new FileWriter("StoredExpenses", ), 
exp : exp = expenseList, 

BLOCK: joinL102
out : out = new FileWriter("StoredExpenses", ), 
exp : exp = expenseList, 

BLOCK: StartcomparatorBuilderL103

BLOCK: BasicL104

BLOCK: trueL106
c : c = new ExpenseDateComparator(), 

BLOCK: falseL108

BLOCK: trueL109
c : c = new ExpenseAmountComparator(), 

BLOCK: falseL111

BLOCK: trueL112
c : c = new ExpenseCategoryComparator(), 

BLOCK: falseL114

BLOCK: trueL115
c : c = new ExpensePayeeComparator(), 

BLOCK: joinL116
c : c = new ExpenseAmountComparator(), 
c : c = new ExpensePayeeComparator(), 
c : c = new ExpenseCategoryComparator(), 
c : c = new ExpenseDateComparator(), 

BLOCK: joinL113
c : c = new ExpenseAmountComparator(), 
c : c = new ExpensePayeeComparator(), 
c : c = new ExpenseCategoryComparator(), 
c : c = new ExpenseDateComparator(), 

BLOCK: joinL110
c : c = new ExpenseAmountComparator(), 
c : c = new ExpensePayeeComparator(), 
c : c = new ExpenseCategoryComparator(), 
c : c = new ExpenseDateComparator(), 

BLOCK: joinL107
c : c = new ExpenseAmountComparator(), 
c : c = new ExpensePayeeComparator(), 
c : c = new ExpenseCategoryComparator(), 
c : c = new ExpenseDateComparator(), 

BLOCK: StartrecursiveComparatorL117

BLOCK: BasicL118
comp : comp = comparatorBuilder(compArr[i], ), 

BLOCK: trueL120
comp : comp = comparatorBuilder(compArr[i], ), 

BLOCK: joinL121
comp : comp = comparatorBuilder(compArr[i], ), 

BLOCK: Startconstructor1L122
this.remainingAmount : this.remainingAmount = 0.0, 

BLOCK: BasicL123
this.remainingAmount : this.remainingAmount = remainingAmount, 

BLOCK: StartgetRemainingAmountL125
this.remainingAmount : this.remainingAmount = 0.0, 

BLOCK: BasicL126
this.remainingAmount : this.remainingAmount = 0.0, 

BLOCK: Startconstructor1L0

BLOCK: Startconstructor1L0

BLOCK: BasicL1

BLOCK: StartcompareL3

BLOCK: StartcompareL3

BLOCK: BasicL4

BLOCK: Startconstructor1L6

BLOCK: Startconstructor1L6

BLOCK: BasicL7

BLOCK: StartcompareL9

BLOCK: StartcompareL9

BLOCK: BasicL10

BLOCK: Startconstructor1L12
this.comp1 : this.comp1 = null, 
this.comp2 : this.comp2 = null, 

BLOCK: Startconstructor1L12
this.comp1 : this.comp1 = null, 
this.comp2 : this.comp2 = null, 

BLOCK: BasicL13
this.comp1 : this.comp1 = comp1, 
this.comp2 : this.comp2 = comp2, 

BLOCK: StartcompareL15
this.comp1 : this.comp1 = null, 
this.comp2 : this.comp2 = null, 

BLOCK: StartcompareL15
this.comp1 : this.comp1 = null, 
this.comp2 : this.comp2 = null, 

BLOCK: BasicL16
firstComparison : firstComparison = this.comp1.compare(o1, o2, ), 
this.comp1 : this.comp1 = null, 
this.comp2 : this.comp2 = null, 

BLOCK: trueL18
firstComparison : firstComparison = this.comp1.compare(o1, o2, ), 
this.comp1 : this.comp1 = null, 
this.comp2 : this.comp2 = null, 

BLOCK: joinL19
firstComparison : firstComparison = this.comp1.compare(o1, o2, ), 
this.comp1 : this.comp1 = null, 
this.comp2 : this.comp2 = null, 

BLOCK: Startconstructor1L20

BLOCK: Startconstructor1L20

BLOCK: BasicL21

BLOCK: StartcompareL23

BLOCK: StartcompareL23

BLOCK: BasicL24

BLOCK: trueL26

BLOCK: falseL28

BLOCK: trueL29

BLOCK: joinL30

BLOCK: joinL27

BLOCK: Startconstructor1L31
this.category : this.category = null, 
this.amountPaid : this.amountPaid = 0.0, 
this.date : this.date = null, 
this.payee : this.payee = null, 

BLOCK: Startconstructor1L31
this.category : this.category = null, 
this.amountPaid : this.amountPaid = 0.0, 
this.date : this.date = null, 
this.payee : this.payee = null, 

BLOCK: BasicL32
this.category : this.category = category, 
this.amountPaid : this.amountPaid = amountPaid, 
this.date : this.date = date, 
this.payee : this.payee = payee, 

BLOCK: StartgetTypeL34
this.amountPaid : this.amountPaid = 0.0, 
this.category : this.category = null, 
this.payee : this.payee = null, 
this.date : this.date = null, 

BLOCK: StartgetTypeL34
this.amountPaid : this.amountPaid = 0.0, 
this.category : this.category = null, 
this.payee : this.payee = null, 
this.date : this.date = null, 

BLOCK: BasicL35
this.amountPaid : this.amountPaid = 0.0, 
this.category : this.category = null, 
this.payee : this.payee = null, 
this.date : this.date = null, 

BLOCK: StartgetDateL37
this.payee : this.payee = null, 
this.date : this.date = null, 
this.category : this.category = null, 
this.amountPaid : this.amountPaid = 0.0, 

BLOCK: StartgetDateL37
this.payee : this.payee = null, 
this.date : this.date = null, 
this.category : this.category = null, 
this.amountPaid : this.amountPaid = 0.0, 

BLOCK: BasicL38
this.payee : this.payee = null, 
this.date : this.date = null, 
this.category : this.category = null, 
this.amountPaid : this.amountPaid = 0.0, 

BLOCK: StartgetCategoryL40
this.amountPaid : this.amountPaid = 0.0, 
this.date : this.date = null, 
this.category : this.category = null, 
this.payee : this.payee = null, 

BLOCK: StartgetCategoryL40
this.amountPaid : this.amountPaid = 0.0, 
this.date : this.date = null, 
this.category : this.category = null, 
this.payee : this.payee = null, 

BLOCK: BasicL41
this.amountPaid : this.amountPaid = 0.0, 
this.date : this.date = null, 
this.category : this.category = null, 
this.payee : this.payee = null, 

BLOCK: StartgetPayeeL43
this.amountPaid : this.amountPaid = 0.0, 
this.date : this.date = null, 
this.category : this.category = null, 
this.payee : this.payee = null, 

BLOCK: StartgetPayeeL43
this.amountPaid : this.amountPaid = 0.0, 
this.date : this.date = null, 
this.category : this.category = null, 
this.payee : this.payee = null, 

BLOCK: BasicL44
this.amountPaid : this.amountPaid = 0.0, 
this.date : this.date = null, 
this.category : this.category = null, 
this.payee : this.payee = null, 

BLOCK: StartgetAmountPaidL46
this.category : this.category = null, 
this.date : this.date = null, 
this.amountPaid : this.amountPaid = 0.0, 
this.payee : this.payee = null, 

BLOCK: StartgetAmountPaidL46
this.category : this.category = null, 
this.date : this.date = null, 
this.amountPaid : this.amountPaid = 0.0, 
this.payee : this.payee = null, 

BLOCK: BasicL47
this.category : this.category = null, 
this.date : this.date = null, 
this.amountPaid : this.amountPaid = 0.0, 
this.payee : this.payee = null, 

BLOCK: Startconstructor1L49

BLOCK: Startconstructor1L49

BLOCK: BasicL50

BLOCK: StartcompareL52

BLOCK: StartcompareL52

BLOCK: BasicL53

BLOCK: trueL55

BLOCK: falseL57

BLOCK: trueL58

BLOCK: joinL59

BLOCK: joinL56

BLOCK: StartmainL60

BLOCK: StartmainL60

BLOCK: BasicL61
s : s = null, 
error : error = false, 
expenseList : expenseList = new ArrayList(), 
out : out = null, 
scan : scan = new Scanner(System.in, ), 

BLOCK: BasicL63
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
remainingAmount : remainingAmount = 0.0, 
category : category = null, 
date : date = null, 
payee : payee = null, 
amount : amount = 0.0, 

BLOCK: BasicL64
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
str : str = s.nextLine(), 
error : error = true, error = true, 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 

BLOCK: LoopL65
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
str : str = s.nextLine(), 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 

BLOCK: BasicL66
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
str : str = s.nextLine(), 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 

BLOCK: trueL67
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
str : str = s.nextLine(), 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
category : category = s.nextLine(), 
date : date = df.parse(s.nextLine(), ), 
payee : payee = s.nextLine(), 
amount : amount = Double.parseDouble(s.nextLine(), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 

BLOCK: falseL69
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
str : str = s.nextLine(), 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 

BLOCK: trueL70
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
str : str = s.nextLine(), 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), 
category : category = s.nextLine(), 
date : date = df.parse(s.nextLine(), ), 
payee : payee = s.nextLine(), 
amount : amount = Double.parseDouble(s.nextLine(), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 

BLOCK: joinL71
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
str : str = s.nextLine(), 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 

BLOCK: joinL68
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
str : str = s.nextLine(), 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 

BLOCK: BasicL72
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
str : str = s.nextLine(), 
error : error = true, 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 

BLOCK: BasicL73
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
str : str = s.nextLine(), 
error : error = true, 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 

BLOCK: trueL74
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
str : str = s.nextLine(), 
error : error = true, error = true, 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 

BLOCK: joinL75
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
str : str = s.nextLine(), 
error : error = true, error = true, 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
choice : choice = 0, 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 

BLOCK: LoopL76
expDate : expDate = exp.getDate(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
listNew : listNew = new ArrayList(), 
str : str = s.nextLine(), 
remainingAmount : remainingAmount = Double.parseDouble(scan.next(), ), 
exp : exp = expenseList, 
choice : choice = Integer.parseInt(scan.next(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
expPayee : expPayee = exp.getPayee(), 
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
expRemaining : expRemaining = getRemainingAmount(), 
error : error = true, error = true, 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
expCategory : expCategory = exp.getCategory(), 
expenseList : expenseList = listNew, expenseList = listNew, 
out : out = new FileWriter("StoredExpenses", ), 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
expAmount : expAmount = exp.getAmountPaid(), 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
exp : exp = expenseList, 
strOut : strOut = String.format("%1$2tm/%<2td/%<tY ", expDate, ) + String.format("%-15.15s %10s [%s]", expPayee, expAmount.toString(), expCategory, ), strOut = null, strOut = String.format("%1$2tm/%<2td/%<tY ", expDate, ) + String.format("%-15.15s %10s (%s) [%s]", expPayee, expAmount.toString(), expRemaining.toString(), expCategory, ), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
listNew : listNew = new ArrayList(), 

BLOCK: BasicL77
expDate : expDate = exp.getDate(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
listNew : listNew = new ArrayList(), 
str : str = s.nextLine(), 
remainingAmount : remainingAmount = Double.parseDouble(scan.next(), ), 
exp : exp = expenseList, 
choice : choice = 0, choice = Integer.parseInt(scan.next(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
expPayee : expPayee = exp.getPayee(), 
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
expRemaining : expRemaining = getRemainingAmount(), 
error : error = true, error = true, 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
expCategory : expCategory = exp.getCategory(), 
expenseList : expenseList = listNew, expenseList = listNew, 
out : out = new FileWriter("StoredExpenses", ), 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
expAmount : expAmount = exp.getAmountPaid(), 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
exp : exp = expenseList, 
strOut : strOut = String.format("%1$2tm/%<2td/%<tY ", expDate, ) + String.format("%-15.15s %10s [%s]", expPayee, expAmount.toString(), expCategory, ), strOut = null, strOut = String.format("%1$2tm/%<2td/%<tY ", expDate, ) + String.format("%-15.15s %10s (%s) [%s]", expPayee, expAmount.toString(), expRemaining.toString(), expCategory, ), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
listNew : listNew = new ArrayList(), 

BLOCK: trueL78
expDate : expDate = exp.getDate(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
listNew : listNew = new ArrayList(), 
str : str = s.nextLine(), 
remainingAmount : remainingAmount = Double.parseDouble(scan.next(), ), 
exp : exp = expenseList, 
choice : choice = Integer.parseInt(scan.next(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
expPayee : expPayee = exp.getPayee(), 
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
expRemaining : expRemaining = getRemainingAmount(), 
error : error = true, error = true, 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
expCategory : expCategory = exp.getCategory(), 
expenseList : expenseList = listNew, expenseList = listNew, 
out : out = new FileWriter("StoredExpenses", ), 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
expAmount : expAmount = exp.getAmountPaid(), 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
exp : exp = expenseList, 
strOut : strOut = String.format("%1$2tm/%<2td/%<tY ", expDate, ) + String.format("%-15.15s %10s [%s]", expPayee, expAmount.toString(), expCategory, ), strOut = null, strOut = String.format("%1$2tm/%<2td/%<tY ", expDate, ) + String.format("%-15.15s %10s (%s) [%s]", expPayee, expAmount.toString(), expRemaining.toString(), expCategory, ), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
listNew : listNew = new ArrayList(), 

BLOCK: joinL79
expDate : expDate = exp.getDate(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
listNew : listNew = new ArrayList(), 
str : str = s.nextLine(), 
remainingAmount : remainingAmount = Double.parseDouble(scan.next(), ), 
exp : exp = expenseList, 
choice : choice = Integer.parseInt(scan.next(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
expPayee : expPayee = exp.getPayee(), 
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
expRemaining : expRemaining = getRemainingAmount(), 
error : error = true, error = true, 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
expCategory : expCategory = exp.getCategory(), 
expenseList : expenseList = listNew, expenseList = listNew, 
out : out = new FileWriter("StoredExpenses", ), 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
expAmount : expAmount = exp.getAmountPaid(), 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
exp : exp = expenseList, 
strOut : strOut = String.format("%1$2tm/%<2td/%<tY ", expDate, ) + String.format("%-15.15s %10s [%s]", expPayee, expAmount.toString(), expCategory, ), strOut = null, strOut = String.format("%1$2tm/%<2td/%<tY ", expDate, ) + String.format("%-15.15s %10s (%s) [%s]", expPayee, expAmount.toString(), expRemaining.toString(), expCategory, ), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
listNew : listNew = new ArrayList(), 

BLOCK: LoopL82
expDate : expDate = exp.getDate(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
listNew : listNew = new ArrayList(), 
str : str = s.nextLine(), 
remainingAmount : remainingAmount = Double.parseDouble(scan.next(), ), 
exp : exp = expenseList, 
choice : choice = Integer.parseInt(scan.next(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
expPayee : expPayee = exp.getPayee(), 
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
expRemaining : expRemaining = getRemainingAmount(), 
expCategory : expCategory = exp.getCategory(), 
error : error = true, error = true, 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
expenseList : expenseList = listNew, expenseList = listNew, 
out : out = new FileWriter("StoredExpenses", ), 
expAmount : expAmount = exp.getAmountPaid(), 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
exp : exp = expenseList, 
strOut : strOut = null, 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
listNew : listNew = new ArrayList(), 

BLOCK: BasicL83
expDate : expDate = exp.getDate(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
listNew : listNew = new ArrayList(), 
str : str = s.nextLine(), 
remainingAmount : remainingAmount = Double.parseDouble(scan.next(), ), 
exp : exp = expenseList, 
choice : choice = Integer.parseInt(scan.next(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
expPayee : expPayee = exp.getPayee(), 
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
expRemaining : expRemaining = getRemainingAmount(), 
expCategory : expCategory = exp.getCategory(), 
error : error = true, error = true, 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
expenseList : expenseList = listNew, expenseList = listNew, 
out : out = new FileWriter("StoredExpenses", ), 
expAmount : expAmount = exp.getAmountPaid(), 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
exp : exp = expenseList, 
strOut : strOut = String.format("%1$2tm/%<2td/%<tY ", expDate, ) + String.format("%-15.15s %10s [%s]", expPayee, expAmount.toString(), expCategory, ), strOut = null, strOut = String.format("%1$2tm/%<2td/%<tY ", expDate, ) + String.format("%-15.15s %10s (%s) [%s]", expPayee, expAmount.toString(), expRemaining.toString(), expCategory, ), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
listNew : listNew = new ArrayList(), 

BLOCK: trueL84
expDate : expDate = exp.getDate(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
listNew : listNew = new ArrayList(), 
str : str = s.nextLine(), 
remainingAmount : remainingAmount = Double.parseDouble(scan.next(), ), 
exp : exp = expenseList, 
choice : choice = Integer.parseInt(scan.next(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
expPayee : expPayee = exp.getPayee(), 
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
expRemaining : expRemaining = getRemainingAmount(), 
expCategory : expCategory = exp.getCategory(), 
error : error = true, error = true, 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
expenseList : expenseList = listNew, expenseList = listNew, 
out : out = new FileWriter("StoredExpenses", ), 
expAmount : expAmount = exp.getAmountPaid(), 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
exp : exp = expenseList, 
strOut : strOut = String.format("%1$2tm/%<2td/%<tY ", expDate, ) + String.format("%-15.15s %10s (%s) [%s]", expPayee, expAmount.toString(), expRemaining.toString(), expCategory, ), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
listNew : listNew = new ArrayList(), 

BLOCK: falseL86
expDate : expDate = exp.getDate(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
listNew : listNew = new ArrayList(), 
str : str = s.nextLine(), 
remainingAmount : remainingAmount = Double.parseDouble(scan.next(), ), 
exp : exp = expenseList, 
choice : choice = Integer.parseInt(scan.next(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
expPayee : expPayee = exp.getPayee(), 
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
expRemaining : expRemaining = getRemainingAmount(), 
expCategory : expCategory = exp.getCategory(), 
error : error = true, error = true, 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
expenseList : expenseList = listNew, expenseList = listNew, 
out : out = new FileWriter("StoredExpenses", ), 
expAmount : expAmount = exp.getAmountPaid(), 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
exp : exp = expenseList, 
strOut : strOut = String.format("%1$2tm/%<2td/%<tY ", expDate, ) + String.format("%-15.15s %10s [%s]", expPayee, expAmount.toString(), expCategory, ), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
listNew : listNew = new ArrayList(), 

BLOCK: joinL85
expDate : expDate = exp.getDate(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
listNew : listNew = new ArrayList(), 
str : str = s.nextLine(), 
remainingAmount : remainingAmount = Double.parseDouble(scan.next(), ), 
exp : exp = expenseList, 
choice : choice = Integer.parseInt(scan.next(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
expPayee : expPayee = exp.getPayee(), 
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
expRemaining : expRemaining = getRemainingAmount(), 
expCategory : expCategory = exp.getCategory(), 
error : error = true, error = true, 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
expenseList : expenseList = listNew, expenseList = listNew, 
out : out = new FileWriter("StoredExpenses", ), 
expAmount : expAmount = exp.getAmountPaid(), 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
exp : exp = expenseList, 
strOut : strOut = String.format("%1$2tm/%<2td/%<tY ", expDate, ) + String.format("%-15.15s %10s [%s]", expPayee, expAmount.toString(), expCategory, ), strOut = String.format("%1$2tm/%<2td/%<tY ", expDate, ) + String.format("%-15.15s %10s (%s) [%s]", expPayee, expAmount.toString(), expRemaining.toString(), expCategory, ), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
listNew : listNew = new ArrayList(), 

BLOCK: trueL88
expDate : expDate = exp.getDate(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
listNew : listNew = new ArrayList(), 
str : str = s.nextLine(), 
remainingAmount : remainingAmount = Double.parseDouble(scan.next(), ), 
exp : exp = expenseList, 
choice : choice = Integer.parseInt(scan.next(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
expPayee : expPayee = exp.getPayee(), 
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
expRemaining : expRemaining = getRemainingAmount(), 
error : error = true, error = true, 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
expCategory : expCategory = exp.getCategory(), 
expenseList : expenseList = listNew, 
out : out = new FileWriter("StoredExpenses", ), 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
expAmount : expAmount = exp.getAmountPaid(), 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
exp : exp = expenseList, 
strOut : strOut = String.format("%1$2tm/%<2td/%<tY ", expDate, ) + String.format("%-15.15s %10s [%s]", expPayee, expAmount.toString(), expCategory, ), strOut = null, strOut = String.format("%1$2tm/%<2td/%<tY ", expDate, ) + String.format("%-15.15s %10s (%s) [%s]", expPayee, expAmount.toString(), expRemaining.toString(), expCategory, ), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
listNew : listNew = new ArrayList(), 

BLOCK: falseL90
expDate : expDate = exp.getDate(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
listNew : listNew = new ArrayList(), 
remainingAmount : remainingAmount = Double.parseDouble(scan.next(), ), 
str : str = s.nextLine(), 
exp : exp = expenseList, 
choice : choice = Integer.parseInt(scan.next(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
expPayee : expPayee = exp.getPayee(), 
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
expRemaining : expRemaining = getRemainingAmount(), 
error : error = true, error = true, 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
expCategory : expCategory = exp.getCategory(), 
expenseList : expenseList = listNew, 
out : out = new FileWriter("StoredExpenses", ), 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
expAmount : expAmount = exp.getAmountPaid(), 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
exp : exp = expenseList, 
strOut : strOut = String.format("%1$2tm/%<2td/%<tY ", expDate, ) + String.format("%-15.15s %10s [%s]", expPayee, expAmount.toString(), expCategory, ), strOut = null, strOut = String.format("%1$2tm/%<2td/%<tY ", expDate, ) + String.format("%-15.15s %10s (%s) [%s]", expPayee, expAmount.toString(), expRemaining.toString(), expCategory, ), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
listNew : listNew = new ArrayList(), 

BLOCK: joinL89
expDate : expDate = exp.getDate(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
listNew : listNew = new ArrayList(), 
str : str = s.nextLine(), 
remainingAmount : remainingAmount = Double.parseDouble(scan.next(), ), 
exp : exp = expenseList, 
choice : choice = Integer.parseInt(scan.next(), ), 
payee : payee = s.nextLine(), payee = null, payee = s.nextLine(), 
df : df = new SimpleDateFormat("MM/dd/yyyy", ), 
expPayee : expPayee = exp.getPayee(), 
s : s = new Scanner(new BufferedReader(new FileReader("StoredExpenses", ), ), ), 
expRemaining : expRemaining = getRemainingAmount(), 
error : error = true, error = true, 
remainingAmount : remainingAmount = Double.parseDouble(s.nextLine(), ), remainingAmount = 0.0, 
expCategory : expCategory = exp.getCategory(), 
expenseList : expenseList = listNew, expenseList = listNew, 
out : out = new FileWriter("StoredExpenses", ), 
category : category = s.nextLine(), category = s.nextLine(), category = null, 
expAmount : expAmount = exp.getAmountPaid(), 
date : date = null, date = df.parse(s.nextLine(), ), date = df.parse(s.nextLine(), ), 
exp : exp = expenseList, 
strOut : strOut = String.format("%1$2tm/%<2td/%<tY ", expDate, ) + String.format("%-15.15s %10s [%s]", expPayee, expAmount.toString(), expCategory, ), strOut = null, strOut = String.format("%1$2tm/%<2td/%<tY ", expDate, ) + String.format("%-15.15s %10s (%s) [%s]", expPayee, expAmount.toString(), expRemaining.toString(), expCategory, ), 
amount : amount = 0.0, amount = Double.parseDouble(s.nextLine(), ), amount = Double.parseDouble(s.nextLine(), ), 
listNew : listNew = new ArrayList(), 

BLOCK: BasicL93
out : out = new FileWriter("StoredExpenses", ), 

BLOCK: BasicL94
out : out = new FileWriter("StoredExpenses", ), 
exp : exp = expenseList, 

BLOCK: LoopL95
out : out = new FileWriter("StoredExpenses", ), 
exp : exp = expenseList, 

BLOCK: BasicL96
out : out = new FileWriter("StoredExpenses", ), 
exp : exp = expenseList, 

BLOCK: trueL97
out : out = new FileWriter("StoredExpenses", ), 
exp : exp = expenseList, 

BLOCK: falseL99
out : out = new FileWriter("StoredExpenses", ), 
exp : exp = expenseList, 

BLOCK: joinL98
out : out = new FileWriter("StoredExpenses", ), 
exp : exp = expenseList, 

BLOCK: BasicL100
out : out = new FileWriter("StoredExpenses", ), 
exp : exp = expenseList, 

BLOCK: trueL101
out : out = new FileWriter("StoredExpenses", ), 
exp : exp = expenseList, 

BLOCK: joinL102
out : out = new FileWriter("StoredExpenses", ), 
exp : exp = expenseList, 

BLOCK: StartcomparatorBuilderL103

BLOCK: StartcomparatorBuilderL103

BLOCK: BasicL104

BLOCK: trueL106
c : c = new ExpenseDateComparator(), 

BLOCK: falseL108

BLOCK: trueL109
c : c = new ExpenseAmountComparator(), 

BLOCK: falseL111

BLOCK: trueL112
c : c = new ExpenseCategoryComparator(), 

BLOCK: falseL114

BLOCK: trueL115
c : c = new ExpensePayeeComparator(), 

BLOCK: joinL116
c : c = new ExpenseAmountComparator(), 
c : c = new ExpensePayeeComparator(), 
c : c = new ExpenseCategoryComparator(), 
c : c = new ExpenseDateComparator(), 

BLOCK: joinL113
c : c = new ExpenseAmountComparator(), 
c : c = new ExpensePayeeComparator(), 
c : c = new ExpenseCategoryComparator(), 
c : c = new ExpenseDateComparator(), 

BLOCK: joinL110
c : c = new ExpenseAmountComparator(), 
c : c = new ExpensePayeeComparator(), 
c : c = new ExpenseCategoryComparator(), 
c : c = new ExpenseDateComparator(), 

BLOCK: joinL107
c : c = new ExpenseAmountComparator(), 
c : c = new ExpensePayeeComparator(), 
c : c = new ExpenseCategoryComparator(), 
c : c = new ExpenseDateComparator(), 

BLOCK: StartrecursiveComparatorL117

BLOCK: StartrecursiveComparatorL117

BLOCK: BasicL118
comp : comp = comparatorBuilder(compArr[i], ), 

BLOCK: trueL120
comp : comp = comparatorBuilder(compArr[i], ), 

BLOCK: joinL121
comp : comp = comparatorBuilder(compArr[i], ), 

BLOCK: Startconstructor1L122
this.remainingAmount : this.remainingAmount = 0.0, 

BLOCK: Startconstructor1L122
this.remainingAmount : this.remainingAmount = 0.0, 

BLOCK: BasicL123
this.remainingAmount : this.remainingAmount = remainingAmount, 

BLOCK: StartgetRemainingAmountL125
this.remainingAmount : this.remainingAmount = 0.0, 

BLOCK: StartgetRemainingAmountL125
this.remainingAmount : this.remainingAmount = 0.0, 

BLOCK: BasicL126
this.remainingAmount : this.remainingAmount = 0.0, 

Unfiltered: 1
Filtered: 1


Duplicate found: 102_Code/102_hw4/dir29/Expensify.java lines [125, 139] and 102_Code/102_hw4/dir29/Expensify.java lines [125, 139]
102_Code/102_hw4/dir29/Expensify.java ----------
125 :	listNew = new ArrayList()
128 :	listNew.addAll(expenseList, )
130 :	expenseList = listNew
134 :	listNew = new ArrayList()
137 :	listNew.addAll(expenseList, )
139 :	expenseList = listNew
102_Code/102_hw4/dir29/Expensify.java ----------
134 :	listNew = new ArrayList()
137 :	listNew.addAll(expenseList, )
139 :	expenseList = listNew
125 :	listNew = new ArrayList()
128 :	listNew.addAll(expenseList, )
130 :	expenseList = listNew
===========================



[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 7.788 s
[INFO] Finished at: 2019-05-06T20:02:57-07:00
[INFO] Final Memory: 33M/1431M
[INFO] ------------------------------------------------------------------------
